Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: RungeKuttaPatchStrategy::useGhostCellImmersedBoundaryMethod(const RungeKuttaPatchStrategy *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (RungeKuttaPatchStrategy::useGhostCellImmersedBoundaryMethod(const RungeKuttaPatchStrategy *) const) /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp(755,9)

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::RungeKuttaLevelIntegrator(RungeKuttaLevelIntegrator *const, const std::string &, const std::shared_ptr<SAMRAI::tbox::Database> &, RungeKuttaPatchStrategy *, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::RungeKuttaLevelIntegrator(RungeKuttaLevelIntegrator *const, const std::string &, const std::shared_ptr<SAMRAI::tbox::Database> &, RungeKuttaPatchStrategy *, bool)) [4] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(259,28)
  -> (259,28) RungeKuttaLevelIntegrator::RungeKuttaLevelIntegrator(RungeKuttaLevelIntegrator *, const std::string &, const std::shared_ptr<SAMRAI::tbox::Database> &, RungeKuttaPatchStrategy *, bool)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(259,28):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegratorC2ERKSsRKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEEP23RungeKuttaPatchStrategyb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:259

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      21
            Global    :       0
            Local     :      21
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::RungeKuttaLevelIntegrator(RungeKuttaLevelIntegrator *, const std::string &, const std::shared_ptr<SAMRAI::tbox::Database> &, RungeKuttaPatchStrategy *, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::RungeKuttaLevelIntegrator(RungeKuttaLevelIntegrator *, const std::string &, const std::shared_ptr<SAMRAI::tbox::Database> &, RungeKuttaPatchStrategy *, bool)) [5] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(285,1)
  -> INLINE: (259,28) std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm>::shared_ptr(std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,28) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,28) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,28) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,28) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,28) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,28) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,28) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,28) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,28) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,28) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,28) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,28) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (259,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (259,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (259,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (259,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (259,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (259,28) std::shared_ptr<SAMRAI::hier::VariableContext>::shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (259,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> (259,28) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::~vector(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)
  -> (259,28) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::vector(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)
  -> (259,28) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::~vector(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)
  -> (259,28) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::vector(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)
  -> (259,28) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::~vector(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)
  -> (259,28) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::vector(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)
  -> (259,28) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
  -> INLINE: (259,28) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (259,28) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
  -> INLINE: (259,28) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (259,28) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
  -> INLINE: (259,28) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (259,28) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
  -> INLINE: (259,28) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (259,28) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
  -> INLINE: (259,28) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (259,28) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
  -> INLINE: (259,28) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (259,28) std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::~vector(std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *)
  -> (259,28) std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::vector(std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *)
  -> (259,28) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
  -> (259,28) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
  -> (259,28) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
  -> (259,28) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
  -> (259,28) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
  -> (259,28) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
  -> (259,28) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
  -> (259,28) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
  -> (259,28) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
  -> (259,28) std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::~vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>> *)
  -> (259,28) std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>> *)
  -> (259,28) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
  -> (259,28) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
  -> (259,28) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::~vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *)
  -> (259,28) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *)
  -> (259,28) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
  -> (259,28) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::~vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *)
  -> (259,28) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *)
  -> (259,28) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
  -> (259,28) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (259,28) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (259,28) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (259,28) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (259,28) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (259,28) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (259,28) std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm> *)
  -> INLINE: (265,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (268,11) SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()
  -> DELETED: (269,16) SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()
  -> DELETED: (272,10) SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()
  -> INLINE: (278,65) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (278,65) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (278,65) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (278,65)  EXPR_CONV.SI64.P64(*((SI64*) (__$U26e_V$1907.0.1778->__vptr_V$1106 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> (278,65) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
  -> INLINE: (279,65) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (279,65) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (279,65) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (279,65)  EXPR_CONV.SI64.P64(*((SI64*) (__$U271_V$190a.0.1778->__vptr_V$1106 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> (279,65) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
  -> INLINE: (280,61) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (280,61) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (280,61) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (280,61)  EXPR_CONV.SI64.P64(*((SI64*) (__$U274_V$190d.0.1778->__vptr_V$1106 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> (280,61) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
  -> INLINE: (281,20) std::shared_ptr<SAMRAI::hier::VariableContext>::shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (281,20) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
  -> INLINE: (282,67) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (282,67) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (282,67) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (282,67)  EXPR_CONV.SI64.P64(*((SI64*) (__$U277_V$1910.0.1778->__vptr_V$1106 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> (282,67) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
  -> INLINE: (295,61) SAMRAI::tbox::RestartManager::isFromRestart(SAMRAI::tbox::RestartManager *)
  -> (298,9) RungeKuttaLevelIntegrator::getFromRestart(RungeKuttaLevelIntegrator *)
  -> (300,5) RungeKuttaLevelIntegrator::getFromInput(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::tbox::Database> &, bool)
  -> INLINE: (302,20) std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::resize(std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *, std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (303,34) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::resize(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *, std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (304,34) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::resize(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *, std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (305,36) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::resize(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *, std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (308,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (308,54) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (308,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (308,56) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (309,23) std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *, std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::size_type)
  -> INLINE: (309,28) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (309,28) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, std::shared_ptr<SAMRAI::hier::VariableContext> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (309,80)  EXPR_CONV.SI64.P64(*((SI64*) (__$U27a_V$191a.0.1778->__vptr_V$1106 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (310,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(302,20)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(303,34)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,8) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(303,34)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(303,34)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(303,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(303,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(304,34)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,8) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(304,34)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(304,34)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(304,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(304,34)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(305,36)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(306,5)
   remark #15523: loop was not vectorized: loop control variable sn was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_list.h(315,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_list.h(315,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_list.h(315,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_list.h(315,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_list.h(315,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_list.h(315,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(285,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegratorC1ERKSsRKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEEP23RungeKuttaPatchStrategyb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:285

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     730
            Global    :     196
            Local     :     534
        Regenerable   :     123
        Spilled       :      70
        
    Routine stack
        Variables     :     105 bytes*
            Reads     :      26 [3.90e+01 ~ 5.2%]
            Writes    :      48 [3.50e+01 ~ 4.7%]
        Spills        :     504 bytes*
            Reads     :     124 [8.00e+00 ~ 1.1%]
            Writes    :      78 [4.79e+01 ~ 6.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MathUtilities<double>::getSignalingNaN()) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(152,1)

===========================================================================

Begin optimization report for: std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::vector(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIN6SAMRAI4hier17ComponentSelectorESaIS2_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::~vector(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIN6SAMRAI4hier17ComponentSelectorESaIS2_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rbx rbp rdi r15]
        
    Routine temporaries
        Total         :      12
            Global    :       9
            Local     :       3
        Regenerable   :       0
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.96e+00 ~ 4.8%]
            Writes    :       3 [2.96e+00 ~ 4.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/list.tcc(70,7) inlined into /usr/include/c++/4.8.5/bits/stl_list.h(439,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_list.h(438,11):remark #34051: REGISTER ALLOCATION : [_ZNSt4listISt10shared_ptrIN6SAMRAI4hier8VariableEESaIS4_EED1Ev] /usr/include/c++/4.8.5/bits/stl_list.h:438

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rdi r12-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       3
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [3.88e+00 ~ 4.0%]
            Writes    :       5 [3.88e+00 ~ 4.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4hier15VariableContextEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4xfer15RefineAlgorithmEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4xfer16CoarsenAlgorithmEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4xfer14RefineScheduleEESaIS4_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIS_IdSaIdEESaIS1_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4mesh17GriddingAlgorithmEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4xfer15RefineAlgorithmEESaIS4_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::vector(std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4hier15VariableContextEESaIS4_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::getFromInput(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::tbox::Database> &, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::getFromInput(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::tbox::Database> &, bool)) [24] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4096,1)
  -> INLINE: (4097,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4099,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4099,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4099,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4099,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4099,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4099,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4099,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4099,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4099,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4099,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4099,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4099,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4099,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (4099,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4105,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4105,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4105,29) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4105,50) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4105,50) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4105,50) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4105,61)  EXPR_CONV.SI64.P64(*((SI64*) (__$U350_V$1c7f.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> DELETED: (4109,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4109,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4109,29) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4109,41) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4109,41) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (4109,41)  EXPR_CONV.SI64.P64(*((SI64*) (__$U359_V$1c88.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(49(SI32)) * 8(I64))))
  -> INLINE: (4109,41) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4110,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4110,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4110,34) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4110,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4110,46) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (4110,46)  EXPR_CONV.SI64.P64(*((SI64*) (__$U35a_V$1c89.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(49(SI32)) * 8(I64))))
  -> INLINE: (4110,46) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4111,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4111,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4111,44) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4111,65) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4111,65) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4111,65) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4111,87)  EXPR_CONV.SI64.P64(*((SI64*) (__$U35c_V$1c8b.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> INLINE: (4112,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4112,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4112,43) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4112,64) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4112,64) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4112,64) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4112,92)  EXPR_CONV.SI64.P64(*((SI64*) (__$U35e_V$1c8d.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> INLINE: (4116,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4116,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4116,28) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4116,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4116,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4116,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4116,40)  EXPR_CONV.SI64.P64(*((SI64*) (__$U361_V$1c90.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(49(SI32)) * 8(I64))))
  -> INLINE: (4119,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4119,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4119,53) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4119,74) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4119,74) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4119,74) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4119,113)  EXPR_CONV.SI64.P64(*((SI64*) (__$U352_V$1c81.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> INLINE: (4121,21) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4121,33) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4121,33) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4121,33) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4121,33)  EXPR_CONV.SI64.P64(*((SI64*) (__$U353_V$1c82.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (4121,33) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4121,33) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (4123,47) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4123,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4123,61) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> (4123,75) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (4123,75) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4123,75) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (4123,75)  EXPR_CONV.SI64.P64(*((SI64*) (__$U364_V$1c93.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (4123,75) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4125,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4125,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4125,35) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4125,48) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4125,48) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (4125,48)  EXPR_CONV.SI64.P64(*((SI64*) (__$U367_V$1c96.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (4125,48) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4127,21) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> (4128,20) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> (4129,21) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4133,29) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4133,57) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4133,57) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4133,59) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4134,29) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4134,55) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4134,55) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4134,57) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4135,29) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4135,57) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4135,57) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4135,59) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4137,26) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4137,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U36b_V$1c9c.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (4139,52) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4139,67)  EXPR_CONV.SI64.P64(*((SI64*) (__$U36e_V$1ca2.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (4143,32) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4143,37) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4143,37) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4143,44) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4143,62)  EXPR_CONV.SI64.P64(*((SI64*) (__$U370_V$1ca5.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (4147,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4147,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4147,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4147,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4147,25) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4147,25) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4147,25) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4147,25) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4147,25) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4147,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4147,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4147,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4147,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4147,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4147,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4147,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4157,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4157,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4157,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4157,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4157,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4157,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4157,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4157,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4157,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4157,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4157,21) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4157,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4157,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4157,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4157,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4157,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4164,26) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4164,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U36c_V$1c9d.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (4166,51) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4166,66)  EXPR_CONV.SI64.P64(*((SI64*) (__$U377_V$1cb2.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (4170,31) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4170,36) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4170,36) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4170,43) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4170,61)  EXPR_CONV.SI64.P64(*((SI64*) (__$U379_V$1cb5.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (4174,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4174,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4174,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4174,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4174,25) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4174,25) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4174,25) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4174,25) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4174,25) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4174,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4174,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4174,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4174,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4174,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4174,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4174,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4184,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4184,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4184,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4184,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4184,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4184,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4184,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4184,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4184,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4184,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4184,21) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4184,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4184,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4184,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4184,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4184,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4191,26) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4191,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U36d_V$1c9e.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (4193,52) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4193,67)  EXPR_CONV.SI64.P64(*((SI64*) (__$U380_V$1cbe.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (4197,32) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4197,37) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4197,37) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4197,44) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4197,62)  EXPR_CONV.SI64.P64(*((SI64*) (__$U382_V$1cc1.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (4201,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4201,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4201,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4201,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4201,25) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4201,25) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4201,25) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4201,25) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4201,25) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4201,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4201,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4201,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4201,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4201,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4201,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4201,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4211,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4211,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4211,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4211,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4211,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4211,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4211,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4211,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4211,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4211,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4211,21) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4211,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4211,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4211,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4211,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4211,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4217,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4217,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4217,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4218,9) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4223,21) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> (4224,20) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> (4225,21) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4229,24) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4229,29) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4230,23) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4230,28) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4231,24) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4231,29) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4234,20) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4234,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4235,20) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4235,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4236,20) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4236,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4237,20) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4237,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4238,20) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4238,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4239,20) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4239,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4241,19) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4241,22) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4242,19) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4242,22) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4243,19) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4243,22) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4244,19) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4244,22) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4245,19) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4245,22) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4246,19) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4246,22) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4248,20) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4248,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4249,20) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4249,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4250,20) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4250,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4251,20) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4251,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4252,20) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4252,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4253,20) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4253,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4256,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4256,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4256,41) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4256,62) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4256,62) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4256,62) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4256,85)  EXPR_CONV.SI64.P64(*((SI64*) (__$U356_V$1c85.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> INLINE: (4258,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4260,14) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4260,14) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4260,40) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4260,61) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4260,61) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4260,61) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4260,80)  EXPR_CONV.SI64.P64(*((SI64*) (__$U38c_V$1cce.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> DELETED: (4264,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4264,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4264,33) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4264,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4264,54) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4264,54) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4264,65)  EXPR_CONV.SI64.P64(*((SI64*) (__$U392_V$1cd7.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> INLINE: (4268,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4268,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4268,33) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4268,56) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4268,56) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4268,56) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4268,63)  EXPR_CONV.SI64.P64(*((SI64*) (__$U398_V$1cdd.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(50(SI32)) * 8(I64))))
  -> INLINE: (4270,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4270,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4270,38) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4270,61) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4270,61) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4270,61) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4270,73)  EXPR_CONV.SI64.P64(*((SI64*) (__$U399_V$1cde.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(50(SI32)) * 8(I64))))
  -> INLINE: (4272,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4272,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4273,28) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4273,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4273,49) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4273,49) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4274,23)  EXPR_CONV.SI64.P64(*((SI64*) (__$U39a_V$1cdf.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> INLINE: (4276,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4276,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4277,28) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4277,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4277,49) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4277,49) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4278,23)  EXPR_CONV.SI64.P64(*((SI64*) (__$U39b_V$1ce0.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> DELETED: (4282,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4282,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4282,32) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4282,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4282,44) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (4282,44)  EXPR_CONV.SI64.P64(*((SI64*) (__$U39e_V$1ce3.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(49(SI32)) * 8(I64))))
  -> INLINE: (4282,44) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4285,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4285,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4286,25) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4286,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4286,46) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4286,46) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4287,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U393_V$1cd8.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> INLINE: (4289,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4289,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4289,45) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4289,66) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4289,66) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4289,66) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4289,89)  EXPR_CONV.SI64.P64(*((SI64*) (__$U395_V$1cda.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> INLINE: (4292,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4292,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4292,41) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4292,65) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4292,65) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4292,65) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4292,88)  EXPR_CONV.SI64.P64(*((SI64*) (__$U38e_V$1cd0.0.1827->__vptr_V$100b + EXPR_CONV.SI32.I64(66(SI32)) * 8(I64))))


    Report from: Offload optimizations [offload]

OpenMP Construct at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4096,1)
remark #16219: Some OpenMP processing was skipped to constrain compile time. Consider overriding limits (-qoverride-limits).

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4227,13)
   remark #15523: loop was not vectorized: loop control variable sn was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4131,13)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4133,59) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4096,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator12getFromInputERKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEEb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:4096

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :    3259
            Global    :     779
            Local     :    2480
        Regenerable   :    1199
        Spilled       :      47
        
    Routine stack
        Variables     :    3140 bytes*
            Reads     :     245 [4.67e+01 ~ 6.1%]
            Writes    :     418 [1.05e+02 ~ 13.8%]
        Spills        :     328 bytes*
            Reads     :      92 [4.18e+00 ~ 0.5%]
            Writes    :      59 [3.73e+00 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::_M_move_assign(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&, std::true_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(1363,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEE14_M_move_assignEOS1_St17integral_constantIbLb1EE] /usr/include/c++/4.8.5/bits/stl_vector.h:1363

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rsi rdi r8-r13]
        
    Routine temporaries
        Total         :      26
            Global    :      11
            Local     :      15
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :      25 bytes*
            Reads     :       3 [3.00e+00 ~ 6.6%]
            Writes    :       3 [8.35e-01 ~ 1.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::char_traits<char>::length(const std::char_traits<char>::char_type *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(259,7):remark #34051: REGISTER ALLOCATION : [_ZNSt11char_traitsIcE6lengthEPKc] /usr/include/c++/4.8.5/bits/char_traits.h:259

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       7
            Local     :       5
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (160:9) and call:operator delete(void *) (110:9)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(670,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (160:9) and call:operator delete(void *) (110:9)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(665,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIS_IdSaIdEESaIS1_EE6resizeEm] /usr/include/c++/4.8.5/bits/stl_vector.h:665

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :      67
            Global    :      30
            Local     :      37
        Regenerable   :       6
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       6 [1.50e-01 ~ 0.3%]
            Writes    :       6 [1.50e-01 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::getFromRestart(RungeKuttaLevelIntegrator *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::getFromRestart(RungeKuttaLevelIntegrator *)) [34] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4310,1)
  -> (4312,45) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (4312,45) SAMRAI::tbox::RestartManager::getRootDatabase(std::shared_ptr<SAMRAI::tbox::Database> *, SAMRAI::tbox::RestartManager *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/RestartManager.h:(131,14) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *, const std::shared_ptr<SAMRAI::tbox::Database> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4314,17) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4314,30)  EXPR_CONV.SI64.P64(*((SI64*) (__$U39f_V$1ce6.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(9(SI32)) * 8(I64))))
  -> INLINE: (4316,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4316,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4316,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4316,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4316,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4316,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4316,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4316,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4316,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4316,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4316,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4316,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4316,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4316,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4316,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4320,49) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> (4320,63) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INDIRECT- (VIRTUAL): (4320,63)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3a0_V$1ce7.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (4322,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4322,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4322,17) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4322,30) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4322,30) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4322,30) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4322,30)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3a3_V$1cea.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (4325,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4325,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4325,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4325,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4325,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4325,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4325,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4325,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4325,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4325,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4325,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4325,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4325,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4325,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4325,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4325,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4332,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4332,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4332,19) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4332,29) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4332,29) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4332,29) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4332,29)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3a4_V$1ceb.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(17(SI32)) * 8(I64))))
  -> INLINE: (4333,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4333,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4333,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4333,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4333,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4333,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4333,27)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3a5_V$1cec.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(49(SI32)) * 8(I64))))
  -> INLINE: (4334,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4334,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4334,20) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4334,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4334,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4334,32) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4334,32)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3a6_V$1ced.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(49(SI32)) * 8(I64))))
  -> INLINE: (4335,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4335,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4335,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4335,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4335,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4335,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4335,40)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3a7_V$1cee.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(17(SI32)) * 8(I64))))
  -> INLINE: (4336,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4336,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4336,29) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4336,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4336,39) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4336,39) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4336,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3a8_V$1cef.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(17(SI32)) * 8(I64))))
  -> INLINE: (4337,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4337,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4337,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4337,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4337,26) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4337,26) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4337,26)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3a9_V$1cf0.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(49(SI32)) * 8(I64))))
  -> INLINE: (4338,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4338,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4338,43) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4338,53) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4338,53) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4338,53) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4338,53)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3aa_V$1cf1.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(17(SI32)) * 8(I64))))
  -> INLINE: (4340,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4340,39) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4340,47) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4340,61) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4340,61) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4340,61) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4340,61)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3ab_V$1cf2.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> (4340,61) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> DELETED: (4342,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4342,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4342,27) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4342,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4342,40)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3ae_V$1cf5.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (4342,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4342,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4344,13) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4345,12) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4346,13) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::resize(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4350,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4350,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4350,49) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4350,51) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4351,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4351,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4351,47) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4351,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4352,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4352,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4352,49) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4352,51) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4354,16) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4354,21) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4354,21) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4354,28) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4354,46)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3ba_V$1d0c.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (4355,15) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4355,20) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4355,20) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4355,27) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4355,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3bb_V$1d0d.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (4356,16) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (4356,21) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4356,21) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4356,28) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4356,46)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3bc_V$1d0e.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (4357,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4357,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4357,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4359,5) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4359,5) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4359,5) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4359,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4359,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4359,34) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4359,44) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4359,44)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3af_V$1cf6.0.1828->__vptr_V$100b + EXPR_CONV.SI32.I64(17(SI32)) * 8(I64))))
  -> INLINE: (4359,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4359,44) std::allocator<char>::~allocator(std::allocator<char> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4344,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4345,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4346,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4348,5)
   remark #15523: loop was not vectorized: loop control variable sn was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_vector.h(444,9):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4310,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator14getFromRestartEv] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:4310

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :    1407
            Global    :     358
            Local     :    1049
        Regenerable   :     496
        Spilled       :       9
        
    Routine stack
        Variables     :    1049 bytes*
            Reads     :     115 [1.86e+02 ~ 12.5%]
            Writes    :     150 [1.39e+02 ~ 9.4%]
        Spills        :      24 bytes*
            Reads     :       5 [5.78e+00 ~ 0.4%]
            Writes    :       3 [1.13e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, const std::vector<double, std::allocator<double>>::allocator_type &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(257,20):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1ERKS0_] /usr/include/c++/4.8.5/bits/stl_vector.h:257

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4tbox8DatabaseEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: _ZN25RungeKuttaLevelIntegratorD0Ev(RungeKuttaLevelIntegrator *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (_ZN25RungeKuttaLevelIntegratorD0Ev(RungeKuttaLevelIntegrator *)) [39] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn16_N25RungeKuttaLevelIntegratorD0Ev] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      25
            Global    :       0
            Local     :      25
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::~RungeKuttaLevelIntegrator(RungeKuttaLevelIntegrator *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::~RungeKuttaLevelIntegrator(RungeKuttaLevelIntegrator *const)) [40] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(329,28)
  -> (329,28) RungeKuttaLevelIntegrator::~RungeKuttaLevelIntegrator(RungeKuttaLevelIntegrator *)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(329,28):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegratorD0Ev] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:329

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rdi r13]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::~RungeKuttaLevelIntegrator(RungeKuttaLevelIntegrator *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::~RungeKuttaLevelIntegrator(RungeKuttaLevelIntegrator *)) [41] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(330,1)
  -> (330,1) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::~vector(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)
  -> (330,1) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::~vector(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)
  -> (330,1) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::~vector(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)
  -> (330,1) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
  -> (330,1) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
  -> (330,1) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
  -> (330,1) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
  -> (330,1) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
  -> (330,1) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
  -> (330,1) std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::~vector(std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *)
  -> (330,1) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
  -> (330,1) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
  -> (330,1) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
  -> (330,1) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
  -> (330,1) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
  -> (330,1) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
  -> (330,1) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
  -> (330,1) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
  -> (330,1) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
  -> (330,1) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
  -> (330,1) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
  -> (330,1) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
  -> (330,1) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
  -> (330,1) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
  -> (330,1) std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::~vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>> *)
  -> (330,1) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
  -> (330,1) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
  -> (330,1) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::~vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *)
  -> (330,1) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
  -> (330,1) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::~vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *)
  -> (330,1) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
  -> (330,1) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (330,1) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (330,1) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> INLINE: (330,1) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (330,1) std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm> *)
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (332,1) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (332,1) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> (332,1) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (332,1) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::~vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *)
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (332,1) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::~vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *)
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (332,1) std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::~vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>> *)
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (332,1) std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::~vector(std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *)
  -> INLINE: (332,1) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::~list(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::~vector(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::~vector(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,1) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::~vector(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(332,1)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(332,1)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(332,1)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/list.tcc(70,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(332,1)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/list.tcc(70,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(332,1)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/list.tcc(70,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(332,1)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/list.tcc(70,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(332,1)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/list.tcc(70,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(332,1)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/list.tcc(70,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(332,1)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(330,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegratorD1Ev] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:330

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :     536
            Global    :     131
            Local     :     405
        Regenerable   :      76
        Spilled       :       6
        
    Routine stack
        Variables     :      10 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       4 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::~vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4xfer14RefineScheduleEESaIS4_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       3
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [4.93e+00 ~ 4.5%]
            Writes    :       5 [4.93e+00 ~ 4.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::~_Vector_base(std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4xfer14RefineScheduleEESaIS4_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~vector(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (160:9) and call:operator delete(void *) (110:9)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIS_IdSaIdEESaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rbx rbp rdi r15]
        
    Routine temporaries
        Total         :      13
            Global    :      10
            Local     :       3
        Regenerable   :       0
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.96e+00 ~ 4.3%]
            Writes    :       3 [2.96e+00 ~ 4.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::~_Vector_base(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt6vectorIdSaIdEESaIS2_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::~_Vector_base(std::_Vector_base<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIN6SAMRAI4hier17ComponentSelectorESaIS2_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::~vector(std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4xfer15RefineAlgorithmEESaIS4_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       3
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [4.93e+00 ~ 4.5%]
            Writes    :       5 [4.93e+00 ~ 4.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::~_Vector_base(std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4xfer15RefineAlgorithmEESaIS4_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::~vector(std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4hier15VariableContextEESaIS4_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       3
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [4.93e+00 ~ 4.5%]
            Writes    :       5 [4.93e+00 ~ 4.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::~_Vector_base(std::_Vector_base<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4hier15VariableContextEESaIS4_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: _ZN25RungeKuttaLevelIntegratorD0Ev(RungeKuttaLevelIntegrator *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (_ZN25RungeKuttaLevelIntegratorD0Ev(RungeKuttaLevelIntegrator *)) [51] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegratorD0Ev] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      25
            Global    :       0
            Local     :      25
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::~RungeKuttaLevelIntegrator(RungeKuttaLevelIntegrator *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::~RungeKuttaLevelIntegrator(RungeKuttaLevelIntegrator *const)) [52] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(329,28)
  -> (329,28) RungeKuttaLevelIntegrator::~RungeKuttaLevelIntegrator(RungeKuttaLevelIntegrator *)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(329,28):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegratorD2Ev] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:329

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: _ZN25RungeKuttaLevelIntegratorD1Ev(RungeKuttaLevelIntegrator *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (_ZN25RungeKuttaLevelIntegratorD1Ev(RungeKuttaLevelIntegrator *)) [53] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn16_N25RungeKuttaLevelIntegratorD1Ev] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      25
            Global    :       0
            Local     :      25
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: _ZN25RungeKuttaLevelIntegratorD1Ev(RungeKuttaLevelIntegrator *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (_ZN25RungeKuttaLevelIntegratorD1Ev(RungeKuttaLevelIntegrator *)) [54] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegratorD1Ev] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      25
            Global    :       0
            Local     :      25
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: getLevelDt(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (getLevelDt(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, bool)) [55] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegrator10getLevelDtERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEEdb] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rdx rcx rsi rdi r8-r9 zmm0]
        
    Routine temporaries
        Total         :      28
            Global    :       0
            Local     :      28
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::getLevelDt(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::getLevelDt(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, bool)) [56] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1388,1)
  -> INLINE: (1393,19) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1397,42) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1397,44) SAMRAI::hier::PatchLevel::getBoxLevel(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1397,57) std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1397,59) SAMRAI::hier::BoxLevel::getMPI(const SAMRAI::hier::BoxLevel *) const
  -> DELETED: (1399,21) SAMRAI::tbox::MathUtilities<double>::getMax()
  -> DELETED: (1400,29) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INDIRECT- (VIRTUAL): (1400,47)  EXPR_CONV.SI64.P64(*((SI64*) ((this_81405_V$194f.0.1788->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(13(SI32)) * 8(I64))))
  -> (1400,96) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> DELETED: (1400,96) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (1400,96) std::allocator<double>::allocator(std::allocator<double> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1400,96) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &)
  -> INLINE: (1406,31) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1408,52) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1408,54) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1409,20) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (1409,20) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (1409,28) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1409,28) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1409,30) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1409,30) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1410,19) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1412,63) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1414,22) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1418,25) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> (1420,25) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> INDIRECT- (VIRTUAL): (1420,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U298_V$195d.0.1788->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> INLINE: (1422,74) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (1422,74) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (1424,38) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1424,45) SAMRAI::tbox::MathUtilities<double>::Max(double, double)
  -> INLINE: (1425,42) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1425,78) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1428,22) SAMRAI::tbox::MathUtilities<double>::Min(double, double)
  -> INLINE: (1428,90) std::vector<double, std::allocator<double>>::back(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1437,22) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1438,13) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1441,70) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (1441,70) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (1443,25) SAMRAI::tbox::SAMRAI_MPI::getSize(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> INLINE: (1445,53) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1448,57) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1451,18) SAMRAI::tbox::MathUtilities<double>::Min(double, double)
  -> INLINE: (1453,31) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1459,18) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1459,20) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1461,31) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1463,37) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1464,33) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
  -> INLINE: (1464,39) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1464,41) SAMRAI::hier::PatchLevel::getLevelNumber(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1464,58) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1465,37) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1467,53) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1467,55) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1468,21) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (1468,21) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (1468,29) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1468,29) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1468,31) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1468,31) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1469,20) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1471,63) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1473,22) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1477,25) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> (1479,25) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> INDIRECT- (VIRTUAL): (1479,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U29a_V$1965.0.1788->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> INLINE: (1481,74) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (1481,74) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (1483,38) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1483,45) SAMRAI::tbox::MathUtilities<double>::Max(double, double)
  -> INLINE: (1484,42) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1484,78) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1487,22) SAMRAI::tbox::MathUtilities<double>::Min(double, double)
  -> INLINE: (1487,90) std::vector<double, std::allocator<double>>::back(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1496,22) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1497,13) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1500,70) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (1500,70) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (1502,25) SAMRAI::tbox::SAMRAI_MPI::getSize(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> INLINE: (1504,53) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1507,57) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1510,18) SAMRAI::tbox::MathUtilities<double>::Min(double, double)
  -> INLINE: (1512,31) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (1520,53)  RungeKuttaLevelIntegrator::copyTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) (1831)
  -> INLINE: (1522,18) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1522,20) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1525,28) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1530,32) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1531,42) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1539,17) SAMRAI::tbox::SAMRAI_MPI::getSize(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> INLINE: (1543,22) SAMRAI::tbox::MathUtilities<double>::Min(double, double)
  -> INLINE: (1547,42) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1551,32) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1553,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1559,19) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1409,20)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1422,74)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1422,74)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1422,74)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1422,74)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1441,70)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1459,20)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1468,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1481,74)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1481,74)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1481,74)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1481,74)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1500,70)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(829,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1522,20)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1388,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator10getLevelDtERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEEdb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:1388

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm7]
        
    Routine temporaries
        Total         :     440
            Global    :     106
            Local     :     334
        Regenerable   :      81
        Spilled       :      17
        
    Routine stack
        Variables     :     257 bytes*
            Reads     :      47 [2.86e+01 ~ 3.8%]
            Writes    :      21 [9.76e+00 ~ 1.3%]
        Spills        :      96 bytes*
            Reads     :      28 [1.84e+01 ~ 2.5%]
            Writes    :      20 [1.24e+01 ~ 1.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(285,9)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(285,9)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(285,9)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(284,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1EmRKdRKS0_] /usr/include/c++/4.8.5/bits/stl_vector.h:284

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rsi rdi r12-r13 r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :      35
            Global    :      21
            Local     :      14
        Regenerable   :       2
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::tbox::MathUtilities<double>::getMax()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MathUtilities<double>::getMax()) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(159,1)

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::getMaxFinerLevelDt(RungeKuttaLevelIntegrator *, int, double, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::getMaxFinerLevelDt(RungeKuttaLevelIntegrator *, int, double, const SAMRAI::hier::IntVector &)) [59] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1578,1)
  -> INLINE: (1582,33) SAMRAI::hier::IntVector::getDim(const SAMRAI::hier::IntVector *) const
  -> INLINE: (1582,33) SAMRAI::hier::IntVector::getDim(const SAMRAI::hier::IntVector *) const
  -> INLINE: (1582,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1582,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1587,37) SAMRAI::hier::IntVector::max(const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(991,25) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(992,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(994,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(995,27) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(993,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1587,37)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(993,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1587,37)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(993,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1587,37)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1578,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator18getMaxFinerLevelDtEidRKN6SAMRAI4hier9IntVectorE] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:1578

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rsi rdi r8-r9 zmm0-zmm7]
        
    Routine temporaries
        Total         :      43
            Global    :      18
            Local     :      25
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: advanceLevel(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, double, double, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (advanceLevel(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, double, double, bool, bool, bool)) [60] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegrator12advanceLevelERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEERKS0_INS2_14PatchHierarchyEEddbbb] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rdx rcx rsi rdi r8-r9 zmm0-zmm1]
        
    Routine temporaries
        Total         :      31
            Global    :       0
            Local     :      31
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::advanceLevel(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, double, double, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::advanceLevel(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, double, double, bool, bool, bool)) [61] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1674,1)
  -> (1682,5) RungeKuttaLevelIntegrator::recordStatistics(RungeKuttaLevelIntegrator *, const SAMRAI::hier::PatchLevel &, double)
  -> INLINE: (1682,22) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1685,20) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1687,35) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1687,37) SAMRAI::hier::PatchLevel::getLevelNumber(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1697,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (1697,12) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
  -> INLINE: (1698,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (1698,12) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
  -> INLINE: (1702,14) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (1702,16) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
  -> INLINE: (1702,62) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::operator[](std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *, std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::size_type)
  -> INLINE: (1703,14) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (1703,16) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
  -> INLINE: (1703,62) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::operator[](std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *, std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::size_type)
  -> INLINE: (1704,14) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (1704,16) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
  -> INLINE: (1704,64) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::operator[](std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *, std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::size_type)
  -> (1707,45) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
  -> INLINE: (1707,45) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1709,15) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1709,17) SAMRAI::hier::PatchLevel::inHierarchy(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1711,33) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1715,37) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1715,39) SAMRAI::hier::PatchLevel::getNextCoarserHierarchyLevelNumber(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1722,31) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1722,31) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::operator=(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *, std::shared_ptr<SAMRAI::xfer::RefineSchedule> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1722,31) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1723,44) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (1725,25) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
  -> INLINE: (1725,25) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1729,31) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1729,31) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::operator=(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *, std::shared_ptr<SAMRAI::xfer::RefineSchedule> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1729,31) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1730,40) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (1732,25) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
  -> INLINE: (1732,25) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1740,31) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1740,31) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::operator=(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *, std::shared_ptr<SAMRAI::xfer::RefineSchedule> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1740,31) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1741,44) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (1746,25) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
  -> INLINE: (1746,25) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1750,31) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::operator=(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *, std::shared_ptr<SAMRAI::xfer::RefineSchedule> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1750,31) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1750,31) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1751,40) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (1756,25) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
  -> INLINE: (1756,25) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1759,33) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1763,23) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::operator=(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *, const std::shared_ptr<SAMRAI::xfer::RefineSchedule> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1763,45) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
  -> (1766,23) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
  -> INLINE: (1770,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1774,33) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1777,18) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1781,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1785,33) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> (1788,23) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
  -> INLINE: (1789,19) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (1797,9)  RungeKuttaLevelIntegrator::preprocessFluxAndSourceData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, double, bool, bool, bool) (1829)
  -> INLINE: (1814,23) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1822,9)  EXPR_CONV.SI64.P64(*((SI64*) ((this_81440_V$1973.0.1791->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(19(SI32)) * 8(I64))))
  -> INLINE: (1824,23) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1826,45) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (1826,47) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1827,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (1827,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (1827,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1827,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (1827,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> (1827,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> (1828,12) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
  -> INLINE: (1830,55) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1832,14) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1837,13) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::begin(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1839,25) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (1839,25) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (1839,28) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1839,28) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1843,60) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1844,21) std::shared_ptr<SAMRAI::pdat::FaceData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::FaceData<double>> *)
  -> INLINE: (1844,21) std::static_pointer_cast<SAMRAI::pdat::FaceData<double>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::FaceData<double>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1845,30) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> (1845,32) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
  -> INLINE: (1845,45) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INLINE: (1848,26) std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> (1848,28) SAMRAI::pdat::FaceData<double>::fillAll(SAMRAI::pdat::FaceData<double> *, const double &)
  -> INLINE: (1849,13) std::shared_ptr<SAMRAI::pdat::FaceData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::FaceData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1852,60) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1853,21) std::shared_ptr<SAMRAI::pdat::SideData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<double>> *)
  -> INLINE: (1853,21) std::static_pointer_cast<SAMRAI::pdat::SideData<double>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::SideData<double>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1854,30) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> (1854,32) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
  -> INLINE: (1854,45) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INLINE: (1857,26) std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic> *) const
  -> (1857,28) SAMRAI::pdat::SideData<double>::fillAll(SAMRAI::pdat::SideData<double> *, const double &)
  -> INLINE: (1858,13) std::shared_ptr<SAMRAI::pdat::SideData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1860,21) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator++(std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, int)
  -> INLINE: (1866,13) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::begin(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1868,27) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (1868,27) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (1868,30) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1868,30) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1870,56) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1871,17) std::static_pointer_cast<SAMRAI::pdat::CellData<double>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::CellData<double>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1871,17) std::shared_ptr<SAMRAI::pdat::CellData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<double>> *)
  -> INLINE: (1872,26) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> (1872,28) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
  -> INLINE: (1872,41) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INLINE: (1874,24) std::__shared_ptr<SAMRAI::pdat::CellData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<double>, __gnu_cxx::_S_atomic> *) const
  -> (1874,26) SAMRAI::pdat::CellData<double>::fillAll(SAMRAI::pdat::CellData<double> *, const double &)
  -> INLINE: (1876,23) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator++(std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, int)
  -> INLINE: (1877,9) std::shared_ptr<SAMRAI::pdat::CellData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1880,42) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1880,44) SAMRAI::hier::PatchHierarchy::getMPI(const SAMRAI::hier::PatchHierarchy *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(696,32) std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(696,34) SAMRAI::hier::BoxLevel::getMPI(const SAMRAI::hier::BoxLevel *) const
  -> (1883,27) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
  -> INLINE: (1883,56) std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *, std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::size_type)
  -> INLINE: (1886,63) std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *, std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::size_type)
  -> INDIRECT- (VIRTUAL): (1886,63)  RungeKuttaLevelIntegrator::copyTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) (1831)
  -> INLINE: (1892,49) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1892,49) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
  -> INLINE: (1894,36) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1894,36) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1894,36) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::operator=(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *, std::shared_ptr<SAMRAI::xfer::RefineSchedule> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1895,37) std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::size_type)
  -> INLINE: (1895,41) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1897,17) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1897,17) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
  -> INLINE: (1903,39) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1907,41) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1910,39) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1914,39) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1918,41) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> (1922,27) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
  -> INLINE: (1924,31) RungeKuttaPatchStrategy::useGhostCellImmersedBoundaryMethod(const RungeKuttaPatchStrategy *) const
  -> INLINE: (1926,53) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (1926,55) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1927,20) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (1927,20) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (1927,28) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1927,28) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (1927,30) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> (1927,30) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> (1928,19) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
  -> INLINE: (1930,63) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1932,35) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> (1934,35) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
  -> INLINE: (1938,21) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1941,35) std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *, std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::size_type)
  -> INDIRECT- (VIRTUAL): (1941,35)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2b0_V$19aa.0.1791->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
  -> INLINE: (1943,35) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1948,39) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1952,41) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1956,56) std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *, std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::size_type)
  -> INDIRECT- (VIRTUAL): (1956,62)  RungeKuttaLevelIntegrator::copyTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) (1831)
  -> INLINE: (1957,39) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1961,39) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1965,41) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> (1968,31) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
  -> (1972,27) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
  -> INLINE: (1974,49) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (1974,51) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1975,17) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (1975,17) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (1975,25) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1975,25) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (1975,27) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> (1975,27) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> (1976,16) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
  -> INLINE: (1978,59) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1980,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1984,17) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1988,31) std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *, std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::size_type)
  -> INDIRECT- (VIRTUAL): (1988,31)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2b2_V$19ae.0.1791->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(16(SI32)) * 8(I64))))
  -> INLINE: (1992,17) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1995,24) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1996,23) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INLINE: (1997,24) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)
  -> INDIRECT- (VIRTUAL): (1998,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2b3_V$19af.0.1791->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(17(SI32)) * 8(I64))))
  -> INLINE: (2000,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2003,36) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2004,5) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2006,45) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (2006,47) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (2007,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (2007,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (2007,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2007,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (2007,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> (2007,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> (2008,12) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
  -> INLINE: (2010,55) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2012,14) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> (2015,23) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
  -> INLINE: (2017,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (2017,12) SAMRAI::hier::PatchLevel::setTime(SAMRAI::hier::PatchLevel *, double, const SAMRAI::hier::ComponentSelector &)
  -> INLINE: (2018,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (2018,12) SAMRAI::hier::PatchLevel::setTime(SAMRAI::hier::PatchLevel *, double, const SAMRAI::hier::ComponentSelector &)
  -> INDIRECT- (VIRTUAL): (2020,45)  RungeKuttaLevelIntegrator::copyTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) (1831)
  -> INLINE: (2022,23) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2029,9)  EXPR_CONV.SI64.P64(*((SI64*) ((this_81440_V$1973.0.1791->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(20(SI32)) * 8(I64))))
  -> INLINE: (2030,23) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (2045,22) SAMRAI::tbox::MathUtilities<double>::getMax()
  -> DELETED: (2051,33) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INDIRECT- (VIRTUAL): (2051,51)  EXPR_CONV.SI64.P64(*((SI64*) ((this_81440_V$1973.0.1791->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(13(SI32)) * 8(I64))))
  -> DELETED: (2051,100) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (2051,100) std::allocator<double>::allocator(std::allocator<double> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2051,100) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::value_type &, const std::vector<double, std::allocator<double>>::allocator_type &)
  -> (2051,100) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (2057,39) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
  -> INDIRECT- (VIRTUAL): (2058,61)  RungeKuttaLevelIntegrator::copyTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) (1831)
  -> (2062,39) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
  -> INLINE: (2069,50) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
  -> INLINE: (2069,50) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2071,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2071,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2071,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2071,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2071,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2071,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2071,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2071,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2071,25) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2071,25) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2071,25) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2071,25) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2071,25) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2071,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2071,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2071,25) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2077,39) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
  -> INLINE: (2078,49) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2079,45) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
  -> INLINE: (2079,59) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2080,49) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> (2084,39) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
  -> INLINE: (2088,53) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (2088,55) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (2089,21) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (2089,21) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (2089,29) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2089,29) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (2089,31) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> (2089,31) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> (2090,20) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
  -> INLINE: (2092,63) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2094,22) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2097,35) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2101,25) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> (2103,25) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> INDIRECT- (VIRTUAL): (2103,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2bb_V$19c2.0.1791->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> INLINE: (2105,35) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2107,74) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (2107,74) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (2109,38) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2109,45) SAMRAI::tbox::MathUtilities<double>::Max(double, double)
  -> INLINE: (2110,42) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2110,78) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2113,27) SAMRAI::tbox::MathUtilities<double>::Min(double, double)
  -> INLINE: (2113,100) std::vector<double, std::allocator<double>>::back(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2115,22) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2116,13) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2119,70) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (2119,70) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (2121,25) SAMRAI::tbox::SAMRAI_MPI::getSize(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> INLINE: (2123,53) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2126,57) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2129,23) SAMRAI::tbox::MathUtilities<double>::Min(double, double)
  -> (2131,31) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
  -> INLINE: (2132,9) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2140,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (2140,12) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
  -> INLINE: (2144,12) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (2144,14) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
  -> INLINE: (2144,62) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::operator[](std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *, std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::size_type)
  -> INLINE: (2145,12) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (2145,14) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
  -> INLINE: (2145,62) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::operator[](std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *, std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::size_type)
  -> INLINE: (2146,12) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (2146,14) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
  -> INLINE: (2146,64) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::operator[](std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *, std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::size_type)
  -> INDIRECT- (VIRTUAL): (2153,9)  RungeKuttaLevelIntegrator::postprocessFluxAndSourceData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, bool, bool, bool) (1830)
  -> INLINE: (2155,20) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2157,25) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2161,18) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2161,20) SAMRAI::hier::PatchHierarchy::getMPI(const SAMRAI::hier::PatchHierarchy *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(696,32) std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(696,34) SAMRAI::hier::BoxLevel::getMPI(const SAMRAI::hier::BoxLevel *) const
  -> INLINE: (2162,29) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2163,33) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2168,13) SAMRAI::tbox::SAMRAI_MPI::getSize(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> INLINE: (2180,33) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2184,29) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2187,5) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1700,5)
   remark #15523: loop was not vectorized: loop control variable sn was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1839,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1868,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1881,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1927,20)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1975,17)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2007,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2089,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2107,74)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2107,74)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2107,74)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2107,74)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2119,70)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2142,5)
   remark #15523: loop was not vectorized: loop control variable sn was found, but loop iteration count cannot be computed before executing the loop
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1827,13)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1832,16) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1674,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator12advanceLevelERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEERKS0_INS2_14PatchHierarchyEEddbbb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:1674

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm7]
        
    Routine temporaries
        Total         :    1221
            Global    :     236
            Local     :     985
        Regenerable   :     301
        Spilled       :      27
        
    Routine stack
        Variables     :    1032 bytes*
            Reads     :     107 [2.81e+02 ~ 7.3%]
            Writes    :     102 [1.30e+02 ~ 3.4%]
        Spills        :     176 bytes*
            Reads     :      89 [3.82e+02 ~ 9.9%]
            Writes    :      30 [4.24e+01 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)) [62] /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp(741,9)
  -> INLINE: (742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp(741,9):remark #34051: REGISTER ALLOCATION : [_ZN23RungeKuttaPatchStrategy14setDataContextERKSt10shared_ptrIN6SAMRAI4hier15VariableContextEE] /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:741

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rbp rsi rdi r12-r13]
        
    Routine temporaries
        Total         :      29
            Global    :      15
            Local     :      14
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)) [63] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(1220,7)
  -> INLINE: (1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(1220,7):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier10PatchLevel8IteratorppEi] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:1220

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rbx rsi rdi]
        
    Routine temporaries
        Total         :      17
            Global    :       8
            Local     :       9
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const) [64] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(1270,4)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(1270,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier10PatchLevel3endEv] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:1270

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const) [65] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(1260,4)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(1260,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier10PatchLevel5beginEv] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:1260

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const) [66] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h(185,4)
  -> INDIRECT- (VIRTUAL): (188,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U130_V$1104.0.1305->__vptr_V$1106 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
  -> INLINE: (190,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (190,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h(185,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier5Patch12getPatchDataERKSt10shared_ptrINS0_8VariableEERKS2_INS0_15VariableContextEE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:185

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rbp rsi rdi r12 r15]
        
    Routine temporaries
        Total         :      30
            Global    :      16
            Local     :      14
        Regenerable   :       2
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)) [67] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(774,4)
  -> INLINE: (775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
    -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(774,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier10PatchLevel17allocatePatchDataERKNS0_17ComponentSelectorEd] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:774

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rsi rdi r12-r13 zmm0]
        
    Routine temporaries
        Total         :      32
            Global    :      12
            Local     :      20
        Regenerable   :       8
        Spilled       :       3
        
    Routine stack
        Variables     :      32 bytes*
            Reads     :       5 [7.36e+00 ~ 12.9%]
            Writes    :       1 [1.79e+00 ~ 3.1%]
        Spills        :       8 bytes*
            Reads     :       1 [1.79e+00 ~ 3.1%]
            Writes    :       1 [1.00e+00 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<double>::fillAll(SAMRAI::pdat::CellData<double> *, const double &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<double>::fillAll(SAMRAI::pdat::CellData<double> *, const double &)) [68] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(626,1)
  -> INLINE: (627,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (627,12) SAMRAI::pdat::ArrayData<double>::fillAll(SAMRAI::pdat::ArrayData<double> *, const double &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(628,12)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(628,12)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(628,12)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(628,12)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(628,12)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(628,12)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(628,12)
<Remainder, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(626,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE7fillAllERKd] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:626

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8-r10 zmm0-zmm1]
        
    Routine temporaries
        Total         :      50
            Global    :      30
            Local     :      20
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<double>::fillAll(SAMRAI::pdat::SideData<double> *, const double &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<double>::fillAll(SAMRAI::pdat::SideData<double> *, const double &)) [69] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(741,1)
  -> INLINE: (742,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (742,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (742,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (742,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (743,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (744,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (744,21) SAMRAI::pdat::ArrayData<double>::fillAll(SAMRAI::pdat::ArrayData<double> *, const double &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(742,33)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(741,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdE7fillAllERKd] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:741

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rsi rdi r8-r13 zmm0-zmm3]
        
    Routine temporaries
        Total         :      59
            Global    :      32
            Local     :      27
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [1.80e+00 ~ 1.7%]
            Writes    :       2 [1.80e+00 ~ 1.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::FaceData<double>::fillAll(SAMRAI::pdat::FaceData<double> *, const double &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::FaceData<double>::fillAll(SAMRAI::pdat::FaceData<double> *, const double &)) [70] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp(680,1)
  -> INLINE: (681,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (681,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (681,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (681,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (682,16) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (682,18) SAMRAI::pdat::ArrayData<double>::fillAll(SAMRAI::pdat::ArrayData<double> *, const double &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp(681,33)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp(683,18)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp(683,18)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp(683,18)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp(683,18)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp(683,18)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp(683,18)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp(683,18)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp(680,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8FaceDataIdE7fillAllERKd] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:680

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rsi rdi r8-r12 zmm0-zmm3]
        
    Routine temporaries
        Total         :      56
            Global    :      31
            Local     :      25
        Regenerable   :       2
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [9.00e-01 ~ 0.3%]
            Writes    :       1 [9.00e-01 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4xfer24RefineTransactionFactoryEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::setTime(SAMRAI::hier::PatchLevel *, double, const SAMRAI::hier::ComponentSelector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::PatchLevel::setTime(SAMRAI::hier::PatchLevel *, double, const SAMRAI::hier::ComponentSelector &)) [72] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(872,4)
  -> INLINE: (873,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (873,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (873,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (873,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (873,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (873,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
    -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (874,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (874,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(873,37)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(872,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier10PatchLevel7setTimeEdRKNS0_17ComponentSelectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:872

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rsi rdi r12-r13 zmm0]
        
    Routine temporaries
        Total         :      32
            Global    :      12
            Local     :      20
        Regenerable   :       8
        Spilled       :       3
        
    Routine stack
        Variables     :      32 bytes*
            Reads     :       5 [1.70e+01 ~ 16.7%]
            Writes    :       1 [5.00e+00 ~ 4.9%]
        Spills        :       8 bytes*
            Reads     :       1 [5.00e+00 ~ 4.9%]
            Writes    :       1 [1.00e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)) [73] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(828,4)
  -> INLINE: (829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
    -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(829,37)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(828,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier10PatchLevel19deallocatePatchDataERKNS0_17ComponentSelectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:828

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rsi rdi r12-r13]
        
    Routine temporaries
        Total         :      29
            Global    :      11
            Local     :      18
        Regenerable   :       8
        Spilled       :       2
        
    Routine stack
        Variables     :      32 bytes*
            Reads     :       5 [7.36e+00 ~ 13.8%]
            Writes    :       1 [1.79e+00 ~ 3.4%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::recordStatistics(RungeKuttaLevelIntegrator *, const SAMRAI::hier::PatchLevel &, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::recordStatistics(RungeKuttaLevelIntegrator *, const SAMRAI::hier::PatchLevel &, double)) [74] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3601,1)
  -> INLINE: (3602,32) SAMRAI::hier::PatchLevel::getLevelNumber(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3604,45) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size(const std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *) const
  -> INLINE: (3606,22) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::resize(std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3607,22) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::resize(std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3608,26) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::resize(std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3613,26) std::__shared_ptr<SAMRAI::tbox::Statistic, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::tbox::Statistic, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3613,26) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::operator[](std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size_type)
  -> INLINE: (3615,33) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3616,25) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::operator[](std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size_type)
  -> DELETED: (3616,30) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3616,30) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3616,30) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3616,30) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3616,30) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3616,30) std::shared_ptr<SAMRAI::tbox::Statistic>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Statistic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3616,30) std::shared_ptr<SAMRAI::tbox::Statistic>::operator=(std::shared_ptr<SAMRAI::tbox::Statistic> *, std::shared_ptr<SAMRAI::tbox::Statistic> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3617,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3617,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3617,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3617,56) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3617,56) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3617,65) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3617,65) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3617,65) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3618,25) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::operator[](std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size_type)
  -> DELETED: (3618,30) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3618,30) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3618,30) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3618,30) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3618,30) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3618,30) std::shared_ptr<SAMRAI::tbox::Statistic>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Statistic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3618,30) std::shared_ptr<SAMRAI::tbox::Statistic>::operator=(std::shared_ptr<SAMRAI::tbox::Statistic> *, std::shared_ptr<SAMRAI::tbox::Statistic> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3619,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3619,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3619,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3619,56) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3619,56) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3619,65) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3619,65) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3619,65) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3620,29) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::operator[](std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size_type)
  -> DELETED: (3620,34) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3620,34) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3620,34) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3620,34) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3620,34) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3620,34) std::shared_ptr<SAMRAI::tbox::Statistic>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Statistic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3620,34) std::shared_ptr<SAMRAI::tbox::Statistic>::operator=(std::shared_ptr<SAMRAI::tbox::Statistic> *, std::shared_ptr<SAMRAI::tbox::Statistic> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3621,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3621,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3621,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3621,55) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3621,55) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3621,64) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3621,64) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3621,64) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3622,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3625,45) SAMRAI::hier::PatchLevel::getBoxLevel(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3625,58) std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3625,60) SAMRAI::hier::BoxLevel::getLocalNumberOfBoxes(const SAMRAI::hier::BoxLevel *) const
  -> INLINE: (3627,45) SAMRAI::hier::PatchLevel::getBoxLevel(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3627,58) std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3627,60) SAMRAI::hier::BoxLevel::getLocalNumberOfCells(const SAMRAI::hier::BoxLevel *) const
  -> INLINE: (3628,21) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::operator[](std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size_type)
  -> INLINE: (3628,25) std::__shared_ptr<SAMRAI::tbox::Statistic, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Statistic, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3629,21) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::operator[](std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size_type)
  -> INLINE: (3629,25) std::__shared_ptr<SAMRAI::tbox::Statistic, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Statistic, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3630,25) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::operator[](std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size_type)
  -> INLINE: (3630,29) std::__shared_ptr<SAMRAI::tbox::Statistic, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Statistic, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3606,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3607,22)
   remark #15527: loop was not vectorized: function call to ?1memset cannot be vectorized   [ /usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3607,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3607,22)
   remark #15527: loop was not vectorized: function call to ?1memset cannot be vectorized   [ /usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3607,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3607,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3608,26)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3601,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator16recordStatisticsERKN6SAMRAI4hier10PatchLevelEd] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:3601

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     579
            Global    :     180
            Local     :     399
        Regenerable   :     161
        Spilled       :      16
        
    Routine stack
        Variables     :     126 bytes*
            Reads     :      36 [9.90e+00 ~ 5.8%]
            Writes    :      34 [8.32e+00 ~ 4.9%]
        Spills        :      88 bytes*
            Reads     :      18 [1.98e+00 ~ 1.2%]
            Writes    :      18 [2.19e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4xfer14RefineScheduleEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::CellData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::SideData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::FaceData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::FaceData<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat8FaceDataIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)) [79] /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp(750,9)
  -> INLINE: (751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp(750,9):remark #34051: REGISTER ALLOCATION : [_ZN23RungeKuttaPatchStrategy16clearDataContextEv] /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:750

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbx rdi r15]
        
    Routine temporaries
        Total         :      28
            Global    :      14
            Local     :      14
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 5.8%]
            Writes    :       4 [3.35e+00 ~ 9.7%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::standardLevelSynchronization(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, int, double, const std::vector<double, std::allocator<double>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::standardLevelSynchronization(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, int, double, const std::vector<double, std::allocator<double>> &)) [80] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2233,1)
  -> INLINE: (2250,25) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2257,25) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (2257,27) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (2257,27) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2260,25) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (2260,27) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (2260,27) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2266,26) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INDIRECT- (VIRTUAL): (2266,26)  RungeKuttaLevelIntegrator::synchronizeLevelWithCoarser(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, double) (1833)
  -> INLINE: (2268,23) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2268,25) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2269,23) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2269,25) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2270,23) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2270,25) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2274,29) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2274,31) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2275,29) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2275,31) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2281,33) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2281,35) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2283,33) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2283,35) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2286,9) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2286,9) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2288,25) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2233,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator28standardLevelSynchronizationERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEiidRKSt6vectorIdSaIdEE] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:2233

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rdx rcx rsi rdi r8 zmm0]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::standardLevelSynchronization(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, int, double, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::standardLevelSynchronization(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, int, double, double)) [81] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2205,1)
  -> INLINE: (2213,22) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INDIRECT- (VIRTUAL): (2221,13)  RungeKuttaLevelIntegrator::standardLevelSynchronization(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, int, double, const std::vector<double, std::allocator<double>> &) (1793)
  -> INLINE: (2222,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2205,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator28standardLevelSynchronizationERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEiidd] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:2205

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rdx rcx rsi rdi zmm0-zmm1]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::synchronizeNewLevels(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, int, double, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::synchronizeNewLevels(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, int, double, bool)) [82] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2317,1)
  -> INLINE: (2330,22) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2334,27) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2341,26) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (2341,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (2341,28) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2344,26) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (2344,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (2344,28) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2346,34) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2347,54) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2348,36) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2348,38) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
  -> (2351,21) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
  -> INLINE: (2351,21) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2352,34) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2354,32) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2355,18) std::__shared_ptr<SAMRAI::xfer::CoarsenSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2356,32) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2358,36) RungeKuttaPatchStrategy::useGhostCellImmersedBoundaryMethod(const RungeKuttaPatchStrategy *) const
  -> INLINE: (2360,63) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2360,65) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (2361,24) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (2361,24) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (2361,39) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2361,39) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2361,41) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (2361,41) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (2362,23) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2364,67) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2366,26) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2369,25) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2372,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2bf_V$19f6.0.1795->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> INLINE: (2374,26) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2377,9) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2377,9) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2377,9) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2379,27) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2382,22) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2336,9)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2361,24)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2317,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator20synchronizeNewLevelsERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEiidb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:2317

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     218
            Global    :      51
            Local     :     167
        Regenerable   :      52
        Spilled       :      10
        
    Routine stack
        Variables     :     120 bytes*
            Reads     :      16 [5.94e+01 ~ 7.8%]
            Writes    :      14 [4.14e+01 ~ 5.4%]
        Spills        :      40 bytes*
            Reads     :       9 [3.17e+01 ~ 4.2%]
            Writes    :       5 [4.05e+00 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: resetTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (resetTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, bool)) [83] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegrator22resetTimeDependentDataERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEEdb] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rdx rcx rsi rdi r8-r9 zmm0]
        
    Routine temporaries
        Total         :      28
            Global    :       0
            Local     :      28
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::resetTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::resetTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, bool)) [84] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2504,1)
  -> INLINE: (2510,45) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2510,47) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (2511,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (2511,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (2511,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2511,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2511,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (2511,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (2512,12) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2514,55) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2517,13) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::begin(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2519,29) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (2519,29) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (2519,32) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2519,32) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2523,21) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INDIRECT- (VIRTUAL): (2524,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2c2_V$1a03.0.1796->__vptr_V$1106 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
  -> INLINE: (2527,21) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INDIRECT- (VIRTUAL): (2528,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2c3_V$1a04.0.1796->__vptr_V$1106 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
  -> INLINE: (2530,13) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2530,29) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2530,31) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2530,53) std::__shared_ptr<SAMRAI::hier::PatchData, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchData, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2530,55) SAMRAI::hier::PatchData::getTime(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2535,21) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INDIRECT- (VIRTUAL): (2536,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2c5_V$1a08.0.1796->__vptr_V$1106 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
  -> INLINE: (2538,22) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2538,24) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2538,24) SAMRAI::hier::Patch::setPatchData(SAMRAI::hier::Patch *, int, const std::shared_ptr<SAMRAI::hier::PatchData> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(219,19) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(219,24) std::shared_ptr<SAMRAI::hier::PatchData>::operator=(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2538,52) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2538,54) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2540,22) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2540,24) SAMRAI::hier::Patch::setPatchData(SAMRAI::hier::Patch *, int, const std::shared_ptr<SAMRAI::hier::PatchData> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(219,19) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(219,24) std::shared_ptr<SAMRAI::hier::PatchData>::operator=(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2540,24) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2540,52) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2540,54) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2547,25) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INDIRECT- (VIRTUAL): (2548,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2c8_V$1a0c.0.1796->__vptr_V$1106 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
  -> INLINE: (2550,26) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2550,28) SAMRAI::hier::Patch::setPatchData(SAMRAI::hier::Patch *, int, const std::shared_ptr<SAMRAI::hier::PatchData> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(219,19) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(219,24) std::shared_ptr<SAMRAI::hier::PatchData>::operator=(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2550,28) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2550,56) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2550,58) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2553,22) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2553,24) SAMRAI::hier::Patch::setPatchData(SAMRAI::hier::Patch *, int, const std::shared_ptr<SAMRAI::hier::PatchData> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(219,19) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(219,24) std::shared_ptr<SAMRAI::hier::PatchData>::operator=(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2553,24) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2553,52) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2553,54) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2556,18) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2556,20) SAMRAI::hier::Patch::deallocatePatchData(SAMRAI::hier::Patch *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(308,16) SAMRAI::hier::Patch::numPatchData(const SAMRAI::hier::Patch *) const
      -> INLINE: (540,44) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size(const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(309,22) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(309,27) std::__shared_ptr<SAMRAI::hier::PatchData, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::PatchData, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2558,25) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator++(std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, int)
  -> INLINE: (2562,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (2562,12) SAMRAI::hier::PatchLevel::setTime(SAMRAI::hier::PatchLevel *, double, const SAMRAI::hier::ComponentSelector &)
  -> INLINE: (2566,14) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2566,16) SAMRAI::hier::PatchLevel::setTime(SAMRAI::hier::PatchLevel *, double, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(874,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(874,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2511,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2519,9)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(873,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2566,16)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2504,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator22resetTimeDependentDataERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEEdb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:2504

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     286
            Global    :      99
            Local     :     187
        Regenerable   :      58
        Spilled       :      32
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      12 [2.89e+01 ~ 1.1%]
            Writes    :       6 [2.73e+01 ~ 1.0%]
        Spills        :     216 bytes*
            Reads     :     102 [1.76e+02 ~ 6.6%]
            Writes    :      89 [5.69e+01 ~ 2.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: resetDataToPreadvanceState(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (resetDataToPreadvanceState(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)) [85] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegrator26resetDataToPreadvanceStateERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEE] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      25
            Global    :       0
            Local     :      25
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::resetDataToPreadvanceState(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::resetDataToPreadvanceState(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)) [86] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2582,1)
  -> INLINE: (2588,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2588,12) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(829,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2588,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2582,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator26resetDataToPreadvanceStateERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEE] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:2582

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rsi rdi r12-r13]
        
    Routine temporaries
        Total         :      31
            Global    :      11
            Local     :      20
        Regenerable   :       8
        Spilled       :       2
        
    Routine stack
        Variables     :      32 bytes*
            Reads     :       5 [7.36e+00 ~ 13.6%]
            Writes    :       1 [1.79e+00 ~ 3.3%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: resetHierarchyConfiguration(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (resetHierarchyConfiguration(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, int)) [87] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegrator27resetHierarchyConfigurationERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEii] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      25
            Global    :       0
            Local     :      25
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::resetHierarchyConfiguration(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::resetHierarchyConfiguration(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, int)) [88] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(526,1)
  -> INLINE: (541,39) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (541,41) SAMRAI::hier::PatchHierarchy::getFinestLevelNumber(const SAMRAI::hier::PatchHierarchy *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(561,14) SAMRAI::hier::PatchHierarchy::getNumberOfLevels(const SAMRAI::hier::PatchHierarchy *) const
  -> INLINE: (543,26) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::resize(std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (544,30) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::resize(std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (548,60) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (548,62) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (548,62) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (550,35) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (552,29) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
  -> INLINE: (552,34) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::operator=(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *, std::shared_ptr<SAMRAI::xfer::RefineSchedule> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (552,34) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (552,34) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (553,32) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (558,17) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
  -> INLINE: (558,17) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (560,35) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (564,43) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (566,37) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
  -> INLINE: (566,42) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (566,42) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (566,42) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::operator=(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *, std::shared_ptr<SAMRAI::xfer::RefineSchedule> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (567,40) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (572,21) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (572,21) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
  -> INLINE: (574,43) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (576,5) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(543,26)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(544,30)
   remark #15527: loop was not vectorized: function call to ?1memset cannot be vectorized   [ /usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(544,30)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(544,30)
   remark #15527: loop was not vectorized: function call to ?1memset cannot be vectorized   [ /usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(544,30)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(544,30)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(546,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(550,37) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(526,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator27resetHierarchyConfigurationERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEii] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:526

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     280
            Global    :      86
            Local     :     194
        Regenerable   :      54
        Spilled       :      17
        
    Routine stack
        Variables     :     120 bytes*
            Reads     :      14 [4.97e+01 ~ 6.8%]
            Writes    :      21 [6.99e+01 ~ 9.5%]
        Spills        :      96 bytes*
            Reads     :      20 [2.83e+01 ~ 3.8%]
            Writes    :      16 [9.93e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: applyRefineRegions(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (applyRefineRegions(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)) [89] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegrator18applyRefineRegionsERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEidibbbbbbb] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rdx rcx rsi rdi r8-r9 zmm0]
        
    Routine temporaries
        Total         :      28
            Global    :       0
            Local     :      28
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::applyRefineRegions(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::applyRefineRegions(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)) [90] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(600,1)
  -> INLINE: (606,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (609,18) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (609,20) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (609,20) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (611,16) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (612,45) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (612,47) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (613,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (613,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (613,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (613,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (613,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (613,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (614,12) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (616,55) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (619,13) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (628,13)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2d8_V$1a5d.0.1804->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(21(SI32)) * 8(I64))))
  -> INLINE: (630,16) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (632,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (632,29) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(613,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(600,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator18applyRefineRegionsERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEidibbbbbbb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:600

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :      95
            Global    :      22
            Local     :      73
        Regenerable   :      23
        Spilled       :       7
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :      10 [2.71e+01 ~ 10.8%]
            Writes    :       4 [7.52e+00 ~ 3.0%]
        Spills        :       8 bytes*
            Reads     :       1 [5.52e+00 ~ 2.2%]
            Writes    :       1 [1.00e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: applyImmersedBdryDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (applyImmersedBdryDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)) [91] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegrator25applyImmersedBdryDetectorERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEidibbbbbbb] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rdx rcx rsi rdi r8-r9 zmm0]
        
    Routine temporaries
        Total         :      28
            Global    :       0
            Local     :      28
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::applyImmersedBdryDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::applyImmersedBdryDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)) [92] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(656,1)
  -> INLINE: (662,35) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (665,18) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (665,20) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (665,20) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (667,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (667,12) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (669,23) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (671,38) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (671,40) SAMRAI::hier::PatchLevel::getBoxLevel(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (671,53) std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (671,55) SAMRAI::hier::BoxLevel::getMPI(const SAMRAI::hier::BoxLevel *) const
  -> INLINE: (673,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (674,25) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
  -> INLINE: (674,39) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (678,45) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (680,45) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (682,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (684,16) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (685,45) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (685,47) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (686,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (686,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (686,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (686,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (686,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (686,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (687,12) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (689,55) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (692,13) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (701,13)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2da_V$1a7b.0.1806->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(22(SI32)) * 8(I64))))
  -> INLINE: (703,16) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (705,23) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (707,45)  RungeKuttaLevelIntegrator::copyTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) (1831)
  -> INLINE: (709,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (709,12) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (711,35) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (711,37) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(667,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(686,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(829,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(709,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(656,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator25applyImmersedBdryDetectorERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEidibbbbbbb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:656

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     199
            Global    :      44
            Local     :     155
        Regenerable   :      51
        Spilled       :      11
        
    Routine stack
        Variables     :     136 bytes*
            Reads     :      25 [4.62e+01 ~ 11.8%]
            Writes    :      10 [1.51e+01 ~ 3.8%]
        Spills        :      48 bytes*
            Reads     :      10 [1.40e+01 ~ 3.6%]
            Writes    :       7 [4.16e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: applyValueDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (applyValueDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)) [93] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegrator18applyValueDetectorERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEidibbbbbbb] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rdx rcx rsi rdi r8-r9 zmm0]
        
    Routine temporaries
        Total         :      28
            Global    :       0
            Local     :      28
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::applyValueDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::applyValueDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)) [94] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(735,1)
  -> INLINE: (741,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (744,18) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (744,20) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (744,20) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (746,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (746,12) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (747,12) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (749,23) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (751,38) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (751,40) SAMRAI::hier::PatchLevel::getBoxLevel(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (751,53) std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (751,55) SAMRAI::hier::BoxLevel::getMPI(const SAMRAI::hier::BoxLevel *) const
  -> INLINE: (753,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (754,25) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
  -> INLINE: (754,39) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (758,45) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (760,45) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (762,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (774,9)  EXPR_CONV.SI64.P64(*((SI64*) ((this_80617_V$1a89.0.1808->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(23(SI32)) * 8(I64))))
  -> INLINE: (776,16) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (777,45) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (777,47) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (778,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (778,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (778,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (778,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (778,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (778,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (779,12) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (781,55) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (783,13) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (792,13)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2dc_V$1a99.0.1808->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(25(SI32)) * 8(I64))))
  -> INLINE: (794,16) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (806,9)  EXPR_CONV.SI64.P64(*((SI64*) ((this_80617_V$1a89.0.1808->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(24(SI32)) * 8(I64))))
  -> INLINE: (808,23) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (810,45)  RungeKuttaLevelIntegrator::copyTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) (1831)
  -> INLINE: (812,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (812,12) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (813,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (813,12) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (815,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (815,29) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(746,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(747,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(778,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(829,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(812,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(829,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(813,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(735,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator18applyValueDetectorERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEidibbbbbbb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:735

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     263
            Global    :      58
            Local     :     205
        Regenerable   :      69
        Spilled       :      13
        
    Routine stack
        Variables     :     200 bytes*
            Reads     :      37 [6.29e+01 ~ 13.3%]
            Writes    :      12 [1.87e+01 ~ 3.9%]
        Spills        :      64 bytes*
            Reads     :      23 [4.58e+01 ~ 9.6%]
            Writes    :       8 [8.00e+00 ~ 1.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: applyGradientDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (applyGradientDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)) [95] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegrator21applyGradientDetectorERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEidibbbbbbb] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rdx rcx rsi rdi r8-r9 zmm0]
        
    Routine temporaries
        Total         :      28
            Global    :       0
            Local     :      28
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::applyGradientDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::applyGradientDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)) [96] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(832,1)
  -> INLINE: (838,30) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (841,18) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (841,20) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (841,20) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (843,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (843,12) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (844,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (844,12) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (846,23) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (848,38) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (848,40) SAMRAI::hier::PatchLevel::getBoxLevel(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (848,53) std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (848,55) SAMRAI::hier::BoxLevel::getMPI(const SAMRAI::hier::BoxLevel *) const
  -> INLINE: (850,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (851,25) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
  -> INLINE: (851,39) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (855,45) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (857,45) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (859,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (871,9)  EXPR_CONV.SI64.P64(*((SI64*) ((this_80633_V$1aa7.0.1810->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(26(SI32)) * 8(I64))))
  -> INLINE: (873,16) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (874,45) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (874,47) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (875,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (875,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (875,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (875,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (875,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (875,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (876,12) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (878,55) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (880,13) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (889,13)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2de_V$1ab7.0.1810->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(28(SI32)) * 8(I64))))
  -> INLINE: (891,16) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (903,9)  EXPR_CONV.SI64.P64(*((SI64*) ((this_80633_V$1aa7.0.1810->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(27(SI32)) * 8(I64))))
  -> INLINE: (905,23) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (907,45)  RungeKuttaLevelIntegrator::copyTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) (1831)
  -> INLINE: (909,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (909,12) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (910,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (910,12) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (912,30) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (912,32) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(843,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(844,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(875,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(829,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(909,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(829,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(910,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(832,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator21applyGradientDetectorERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEidibbbbbbb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:832

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     263
            Global    :      58
            Local     :     205
        Regenerable   :      69
        Spilled       :      13
        
    Routine stack
        Variables     :     200 bytes*
            Reads     :      37 [6.29e+01 ~ 13.3%]
            Writes    :      12 [1.87e+01 ~ 3.9%]
        Spills        :      64 bytes*
            Reads     :      23 [4.58e+01 ~ 9.6%]
            Writes    :       8 [8.00e+00 ~ 1.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: applyMultiresolutionDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (applyMultiresolutionDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)) [97] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegrator28applyMultiresolutionDetectorERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEidibbbbbbb] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rdx rcx rsi rdi r8-r9 zmm0]
        
    Routine temporaries
        Total         :      28
            Global    :       0
            Local     :      28
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::applyMultiresolutionDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::applyMultiresolutionDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)) [98] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(936,1)
  -> INLINE: (942,37) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (945,18) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (945,20) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (945,20) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (947,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (947,12) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (948,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (948,12) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (950,23) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (952,38) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (952,40) SAMRAI::hier::PatchLevel::getBoxLevel(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (952,53) std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (952,55) SAMRAI::hier::BoxLevel::getMPI(const SAMRAI::hier::BoxLevel *) const
  -> INLINE: (954,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (955,25) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
  -> INLINE: (955,39) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (959,45) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (961,45) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (963,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (975,9)  EXPR_CONV.SI64.P64(*((SI64*) ((this_80649_V$1ac5.0.1812->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(29(SI32)) * 8(I64))))
  -> INLINE: (977,16) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (978,45) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (978,47) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (979,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (979,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (979,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (979,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (979,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (979,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (980,12) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (982,55) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (984,13) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (993,13)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2e0_V$1ad5.0.1812->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(31(SI32)) * 8(I64))))
  -> INLINE: (995,16) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1007,9)  EXPR_CONV.SI64.P64(*((SI64*) ((this_80649_V$1ac5.0.1812->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(30(SI32)) * 8(I64))))
  -> INLINE: (1009,23) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (1011,45)  RungeKuttaLevelIntegrator::copyTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) (1831)
  -> INLINE: (1013,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1013,12) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1014,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1014,12) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1016,37) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1016,39) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(947,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(948,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(979,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(829,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1013,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(829,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1014,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(936,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator28applyMultiresolutionDetectorERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEidibbbbbbb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:936

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     263
            Global    :      58
            Local     :     205
        Regenerable   :      69
        Spilled       :      13
        
    Routine stack
        Variables     :     200 bytes*
            Reads     :      37 [6.29e+01 ~ 13.3%]
            Writes    :      12 [1.87e+01 ~ 3.9%]
        Spills        :      64 bytes*
            Reads     :      23 [4.58e+01 ~ 9.6%]
            Writes    :       8 [8.00e+00 ~ 1.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: applyIntegralDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (applyIntegralDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)) [99] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegrator21applyIntegralDetectorERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEidibbbbbbb] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rdx rcx rsi rdi r8-r9 zmm0]
        
    Routine temporaries
        Total         :      28
            Global    :       0
            Local     :      28
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::applyIntegralDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::applyIntegralDetector(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, int, bool, bool, bool, bool, bool, bool, bool)) [100] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1040,1)
  -> INLINE: (1046,30) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1049,18) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (1049,20) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (1049,20) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1051,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1051,12) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1052,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1052,12) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1054,23) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1056,38) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1056,40) SAMRAI::hier::PatchLevel::getBoxLevel(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1056,53) std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1056,55) SAMRAI::hier::BoxLevel::getMPI(const SAMRAI::hier::BoxLevel *) const
  -> INLINE: (1058,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1059,25) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
  -> INLINE: (1059,39) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1063,45) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1065,45) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1067,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1079,9)  EXPR_CONV.SI64.P64(*((SI64*) ((this_80665_V$1ae3.0.1814->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(32(SI32)) * 8(I64))))
  -> INLINE: (1081,16) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1082,45) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1082,47) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1083,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (1083,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (1083,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1083,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1083,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1083,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1084,12) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1086,55) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1088,13) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1097,13)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2e2_V$1af3.0.1814->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(34(SI32)) * 8(I64))))
  -> INLINE: (1099,16) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1111,9)  EXPR_CONV.SI64.P64(*((SI64*) ((this_80665_V$1ae3.0.1814->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(33(SI32)) * 8(I64))))
  -> INLINE: (1113,23) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (1115,45)  RungeKuttaLevelIntegrator::copyTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) (1831)
  -> INLINE: (1117,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1117,12) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1118,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1118,12) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1120,30) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1120,32) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1051,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1052,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1083,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(829,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1117,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(829,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1118,12)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1040,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator21applyIntegralDetectorERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEidibbbbbbb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:1040

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     263
            Global    :      58
            Local     :     205
        Regenerable   :      69
        Spilled       :      13
        
    Routine stack
        Variables     :     200 bytes*
            Reads     :      37 [6.29e+01 ~ 13.3%]
            Writes    :      12 [1.87e+01 ~ 3.9%]
        Spills        :      64 bytes*
            Reads     :      23 [4.58e+01 ~ 9.6%]
            Writes    :       8 [8.00e+00 ~ 1.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::registerVariable(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::Variable> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const RungeKuttaLevelIntegrator::RK_VAR_TYPE &, const std::shared_ptr<SAMRAI::hier::BaseGridGeometry> &, const std::string &, const std::string &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::registerVariable(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::Variable> &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, const RungeKuttaLevelIntegrator::RK_VAR_TYPE &, const std::shared_ptr<SAMRAI::hier::BaseGridGeometry> &, const std::string &, const std::string &)) [101] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2672,1)
  -> INLINE: (2673,38) SAMRAI::hier::IntVector::getDim(const SAMRAI::hier::IntVector *) const
  -> INLINE: (2682,10) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2688,29) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::reset<SAMRAI::xfer::RefineAlgorithm>(std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *, SAMRAI::xfer::RefineAlgorithm *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2689,33) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::reset<SAMRAI::xfer::RefineAlgorithm>(std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *, SAMRAI::xfer::RefineAlgorithm *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2690,33) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::reset<SAMRAI::xfer::RefineAlgorithm>(std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *, SAMRAI::xfer::RefineAlgorithm *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2691,34) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::reset<SAMRAI::xfer::RefineAlgorithm>(std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *, SAMRAI::xfer::RefineAlgorithm *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2693,34) std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::resize(std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::size_type)
  -> INLINE: (2696,37) std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::size_type)
  -> INLINE: (2696,42) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::reset<SAMRAI::xfer::RefineAlgorithm>(std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *, SAMRAI::xfer::RefineAlgorithm *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2699,26) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::reset<SAMRAI::xfer::RefineAlgorithm>(std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *, SAMRAI::xfer::RefineAlgorithm *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2700,27) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::reset<SAMRAI::xfer::CoarsenAlgorithm>(std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *, SAMRAI::xfer::CoarsenAlgorithm *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2701,29) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::reset<SAMRAI::xfer::CoarsenAlgorithm>(std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *, SAMRAI::xfer::CoarsenAlgorithm *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2702,29) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::reset<SAMRAI::xfer::CoarsenAlgorithm>(std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *, SAMRAI::xfer::CoarsenAlgorithm *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2704,36) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::reset<SAMRAI::xfer::CoarsenAlgorithm>(std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *, SAMRAI::xfer::CoarsenAlgorithm *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2705,37) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::reset<SAMRAI::xfer::CoarsenAlgorithm>(std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *, SAMRAI::xfer::CoarsenAlgorithm *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2708,10) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2710,27) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::reset<SAMRAI::xfer::RefineAlgorithm>(std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *, SAMRAI::xfer::RefineAlgorithm *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2711,30) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::reset<SAMRAI::xfer::CoarsenAlgorithm>(std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *, SAMRAI::xfer::CoarsenAlgorithm *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2716,40) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> INLINE: (2718,21) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::push_back(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *, const std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2724,34) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::push_back(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *, const std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (2729,17)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (2733,17)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (2737,17)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> DELETED: (2739,30) std::allocator<int>::~allocator(std::allocator<int> *)
  -> (2739,46) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> DELETED: (2739,46) std::allocator<int>::~allocator(std::allocator<int> *)
  -> INLINE: (2739,46) std::allocator<int>::allocator(std::allocator<int> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2739,46) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::allocator_type &)
  -> INLINE: (2742,32) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2744,35) std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *, std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::size_type)
  -> INDIRECT- (VIRTUAL): (2745,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U304_V$1b69.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> (2748,38) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> (2750,35) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> (2752,33) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> INLINE: (2756,45) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::operator[](std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *, std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::size_type)
  -> (2756,50) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> INLINE: (2756,73) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (2763,17) SAMRAI::hier::PatchDataRestartManager::registerPatchDataForRestart(SAMRAI::hier::PatchDataRestartManager *, int)
  -> INLINE: (2774,30) std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic> *) const
  -> (2774,32) std::shared_ptr<SAMRAI::hier::RefineOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::RefineOperator> *)
  -> (2774,32) SAMRAI::hier::BaseGridGeometry::lookupRefineOperator(std::shared_ptr<SAMRAI::hier::RefineOperator> *, SAMRAI::hier::BaseGridGeometry *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::string &)
  -> INLINE: (2776,62) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2776,62) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2777,30) std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic> *) const
  -> (2777,32) std::shared_ptr<SAMRAI::hier::TimeInterpolateOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::TimeInterpolateOperator> *)
  -> (2777,32) SAMRAI::hier::BaseGridGeometry::lookupTimeInterpolateOperator(std::shared_ptr<SAMRAI::hier::TimeInterpolateOperator> *, SAMRAI::hier::BaseGridGeometry *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::string &)
  -> INLINE: (2777,62) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2777,62) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2777,62) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2779,32) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2779,34) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2779,34) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2780,68) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (2780,68) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2780,68) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2780,68) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2781,36) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2781,38) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2781,38) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2782,68) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (2782,68) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2782,68) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2782,68) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2783,29) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2783,31) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2783,31) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2784,68) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (2784,68) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2784,68) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2784,68) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2791,37) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2791,39) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2791,39) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2795,17) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (2795,17) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2795,17) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2795,17) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2803,41) std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::size_type)
  -> INLINE: (2803,45) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2803,47) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2803,47) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2804,36) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2806,36) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (2807,21) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (2807,21) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2807,21) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2807,21) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2818,30) std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic> *) const
  -> (2818,32) std::shared_ptr<SAMRAI::hier::CoarsenOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *)
  -> (2818,32) SAMRAI::hier::BaseGridGeometry::lookupCoarsenOperator(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *, SAMRAI::hier::BaseGridGeometry *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::string &)
  -> INLINE: (2820,32) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2820,34) SAMRAI::xfer::CoarsenAlgorithm::registerCoarsen(SAMRAI::xfer::CoarsenAlgorithm *, int, int, const std::shared_ptr<SAMRAI::hier::CoarsenOperator> &, const std::shared_ptr<SAMRAI::xfer::VariableFillPattern> &)
  -> INLINE: (2820,34) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2820,66) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2820,66) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2822,32) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2822,34) SAMRAI::xfer::CoarsenAlgorithm::registerCoarsen(SAMRAI::xfer::CoarsenAlgorithm *, int, int, const std::shared_ptr<SAMRAI::hier::CoarsenOperator> &, const std::shared_ptr<SAMRAI::xfer::VariableFillPattern> &)
  -> INLINE: (2822,34) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2822,66) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2822,66) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (2838,21)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> (2839,37) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> INLINE: (2841,40) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2841,42) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2841,42) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2842,72) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (2842,72) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2842,72) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2842,72) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2844,43) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2844,45) SAMRAI::xfer::CoarsenAlgorithm::registerCoarsen(SAMRAI::xfer::CoarsenAlgorithm *, int, int, const std::shared_ptr<SAMRAI::hier::CoarsenOperator> &, const std::shared_ptr<SAMRAI::xfer::VariableFillPattern> &)
  -> INLINE: (2844,45) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2844,77) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2844,77) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2848,43) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2848,45) SAMRAI::xfer::CoarsenAlgorithm::registerCoarsen(SAMRAI::xfer::CoarsenAlgorithm *, int, int, const std::shared_ptr<SAMRAI::hier::CoarsenOperator> &, const std::shared_ptr<SAMRAI::xfer::VariableFillPattern> &)
  -> INLINE: (2848,45) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2848,77) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2848,77) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2851,40) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2851,42) SAMRAI::xfer::CoarsenAlgorithm::registerCoarsen(SAMRAI::xfer::CoarsenAlgorithm *, int, int, const std::shared_ptr<SAMRAI::hier::CoarsenOperator> &, const std::shared_ptr<SAMRAI::xfer::VariableFillPattern> &)
  -> INLINE: (2851,42) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2851,74) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2851,74) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2853,13) std::shared_ptr<SAMRAI::hier::CoarsenOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2853,13) std::shared_ptr<SAMRAI::hier::TimeInterpolateOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::TimeInterpolateOperator> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2853,13) std::shared_ptr<SAMRAI::hier::RefineOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::RefineOperator> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2853,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> INDIRECT- (VIRTUAL): (2860,17)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (2864,17)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> (2866,38) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> (2868,35) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> (2874,13) SAMRAI::hier::PatchDataRestartManager::registerPatchDataForRestart(SAMRAI::hier::PatchDataRestartManager *, int)
  -> INLINE: (2880,30) std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic> *) const
  -> (2880,32) std::shared_ptr<SAMRAI::hier::RefineOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::RefineOperator> *)
  -> (2880,32) SAMRAI::hier::BaseGridGeometry::lookupRefineOperator(std::shared_ptr<SAMRAI::hier::RefineOperator> *, SAMRAI::hier::BaseGridGeometry *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::string &)
  -> INLINE: (2882,32) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2882,34) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2882,34) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2883,41) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (2883,41) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2883,41) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2883,41) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2884,36) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2884,38) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2884,38) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2885,41) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (2885,41) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2885,41) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2885,41) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2886,29) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2886,31) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2886,31) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2887,41) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (2887,41) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2887,41) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2887,41) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (2895,30) std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic> *) const
  -> (2895,32) std::shared_ptr<SAMRAI::hier::CoarsenOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *)
  -> (2895,32) SAMRAI::hier::BaseGridGeometry::lookupCoarsenOperator(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *, SAMRAI::hier::BaseGridGeometry *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::string &)
  -> INLINE: (2897,32) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2897,34) SAMRAI::xfer::CoarsenAlgorithm::registerCoarsen(SAMRAI::xfer::CoarsenAlgorithm *, int, int, const std::shared_ptr<SAMRAI::hier::CoarsenOperator> &, const std::shared_ptr<SAMRAI::xfer::VariableFillPattern> &)
  -> INLINE: (2897,34) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2897,66) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2897,66) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2904,39) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2905,13) SAMRAI::xfer::CoarsenAlgorithm::registerCoarsen(SAMRAI::xfer::CoarsenAlgorithm *, int, int, const std::shared_ptr<SAMRAI::hier::CoarsenOperator> &, const std::shared_ptr<SAMRAI::xfer::VariableFillPattern> &)
  -> INLINE: (2905,13) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2905,45) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (2905,45) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2907,13) std::shared_ptr<SAMRAI::hier::CoarsenOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2907,13) std::shared_ptr<SAMRAI::hier::RefineOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::RefineOperator> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2911,33) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::push_back(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *, const std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (2916,17)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (2921,17)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (2926,17)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> (2928,35) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> (2930,33) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> (2932,38) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> (2938,17) SAMRAI::hier::PatchDataRestartManager::registerPatchDataForRestart(SAMRAI::hier::PatchDataRestartManager *, int)
  -> (2950,17) std::shared_ptr<SAMRAI::pdat::FaceVariable<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::FaceVariable<double>> *)
  -> (2950,17) std::dynamic_pointer_cast<SAMRAI::pdat::FaceVariable<double>, SAMRAI::hier::Variable>(std::shared_ptr<SAMRAI::pdat::FaceVariable<double>> *, const std::shared_ptr<SAMRAI::hier::Variable> &)
  -> (2954,17) std::shared_ptr<SAMRAI::pdat::SideVariable<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideVariable<double>> *)
  -> (2954,17) std::dynamic_pointer_cast<SAMRAI::pdat::SideVariable<double>, SAMRAI::hier::Variable>(std::shared_ptr<SAMRAI::pdat::SideVariable<double>> *, const std::shared_ptr<SAMRAI::hier::Variable> &)
  -> INLINE: (2957,17) std::__shared_ptr<SAMRAI::pdat::FaceVariable<double>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::FaceVariable<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2961,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2961,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2961,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2961,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2961,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2961,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2961,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2961,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2961,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2961,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2961,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2961,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2961,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2961,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2961,21) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (2961,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2970,21) std::__shared_ptr<SAMRAI::pdat::SideVariable<double>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::SideVariable<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2974,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2974,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2974,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2974,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2974,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2974,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2974,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2974,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2974,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2974,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2974,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2974,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2974,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2974,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2974,21) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (2974,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2985,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2985,16) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2985,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2985,16) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2985,16) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2985,16) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2985,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2985,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2985,16) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2985,16) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2985,16) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2985,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2985,16) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2985,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2985,16) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2991,30) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::push_back(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *, const std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (2996,17)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> (2998,29) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> DELETED: (3000,30) std::allocator<int>::~allocator(std::allocator<int> *)
  -> DELETED: (3000,46) std::allocator<int>::~allocator(std::allocator<int> *)
  -> (3000,46) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (3000,46) std::allocator<int>::allocator(std::allocator<int> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3000,46) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::allocator_type &)
  -> INLINE: (3003,32) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3005,35) std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *, std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::size_type)
  -> INDIRECT- (VIRTUAL): (3006,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U318_V$1b9d.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> INLINE: (3011,45) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::operator[](std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *, std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::size_type)
  -> (3011,50) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> INLINE: (3011,73) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3014,39) std::__shared_ptr<SAMRAI::hier::Variable, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Variable, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3014,41) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3014,41) SAMRAI::hier::Variable::getName(const SAMRAI::hier::Variable *) const
  -> DELETED: (3015,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (3015,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3015,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3015,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3016,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3017,23) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator+=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3019,47) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (3019,47) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3023,67) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3024,21) std::shared_ptr<SAMRAI::pdat::FaceDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::FaceDataFactory<double>> *)
  -> INLINE: (3024,21) std::static_pointer_cast<SAMRAI::pdat::FaceDataFactory<double>, SAMRAI::hier::PatchDataFactory>(std::shared_ptr<SAMRAI::pdat::FaceDataFactory<double>> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3025,48) std::__shared_ptr<SAMRAI::hier::Variable, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Variable, __gnu_cxx::_S_atomic> *) const
  -> (3025,50) SAMRAI::hier::Variable::getPatchDataFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, const SAMRAI::hier::Variable *) const
  -> INLINE: (3027,25) std::__shared_ptr<SAMRAI::hier::Variable, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::OuterfaceVariable<double>>(std::__shared_ptr<SAMRAI::hier::Variable, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::OuterfaceVariable<double> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3030,24) std::__shared_ptr<SAMRAI::pdat::FaceDataFactory<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::FaceDataFactory<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3030,26) SAMRAI::pdat::FaceDataFactory<double>::getDepth(const SAMRAI::pdat::FaceDataFactory<double> *) const
  -> (3030,26) SAMRAI::pdat::OuterfaceVariable<double>::OuterfaceVariable(SAMRAI::pdat::OuterfaceVariable<double> *, const SAMRAI::tbox::Dimension &, const std::string &, int)
  -> INLINE: (3032,13) std::shared_ptr<SAMRAI::pdat::FaceDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::FaceDataFactory<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3035,67) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3036,21) std::shared_ptr<SAMRAI::pdat::SideDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideDataFactory<double>> *)
  -> INLINE: (3036,21) std::static_pointer_cast<SAMRAI::pdat::SideDataFactory<double>, SAMRAI::hier::PatchDataFactory>(std::shared_ptr<SAMRAI::pdat::SideDataFactory<double>> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3037,48) std::__shared_ptr<SAMRAI::hier::Variable, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Variable, __gnu_cxx::_S_atomic> *) const
  -> (3037,50) SAMRAI::hier::Variable::getPatchDataFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, const SAMRAI::hier::Variable *) const
  -> INLINE: (3039,25) std::__shared_ptr<SAMRAI::hier::Variable, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::OutersideVariable<double>>(std::__shared_ptr<SAMRAI::hier::Variable, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::OutersideVariable<double> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3042,24) std::__shared_ptr<SAMRAI::pdat::SideDataFactory<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideDataFactory<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3042,26) SAMRAI::pdat::SideDataFactory<double>::getDepth(const SAMRAI::pdat::SideDataFactory<double> *) const
  -> (3042,26) SAMRAI::pdat::OutersideVariable<double>::OutersideVariable(SAMRAI::pdat::OutersideVariable<double> *, const SAMRAI::tbox::Dimension &, const std::string &, int)
  -> INLINE: (3044,13) std::shared_ptr<SAMRAI::pdat::SideDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideDataFactory<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3046,33) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::push_back(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *, const std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3051,17)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> (3053,28) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> INLINE: (3056,30) std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic> *) const
  -> (3056,32) std::shared_ptr<SAMRAI::hier::CoarsenOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *)
  -> (3056,32) SAMRAI::hier::BaseGridGeometry::lookupCoarsenOperator(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *, SAMRAI::hier::BaseGridGeometry *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::string &)
  -> INLINE: (3058,30) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (3058,32) SAMRAI::xfer::CoarsenAlgorithm::registerCoarsen(SAMRAI::xfer::CoarsenAlgorithm *, int, int, const std::shared_ptr<SAMRAI::hier::CoarsenOperator> &, const std::shared_ptr<SAMRAI::xfer::VariableFillPattern> &)
  -> INLINE: (3058,32) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3058,63) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (3058,63) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3060,13) std::shared_ptr<SAMRAI::hier::CoarsenOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3060,13) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3060,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3060,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3060,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3060,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (3060,13) std::shared_ptr<SAMRAI::pdat::SideVariable<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideVariable<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3060,13) std::shared_ptr<SAMRAI::pdat::FaceVariable<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::FaceVariable<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3064,32) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::push_back(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *, const std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3069,17)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> (3071,31) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> DELETED: (3073,30) std::allocator<int>::~allocator(std::allocator<int> *)
  -> (3073,46) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> DELETED: (3073,46) std::allocator<int>::~allocator(std::allocator<int> *)
  -> INLINE: (3073,46) std::allocator<int>::allocator(std::allocator<int> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3073,46) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::allocator_type &)
  -> INLINE: (3076,32) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3078,35) std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *, std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::size_type)
  -> INDIRECT- (VIRTUAL): (3079,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U320_V$1bac.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> INLINE: (3084,47) std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::operator[](std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *, std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::size_type)
  -> (3084,52) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> INLINE: (3084,75) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> (3087,13) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> INDIRECT- (VIRTUAL): (3094,17)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> (3096,37) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> INDIRECT- (VIRTUAL): (3105,17)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (3110,17)  EXPR_CONV.SI64.P64(*((SI64*) (variable_db.84037_V$1b43.0.1820->__vptr_V$1106 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> (3112,38) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
  -> INLINE: (3119,30) std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic> *) const
  -> (3119,32) std::shared_ptr<SAMRAI::hier::RefineOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::RefineOperator> *)
  -> (3119,32) SAMRAI::hier::BaseGridGeometry::lookupRefineOperator(std::shared_ptr<SAMRAI::hier::RefineOperator> *, SAMRAI::hier::BaseGridGeometry *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::string &)
  -> INLINE: (3121,30) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (3121,32) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (3121,32) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3122,47) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (3122,47) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (3122,47) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3122,47) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (3130,30) std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BaseGridGeometry, __gnu_cxx::_S_atomic> *) const
  -> (3130,32) std::shared_ptr<SAMRAI::hier::CoarsenOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *)
  -> (3130,32) SAMRAI::hier::BaseGridGeometry::lookupCoarsenOperator(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *, SAMRAI::hier::BaseGridGeometry *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::string &)
  -> INLINE: (3132,33) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (3132,35) SAMRAI::xfer::CoarsenAlgorithm::registerCoarsen(SAMRAI::xfer::CoarsenAlgorithm *, int, int, const std::shared_ptr<SAMRAI::hier::CoarsenOperator> &, const std::shared_ptr<SAMRAI::xfer::VariableFillPattern> &)
  -> INLINE: (3132,35) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3132,67) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
  -> INLINE: (3132,67) std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3134,13) std::shared_ptr<SAMRAI::hier::CoarsenOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3134,13) std::shared_ptr<SAMRAI::hier::RefineOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::RefineOperator> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3138,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3138,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3138,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3138,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3138,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3138,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3138,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3138,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3138,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3138,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3138,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3138,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3138,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3138,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (3138,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2694,9)
   remark #15523: loop was not vectorized: loop control variable sn was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3074,13)
   remark #15523: loop was not vectorized: loop control variable sn was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3082,13)
   remark #15523: loop was not vectorized: loop control variable sn was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3001,13)
   remark #15523: loop was not vectorized: loop control variable sn was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3009,13)
   remark #15523: loop was not vectorized: loop control variable sn was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2740,13)
   remark #15523: loop was not vectorized: loop control variable sn was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2754,13)
   remark #15523: loop was not vectorized: loop control variable sn was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2801,13)
   remark #15523: loop was not vectorized: loop control variable sn was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2672,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator16registerVariableERKSt10shared_ptrIN6SAMRAI4hier8VariableEERKNS2_9IntVectorES9_RKNS_11RK_VAR_TYPEERKS0_INS2_16BaseGridGeometryEERKSsSI_] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:2672

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :    2435
            Global    :     525
            Local     :    1910
        Regenerable   :     785
        Spilled       :      19
        
    Routine stack
        Variables     :    2475 bytes*
            Reads     :     204 [2.54e+01 ~ 6.0%]
            Writes    :     342 [4.20e+01 ~ 9.9%]
        Spills        :     112 bytes*
            Reads     :      87 [1.54e+01 ~ 3.6%]
            Writes    :      15 [9.19e+00 ~ 2.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_S_construct<char *>(char *, char *, const std::allocator<char> &, std::forward_iterator_tag)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/basic_string.tcc(126,7):remark #34051: REGISTER ALLOCATION : [_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag] /usr/include/c++/4.8.5/bits/basic_string.tcc:126

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      13
            Local     :      17
        Regenerable   :       7
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchDataRestartManager::registerPatchDataForRestart(SAMRAI::hier::PatchDataRestartManager *, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::PatchDataRestartManager::registerPatchDataForRestart(SAMRAI::hier::PatchDataRestartManager *, int)) [103] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(66,4)
  -> INLINE: (67,33) SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h:(199,16) SAMRAI::hier::ComponentSelector::getSize(const SAMRAI::hier::ComponentSelector *) const
      -> INLINE: (70,44) std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::size(const std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h:(200,23) std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::resize(std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *, std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::size_type, const std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::value_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h:(200,43) std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::size(const std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h:(200,67) std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::operator[](std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *, std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h:(201,22) std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::operator[](std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *, std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h:(201,36) std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::size(const std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h:(201,46) std::bitset<1024UL>::reset(std::bitset<1024UL> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h:(203,19) std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::operator[](std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *, std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h:(203,20) SAMRAI::hier::ComponentSelector::_index(const SAMRAI::hier::ComponentSelector *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h:(203,31) std::bitset<1024UL>::set(std::bitset<1024UL> *, std::size_t, bool)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h:(203,35) SAMRAI::hier::ComponentSelector::_element(const SAMRAI::hier::ComponentSelector *, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(68,33)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(68,33)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(551,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(68,33)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *$i1 (552:9) and *U1e7_V (552:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(551,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(68,33)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(68,33)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.8.5/bits/stl_algobase.h(682,3) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(68,33)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(186,8) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(68,33)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(186,8) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(68,33)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(186,8) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(68,33)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(186,8) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(68,33)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(68,33)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(68,33)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(68,33)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(68,33)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/vector.tcc(449,30):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (32, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bitset(175,9):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h(66,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier23PatchDataRestartManager27registerPatchDataForRestartEi] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataRestartManager.h:66

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     175
            Global    :      60
            Local     :     115
        Regenerable   :       7
        Spilled       :      11
        
    Routine stack
        Variables     :     128 bytes*
            Reads     :      12 [6.37e-01 ~ 1.0%]
            Writes    :       4 [3.01e-01 ~ 0.5%]
        Spills        :      24 bytes*
            Reads     :       9 [1.54e-02 ~ 0.0%]
            Writes    :       8 [1.74e-02 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::_M_get_Tp_allocator(std::_Vector_base<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt6bitsetILm1024EESaIS1_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::_M_deallocate(std::_Vector_base<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *, std::_Vector_base<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt6bitsetILm1024EESaIS1_EE13_M_deallocateEPS1_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::swap(std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *, std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(935,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrIN6SAMRAI4xfer15RefineAlgorithmELN9__gnu_cxx12_Lock_policyE2EE4swapERS5_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:935

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      14
            Global    :       0
            Local     :      14
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::resize(std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (733:17) and call:?1memset (733:17)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   remark #15527: loop was not vectorized: function call to ?1memset cannot be vectorized   [ /usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(670,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_vector.h(665,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4xfer15RefineAlgorithmEESaIS4_EE6resizeEm] /usr/include/c++/4.8.5/bits/stl_vector.h:665

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      76
            Global    :      35
            Local     :      41
        Regenerable   :      11
        Spilled       :       9
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       5 [3.08e-01 ~ 0.5%]
            Writes    :       5 [3.08e-01 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)) [111] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1132,4)
  -> INLINE: (1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1132,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVector7getZeroERKNS_4tbox9DimensionE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:1132

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::xfer::CoarsenAlgorithm *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::xfer::CoarsenAlgorithm *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(449,2):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IPN6SAMRAI4xfer16CoarsenAlgorithmEEET_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:449

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      28
            Global    :      10
            Local     :      18
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::xfer::RefineAlgorithm *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::xfer::RefineAlgorithm *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(449,2):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IPN6SAMRAI4xfer15RefineAlgorithmEEET_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:449

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      28
            Global    :      10
            Local     :      18
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::BaseGridGeometry::lookupTimeInterpolateOperator(std::shared_ptr<SAMRAI::hier::TimeInterpolateOperator> *, SAMRAI::hier::BaseGridGeometry *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::string &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::BaseGridGeometry::lookupTimeInterpolateOperator(std::shared_ptr<SAMRAI::hier::TimeInterpolateOperator> *, SAMRAI::hier::BaseGridGeometry *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::string &)) [114] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BaseGridGeometry.h(739,4)
  -> INLINE: (740,42) std::__shared_ptr<SAMRAI::hier::TransferOperatorRegistry, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::TransferOperatorRegistry, __gnu_cxx::_S_atomic> *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/BaseGridGeometry.h(739,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier16BaseGridGeometry29lookupTimeInterpolateOperatorERKSt10shared_ptrINS0_8VariableEERKSs] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BaseGridGeometry.h:739

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       0
            Local     :      19
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::hier::TimeInterpolateOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::TimeInterpolateOperator> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4hier23TimeInterpolateOperatorEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::OutersideVariable<double> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::OutersideVariable<double> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(449,2):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IPN6SAMRAI4pdat17OutersideVariableIdEEEET_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:449

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      28
            Global    :      10
            Local     :      18
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideVariable<double>::OutersideVariable(SAMRAI::pdat::OutersideVariable<double> *, const SAMRAI::tbox::Dimension &, const std::string &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideVariable<double>::OutersideVariable(SAMRAI::pdat::OutersideVariable<double> *, const SAMRAI::tbox::Dimension &, const std::string &, int)) [117] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.cpp(37,1)
  -> INLINE: (31,26) std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (31,26) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (36,19) std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *)
  -> (36,19) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *)
  -> INLINE: (36,19) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, void>(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (36,19) std::make_shared<SAMRAI::pdat::OutersideDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *, const SAMRAI::tbox::Dimension &, int &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::__shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::OutersideDataFactory<double> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &>::type, const SAMRAI::tbox::Dimension &, int &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &>::type &&, const SAMRAI::tbox::Dimension &, int &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &>::type, const SAMRAI::tbox::Dimension &, int &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &>::type &&, const SAMRAI::tbox::Dimension &, int &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &&, const SAMRAI::tbox::Dimension &, int &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const SAMRAI::tbox::Dimension &, int &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> *, const SAMRAI::tbox::Dimension &, int &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::construct<SAMRAI::pdat::OutersideDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::_S_construct<SAMRAI::pdat::OutersideDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>::construct<SAMRAI::pdat::OutersideDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> *, SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &)
                            -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::OutersideDataFactory<double>::OutersideDataFactory(SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int)
                              -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:(38,27) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
                                -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
                              -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:(40,16) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
                                -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.cpp(37,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat17OutersideVariableIdEC1ERKNS_4tbox9DimensionERKSsi] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.cpp:37

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :     108
            Global    :      28
            Local     :      80
        Regenerable   :      18
        Spilled       :       6
        
    Routine stack
        Variables     :      40 bytes*
            Reads     :       8 [4.00e+00 ~ 4.4%]
            Writes    :      15 [9.00e+00 ~ 9.9%]
        Spills        :       8 bytes*
            Reads     :       1 [1.00e+00 ~ 1.1%]
            Writes    :       1 [1.00e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::hier::PatchDataFactory>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4hier16PatchDataFactoryEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat20OutersideDataFactoryIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::dynamic_pointer_cast<SAMRAI::pdat::SideVariable<double>, SAMRAI::hier::Variable>(std::shared_ptr<SAMRAI::pdat::SideVariable<double>> *, const std::shared_ptr<SAMRAI::hier::Variable> &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr.h(448,5):remark #34051: REGISTER ALLOCATION : [_ZSt20dynamic_pointer_castIN6SAMRAI4pdat12SideVariableIdEENS0_4hier8VariableEESt10shared_ptrIT_ERKS6_IT0_E] /usr/include/c++/4.8.5/bits/shared_ptr.h:448

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r12-r13]
        
    Routine temporaries
        Total         :      26
            Global    :      15
            Local     :      11
        Regenerable   :       8
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::dynamic_pointer_cast<SAMRAI::pdat::FaceVariable<double>, SAMRAI::hier::Variable>(std::shared_ptr<SAMRAI::pdat::FaceVariable<double>> *, const std::shared_ptr<SAMRAI::hier::Variable> &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr.h(448,5):remark #34051: REGISTER ALLOCATION : [_ZSt20dynamic_pointer_castIN6SAMRAI4pdat12FaceVariableIdEENS0_4hier8VariableEESt10shared_ptrIT_ERKS6_IT0_E] /usr/include/c++/4.8.5/bits/shared_ptr.h:448

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r12-r13]
        
    Routine temporaries
        Total         :      26
            Global    :      15
            Local     :      11
        Regenerable   :       8
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::SideVariable<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideVariable<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat12SideVariableIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::FaceVariable<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::FaceVariable<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat12FaceVariableIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4hier8VariableEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Variable::getPatchDataFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, const SAMRAI::hier::Variable *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Variable::getPatchDataFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, const SAMRAI::hier::Variable *) const) [125] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Variable.h(154,4)
  -> INLINE: (155,14) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Variable.h(154,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier8Variable19getPatchDataFactoryEv] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Variable.h:154

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       8
            Local     :       7
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::FaceDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::FaceDataFactory<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat15FaceDataFactoryIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::OuterfaceVariable<double> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::OuterfaceVariable<double> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(449,2):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IPN6SAMRAI4pdat17OuterfaceVariableIdEEEET_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:449

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      28
            Global    :      10
            Local     :      18
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceVariable<double>::OuterfaceVariable(SAMRAI::pdat::OuterfaceVariable<double> *, const SAMRAI::tbox::Dimension &, const std::string &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceVariable<double>::OuterfaceVariable(SAMRAI::pdat::OuterfaceVariable<double> *, const SAMRAI::tbox::Dimension &, const std::string &, int)) [128] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.cpp(37,1)
  -> INLINE: (31,26) std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (31,26) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (36,19) std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *)
  -> (36,19) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *)
  -> INLINE: (36,19) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, void>(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (36,19) std::make_shared<SAMRAI::pdat::OuterfaceDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *, const SAMRAI::tbox::Dimension &, int &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::__shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::OuterfaceDataFactory<double> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &>::type, const SAMRAI::tbox::Dimension &, int &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &>::type &&, const SAMRAI::tbox::Dimension &, int &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &>::type, const SAMRAI::tbox::Dimension &, int &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &>::type &&, const SAMRAI::tbox::Dimension &, int &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &&, const SAMRAI::tbox::Dimension &, int &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const SAMRAI::tbox::Dimension &, int &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> *, const SAMRAI::tbox::Dimension &, int &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::construct<SAMRAI::pdat::OuterfaceDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::_S_construct<SAMRAI::pdat::OuterfaceDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>::construct<SAMRAI::pdat::OuterfaceDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> *, SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &)
                            -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::OuterfaceDataFactory<double>::OuterfaceDataFactory(SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int)
                              -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:(38,27) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
                                -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
                              -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:(40,16) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
                                -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.cpp(37,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat17OuterfaceVariableIdEC1ERKNS_4tbox9DimensionERKSsi] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.cpp:37

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :     108
            Global    :      28
            Local     :      80
        Regenerable   :      18
        Spilled       :       6
        
    Routine stack
        Variables     :      40 bytes*
            Reads     :       8 [4.00e+00 ~ 4.4%]
            Writes    :      15 [9.00e+00 ~ 9.9%]
        Spills        :       8 bytes*
            Reads     :       1 [1.00e+00 ~ 1.1%]
            Writes    :       1 [1.00e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat20OuterfaceDataFactoryIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::SideDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideDataFactory<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat15SideDataFactoryIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type, const std::vector<int, std::allocator<int>>::allocator_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(272,9)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(272,9)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(272,9)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_vector.h(271,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEEC1EmRKS0_] /usr/include/c++/4.8.5/bits/stl_vector.h:271

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rsi rdi r12-r15 zmm0]
        
    Routine temporaries
        Total         :      25
            Global    :      15
            Local     :      10
        Regenerable   :       4
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<int, std::allocator<int>>::~_Vector_base(std::_Vector_base<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIiSaIiEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::_M_create_node<const std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::value_type &>(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *, const std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::value_type &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_list.h(115,9):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_list.h(501,2):remark #34051: REGISTER ALLOCATION : [_ZNSt4listISt10shared_ptrIN6SAMRAI4hier8VariableEESaIS4_EE14_M_create_nodeIIRKS4_EEEPSt10_List_nodeIS4_EDpOT_] /usr/include/c++/4.8.5/bits/stl_list.h:501

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r13 zmm0]
        
    Routine temporaries
        Total         :      19
            Global    :      11
            Local     :       8
        Regenerable   :       4
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_List_base<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::_M_put_node(std::_List_base<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *, std::_List_node<std::shared_ptr<SAMRAI::hier::Variable>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_list.h(338,7):remark #34051: REGISTER ALLOCATION : [_ZNSt10_List_baseISt10shared_ptrIN6SAMRAI4hier8VariableEESaIS4_EE11_M_put_nodeEPSt10_List_nodeIS4_E] /usr/include/c++/4.8.5/bits/stl_list.h:338

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::xfer::CoarsenAlgorithm::registerCoarsen(SAMRAI::xfer::CoarsenAlgorithm *, int, int, const std::shared_ptr<SAMRAI::hier::CoarsenOperator> &, const std::shared_ptr<SAMRAI::xfer::VariableFillPattern> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::xfer::CoarsenAlgorithm::registerCoarsen(SAMRAI::xfer::CoarsenAlgorithm *, int, int, const std::shared_ptr<SAMRAI::hier::CoarsenOperator> &, const std::shared_ptr<SAMRAI::xfer::VariableFillPattern> &)) [139] /home/akula/libraries/SAMRAI/include/SAMRAI/xfer/CoarsenAlgorithm.h(209,4)
  -> INLINE: (211,10) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/xfer/CoarsenAlgorithm.h(209,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4xfer16CoarsenAlgorithm15registerCoarsenEiiRKSt10shared_ptrINS_4hier15CoarsenOperatorEERKS2_INS0_19VariableFillPatternEE] /home/akula/libraries/SAMRAI/include/SAMRAI/xfer/CoarsenAlgorithm.h:209

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      24
            Global    :       0
            Local     :      24
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::BaseGridGeometry::lookupCoarsenOperator(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *, SAMRAI::hier::BaseGridGeometry *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::string &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::BaseGridGeometry::lookupCoarsenOperator(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *, SAMRAI::hier::BaseGridGeometry *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::string &)) [140] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BaseGridGeometry.h(695,4)
  -> INLINE: (696,42) std::__shared_ptr<SAMRAI::hier::TransferOperatorRegistry, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::TransferOperatorRegistry, __gnu_cxx::_S_atomic> *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/BaseGridGeometry.h(695,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier16BaseGridGeometry21lookupCoarsenOperatorERKSt10shared_ptrINS0_8VariableEERKSs] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BaseGridGeometry.h:695

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       0
            Local     :      19
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::_M_release(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(138,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:138

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r13-r14]
        
    Routine temporaries
        Total         :      23
            Global    :      12
            Local     :      11
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::BaseGridGeometry::lookupRefineOperator(std::shared_ptr<SAMRAI::hier::RefineOperator> *, SAMRAI::hier::BaseGridGeometry *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::string &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::BaseGridGeometry::lookupRefineOperator(std::shared_ptr<SAMRAI::hier::RefineOperator> *, SAMRAI::hier::BaseGridGeometry *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::string &)) [143] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BaseGridGeometry.h(716,4)
  -> INLINE: (717,42) std::__shared_ptr<SAMRAI::hier::TransferOperatorRegistry, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::TransferOperatorRegistry, __gnu_cxx::_S_atomic> *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/BaseGridGeometry.h(716,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier16BaseGridGeometry20lookupRefineOperatorERKSt10shared_ptrINS0_8VariableEERKSs] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BaseGridGeometry.h:716

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       0
            Local     :      19
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::ComponentSelector::setFlag(SAMRAI::hier::ComponentSelector *, int)) [144] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(197,4)
  -> INLINE: (199,16) SAMRAI::hier::ComponentSelector::getSize(const SAMRAI::hier::ComponentSelector *) const
    -> INLINE: (70,44) std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::size(const std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *) const
  -> INLINE: (200,23) std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::resize(std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *, std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::size_type, const std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (200,43) std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::size(const std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *) const
  -> INLINE: (200,67) std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::operator[](std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *, std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::size_type)
  -> INLINE: (201,22) std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::operator[](std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *, std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::size_type)
  -> INLINE: (201,36) std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::size(const std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *) const
  -> INLINE: (201,46) std::bitset<1024UL>::reset(std::bitset<1024UL> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (203,19) std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::operator[](std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>> *, std::vector<std::bitset<1024UL>, std::allocator<std::bitset<1024UL>>>::size_type)
  -> INLINE: (203,20) SAMRAI::hier::ComponentSelector::_index(const SAMRAI::hier::ComponentSelector *, int) const
  -> INLINE: (203,31) std::bitset<1024UL>::set(std::bitset<1024UL> *, std::size_t, bool)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (203,35) SAMRAI::hier::ComponentSelector::_element(const SAMRAI::hier::ComponentSelector *, int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(201,23)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(201,23)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(551,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(201,23)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *$i1 (552:9) and *U1e7_V (552:9)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(551,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(201,23)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(201,23)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.8.5/bits/stl_algobase.h(682,3) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(201,23)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(186,8) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(201,23)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(186,8) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(201,23)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(186,8) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(201,23)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(186,8) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(201,23)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(201,23)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(201,23)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(201,23)
   remark #15310: loop was not vectorized: operation cannot be vectorized   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(201,23)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/vector.tcc(449,30):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (32, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bitset(175,9):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_construct.h(75,42):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(197,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier17ComponentSelector7setFlagEi] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h:197

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     174
            Global    :      59
            Local     :     115
        Regenerable   :       7
        Spilled       :      11
        
    Routine stack
        Variables     :     128 bytes*
            Reads     :      12 [6.37e-01 ~ 1.0%]
            Writes    :       4 [3.01e-01 ~ 0.5%]
        Spills        :      24 bytes*
            Reads     :       9 [1.54e-02 ~ 0.0%]
            Writes    :       8 [1.74e-02 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::hier::RefineOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::RefineOperator> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4hier14RefineOperatorEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::hier::CoarsenOperator>::~shared_ptr(std::shared_ptr<SAMRAI::hier::CoarsenOperator> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4hier15CoarsenOperatorEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::xfer::VariableFillPattern>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::VariableFillPattern> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4xfer19VariableFillPatternEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::printClassData(const RungeKuttaLevelIntegrator *, std::ostream &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::printClassData(const RungeKuttaLevelIntegrator *, std::ostream &) const) [149] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3745,1)
  -> (3746,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3746,57) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3747,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3749,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3750,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, const void *)
  -> (3750,45) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3751,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3751,30) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3751,47) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3753,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3753,26) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, bool)
  -> (3753,39) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3757,12) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3757,26) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3757,35) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3758,12) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3758,31) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3758,45) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3759,12) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3759,41) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, bool)
  -> (3759,65) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3760,12) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3761,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, bool)
  -> (3761,35) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3765,12) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3765,25) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3765,33) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3768,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3769,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, const void *)
  -> (3769,55) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3771,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3773,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3773,34) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3774,50) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size(const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *) const
  -> INLINE: (3774,50) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size(const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *) const
  -> (3778,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3782,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3785,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (3785,22) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3785,25) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (3786,53) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3786,53) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3786,57) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3786,57) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> (3788,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3788,25) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (3788,35) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3788,38) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (3790,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3792,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size(const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *) const
  -> INLINE: (3792,49) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size(const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *) const
  -> (3796,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3800,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3803,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (3803,21) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3803,24) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (3804,52) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3804,52) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3804,56) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3804,56) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> (3806,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3806,25) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (3806,34) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3806,37) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (3808,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3810,50) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size(const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *) const
  -> INLINE: (3810,50) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size(const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *) const
  -> (3814,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3818,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3821,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (3821,22) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3821,25) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (3822,53) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3822,53) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3822,57) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3822,57) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> (3824,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3824,25) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (3824,35) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3824,38) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> (3826,12) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3828,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3829,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3830,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3774,50)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3786,57)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3792,49)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3804,56)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3810,50)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3822,57)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3745,1):remark #34051: REGISTER ALLOCATION : [_ZNK25RungeKuttaLevelIntegrator14printClassDataERSo] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:3745

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r13-r15 zmm0]
        
    Routine temporaries
        Total         :     323
            Global    :      82
            Local     :     241
        Regenerable   :      73
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: putToRestart(const RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (putToRestart(const RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [152] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn16_NK25RungeKuttaLevelIntegrator12putToRestartERKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEE] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      25
            Global    :       0
            Local     :      25
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::putToRestart(const RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::putToRestart(const RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [153] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3845,1)
  -> INLINE: (3848,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3848,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3848,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3848,28) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3849,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3849,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3849,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U328_V$1bde.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> INLINE: (3851,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3851,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3851,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3851,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3851,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3851,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3851,36)  EXPR_CONV.SI64.P64(*((SI64*) (__$U329_V$1bdf.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> INLINE: (3852,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3852,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3852,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3852,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3852,34) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3852,34) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3852,34)  EXPR_CONV.SI64.P64(*((SI64*) (__$U32a_V$1be0.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(46(SI32)) * 8(I64))))
  -> INLINE: (3853,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3853,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3853,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3853,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3853,39) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3853,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3853,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U32b_V$1be1.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(46(SI32)) * 8(I64))))
  -> INLINE: (3854,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3854,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3854,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3854,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3854,47) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3854,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3854,47)  EXPR_CONV.SI64.P64(*((SI64*) (__$U32c_V$1be2.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> INLINE: (3855,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3855,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3855,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3855,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3855,53) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3855,53) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3855,53)  EXPR_CONV.SI64.P64(*((SI64*) (__$U32d_V$1be3.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> INLINE: (3856,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3856,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3856,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3856,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3856,33) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3856,33) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3856,33)  EXPR_CONV.SI64.P64(*((SI64*) (__$U32e_V$1be4.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(46(SI32)) * 8(I64))))
  -> INLINE: (3857,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3857,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3857,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3857,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3858,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3858,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3858,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U32f_V$1be5.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))
  -> DELETED: (3860,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3860,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3860,5) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3860,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3860,29) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3860,29) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (3860,29)  EXPR_CONV.SI64.P64(*((SI64*) (__$U331_V$1be7.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (3860,29) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3862,39) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3862,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3862,55) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> (3862,69) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (3862,69) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3862,69) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (3862,69)  EXPR_CONV.SI64.P64(*((SI64*) (__$U332_V$1be8.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (3862,69) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3864,10) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3864,23) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3864,23) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3864,23) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3864,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3864,39) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (3864,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U335_V$1beb.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> INLINE: (3868,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3868,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3868,49) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3868,51) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3870,29) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (3870,65) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> (3870,69) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> DELETED: (3870,69) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (3870,69) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3870,69) std::allocator<double>::allocator(std::allocator<double> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3870,69) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3872,53) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3872,53) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3872,57) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3872,57) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3874,24) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3874,37) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3874,40) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (3877,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3877,50)  EXPR_CONV.SI64.P64(*((SI64*) (__$U339_V$1bfc.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
  -> INLINE: (3878,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3878,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3882,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3882,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3882,47) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3882,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3884,29) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (3884,63) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> (3884,67) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> DELETED: (3884,67) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (3884,67) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3884,67) std::allocator<double>::allocator(std::allocator<double> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3884,67) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3886,52) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3886,52) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3886,56) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3886,56) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3888,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3888,35) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3888,38) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (3891,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3891,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U33c_V$1c04.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
  -> INLINE: (3892,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3892,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3896,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3896,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3896,49) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3896,51) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3898,29) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (3898,65) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> (3898,69) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> DELETED: (3898,69) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (3898,69) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3898,69) std::allocator<double>::allocator(std::allocator<double> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3898,69) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3900,53) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3900,53) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3900,57) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3900,57) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3902,24) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3902,37) std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::operator[](const std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type) const
  -> INLINE: (3902,40) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (3905,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3905,50)  EXPR_CONV.SI64.P64(*((SI64*) (__$U33f_V$1c0c.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
  -> INLINE: (3906,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3906,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3908,10) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3908,20) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3908,20) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3908,20) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3908,43) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3908,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3908,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3908,43)  EXPR_CONV.SI64.P64(*((SI64*) (__$U336_V$1bec.0.1822->__vptr_V$100b + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3866,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3870,69)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3870,69)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3870,69)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3872,57)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3880,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3884,67)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3884,67)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3884,67)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3886,56)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3894,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3898,69)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3898,69)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3898,69)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3900,57)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3845,1):remark #34051: REGISTER ALLOCATION : [_ZNK25RungeKuttaLevelIntegrator12putToRestartERKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:3845

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     904
            Global    :     216
            Local     :     688
        Regenerable   :     273
        Spilled       :      11
        
    Routine stack
        Variables     :     214 bytes*
            Reads     :      57 [7.75e+01 ~ 3.4%]
            Writes    :      64 [7.92e+01 ~ 3.5%]
        Spills        :      48 bytes*
            Reads     :       6 [3.08e+01 ~ 1.3%]
            Writes    :       9 [3.08e+01 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::~_Vector_base(std::_Vector_base<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::outputHeaderStatistics(RungeKuttaLevelIntegrator *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::outputHeaderStatistics(RungeKuttaLevelIntegrator *)) [158] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3921,1)
  -> INLINE: (3922,29) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3923,5)  EXPR_CONV.SI64.P64(*((SI64*) ((this_98734_V$1c14.0.1824->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(38(SI32)) * 8(I64))))
  -> INLINE: (3924,29) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3921,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator22outputHeaderStatisticsEv] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:3921

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdi r15]
        
    Routine temporaries
        Total         :      15
            Global    :       7
            Local     :       8
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::computeAndOutputDataStatistics(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, double, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::computeAndOutputDataStatistics(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, double, bool)) [159] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3940,1)
  -> INLINE: (3941,29) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3943,31) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3943,33) SAMRAI::hier::PatchHierarchy::getNumberOfLevels(const SAMRAI::hier::PatchHierarchy *) const
  -> INLINE: (3948,22) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (3948,24) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (3948,24) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3950,20) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (3950,22) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
  -> INLINE: (3952,20) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (3952,22) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
  -> INLINE: (3953,5) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3955,23) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3959,29) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
  -> INLINE: (3959,33) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3966,50)  EXPR_CONV.SI64.P64(*((SI64*) ((this_98735_V$1c15.0.1825->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(36(SI32)) * 8(I64))))
  -> INLINE: (3972,22) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (3972,24) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (3972,24) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3975,22) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (3975,24) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (3975,24) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3977,50) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3977,89) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (3977,91) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
  -> (3979,13) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
  -> INLINE: (3979,13) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3981,25) std::__shared_ptr<SAMRAI::xfer::CoarsenSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3982,5) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3982,5) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3982,5) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3988,22) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (3988,24) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (3988,24) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3990,49) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
  -> INLINE: (3990,49) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3994,27) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3994,27) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::operator=(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *, std::shared_ptr<SAMRAI::xfer::RefineSchedule> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3994,27) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3994,46) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (3997,17) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
  -> INLINE: (3997,17) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4001,27) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::operator=(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *, std::shared_ptr<SAMRAI::xfer::RefineSchedule> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4001,27) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4001,27) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4001,46) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (4003,17) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
  -> INLINE: (4003,17) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4006,22) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4007,5) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4007,5) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4018,61)  EXPR_CONV.SI64.P64(*((SI64*) ((this_98735_V$1c15.0.1825->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(37(SI32)) * 8(I64))))
  -> INLINE: (4021,26) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (4021,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (4021,28) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4024,26) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (4024,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (4024,28) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4026,54) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4026,93) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (4026,95) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
  -> (4028,17) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
  -> INLINE: (4028,17) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4030,29) std::__shared_ptr<SAMRAI::xfer::CoarsenSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4031,9) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4031,9) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4031,9) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4032,56)  EXPR_CONV.SI64.P64(*((SI64*) ((this_98735_V$1c15.0.1825->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(37(SI32)) * 8(I64))))
  -> INLINE: (4038,26) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (4038,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (4038,28) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4040,53) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
  -> INLINE: (4040,53) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4044,31) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4044,31) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::operator=(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *, std::shared_ptr<SAMRAI::xfer::RefineSchedule> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4044,31) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4044,50) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (4047,21) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
  -> INLINE: (4047,21) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4051,31) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::operator=(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *, std::shared_ptr<SAMRAI::xfer::RefineSchedule> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4051,31) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4051,31) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4051,50) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (4053,21) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
  -> INLINE: (4053,21) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4056,26) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4057,9) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4057,9) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4063,56)  EXPR_CONV.SI64.P64(*((SI64*) ((this_98735_V$1c15.0.1825->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(39(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (4067,59)  EXPR_CONV.SI64.P64(*((SI64*) ((this_98735_V$1c15.0.1825->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(40(SI32)) * 8(I64))))
  -> INLINE: (4073,22) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (4073,24) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (4073,24) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4075,20) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (4075,22) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
  -> INLINE: (4077,20) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (4077,22) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
  -> INLINE: (4078,5) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4080,29) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3945,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3950,22) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3957,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3969,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3977,91) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3985,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4001,48) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4016,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4026,95) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4035,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4051,52) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4070,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4075,22) ]
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4013,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4026,95) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3940,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator30computeAndOutputDataStatisticsERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEdb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:3940

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     643
            Global    :     160
            Local     :     483
        Regenerable   :     179
        Spilled       :      16
        
    Routine stack
        Variables     :     360 bytes*
            Reads     :      36 [3.53e+02 ~ 5.8%]
            Writes    :      44 [4.17e+02 ~ 6.8%]
        Spills        :      88 bytes*
            Reads     :      28 [1.22e+02 ~ 2.0%]
            Writes    :      19 [3.22e+01 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator=(std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *, std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(859,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrIN6SAMRAI4xfer14RefineScheduleELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:859

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      15
            Local     :      15
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 4.7%]
            Writes    :       4 [3.35e+00 ~ 7.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4hier10PatchLevelEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4xfer25CoarsenTransactionFactoryEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4xfer15CoarsenScheduleEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::usingRefinedTimestepping(const RungeKuttaLevelIntegrator *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::usingRefinedTimestepping(const RungeKuttaLevelIntegrator *) const) [164] /home/akula/HAMeRS_IB/HAMeRS/include/algs/integrator/RungeKuttaLevelIntegrator.hpp(1065,9)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/algs/integrator/RungeKuttaLevelIntegrator.hpp(1065,9):remark #34051: REGISTER ALLOCATION : [_ZNK25RungeKuttaLevelIntegrator24usingRefinedTimesteppingEv] /home/akula/HAMeRS_IB/HAMeRS/include/algs/integrator/RungeKuttaLevelIntegrator.hpp:1065

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::printStatistics(const RungeKuttaLevelIntegrator *, std::ostream &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::printStatistics(const RungeKuttaLevelIntegrator *, std::ostream &) const) [165] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3642,1)
  -> INLINE: (3646,33) SAMRAI::tbox::SAMRAI_MPI::getSAMRAIWorld()
  -> INLINE: (3652,13) SAMRAI::tbox::SAMRAI_MPI::getRank(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> INLINE: (3657,61) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size(const std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *) const
  -> INLINE: (3657,61) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size(const std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *) const
  -> INLINE: (3659,38) std::__shared_ptr<SAMRAI::tbox::Statistic, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::tbox::Statistic, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3659,51) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::operator[](std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size_type)
  -> INLINE: (3660,38) std::__shared_ptr<SAMRAI::tbox::Statistic, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::tbox::Statistic, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3660,51) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::operator[](std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size_type)
  -> INLINE: (3661,38) std::__shared_ptr<SAMRAI::tbox::Statistic, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::tbox::Statistic, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3661,55) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::operator[](std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size_type)
  -> (3662,15) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3662,31) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (3662,40) SAMRAI::tbox::Statistic::getName(const SAMRAI::tbox::Statistic *) const
  -> (3662,50) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3662,57) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3668,15) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3669,15) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (3673,41) SAMRAI::tbox::Statistic::getStatSequenceLength(const SAMRAI::tbox::Statistic *) const
  -> INLINE: (3673,41) SAMRAI::tbox::Statistic::getStatSequenceLength(const SAMRAI::tbox::Statistic *) const
  -> INLINE: (3676,27) SAMRAI::tbox::Statistic::getInstanceId(const SAMRAI::tbox::Statistic *) const
  -> INLINE: (3679,27) SAMRAI::tbox::Statistic::getInstanceId(const SAMRAI::tbox::Statistic *) const
  -> INLINE: (3682,27) SAMRAI::tbox::Statistic::getInstanceId(const SAMRAI::tbox::Statistic *) const
  -> INLINE: (3684,48) SAMRAI::tbox::SAMRAI_MPI::getSize(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> INLINE: (3687,27) SAMRAI::tbox::Statistic::getInstanceId(const SAMRAI::tbox::Statistic *) const
  -> INLINE: (3690,27) SAMRAI::tbox::Statistic::getInstanceId(const SAMRAI::tbox::Statistic *) const
  -> INLINE: (3693,27) SAMRAI::tbox::Statistic::getInstanceId(const SAMRAI::tbox::Statistic *) const
  -> INLINE: (3695,48) SAMRAI::tbox::SAMRAI_MPI::getSize(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> INLINE: (3698,27) SAMRAI::tbox::Statistic::getInstanceId(const SAMRAI::tbox::Statistic *) const
  -> (3700,19) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw)
  -> INLINE: (3700,32) std::setw(int)
  -> (3701,19) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3701,26) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::ios_base &(*)(std::ios_base &))
  -> (3701,45) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setprecision)
  -> INLINE: (3701,66) std::setprecision(int)
  -> (3701,69) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw)
  -> INLINE: (3701,82) std::setw(int)
  -> (3701,86) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3702,19) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3702,26) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::ios_base &(*)(std::ios_base &))
  -> (3702,40) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setprecision)
  -> INLINE: (3702,61) std::setprecision(int)
  -> (3702,64) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw)
  -> INLINE: (3702,77) std::setw(int)
  -> (3702,81) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3703,19) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3703,26) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw)
  -> INLINE: (3703,39) std::setw(int)
  -> (3703,42) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3704,19) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3704,26) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw)
  -> INLINE: (3704,39) std::setw(int)
  -> (3704,42) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3705,19) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3705,29) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw)
  -> INLINE: (3705,42) std::setw(int)
  -> (3705,46) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3706,19) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3706,27) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw)
  -> INLINE: (3706,40) std::setw(int)
  -> (3706,43) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setprecision)
  -> INLINE: (3706,64) std::setprecision(int)
  -> (3706,67) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3707,19) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3707,26) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::ios_base &(*)(std::ios_base &))
  -> (3707,40) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setprecision)
  -> INLINE: (3707,61) std::setprecision(int)
  -> (3708,19) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw)
  -> INLINE: (3708,32) std::setw(int)
  -> (3708,35) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3709,19) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3709,27) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::ios_base &(*)(std::ios_base &))
  -> (3709,41) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setprecision)
  -> INLINE: (3709,62) std::setprecision(int)
  -> (3710,19) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw)
  -> INLINE: (3710,32) std::setw(int)
  -> (3710,35) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3711,19) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3711,28) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::ios_base &(*)(std::ios_base &))
  -> (3711,42) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setprecision)
  -> INLINE: (3711,63) std::setprecision(int)
  -> (3712,19) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw)
  -> INLINE: (3712,32) std::setw(int)
  -> (3712,35) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3713,19) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3713,29) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw)
  -> INLINE: (3713,42) std::setw(int)
  -> (3713,45) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3714,19) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3714,27) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw)
  -> INLINE: (3714,40) std::setw(int)
  -> (3714,43) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setprecision)
  -> INLINE: (3714,64) std::setprecision(int)
  -> (3714,67) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3715,19) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3715,28) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setw)
  -> INLINE: (3715,41) std::setw(int)
  -> (3715,44) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setprecision)
  -> INLINE: (3715,65) std::setprecision(int)
  -> (3715,68) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3716,19) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3721,11) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3722,11) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3723,11) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3723,19) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (3723,51) SAMRAI::tbox::SAMRAI_MPI::getSize(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> (3724,11) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3725,11) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (3726,11) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3727,11) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (3728,11) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3728,19) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (3728,52) SAMRAI::tbox::SAMRAI_MPI::getSize(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> (3729,11) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3730,11) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3657,61)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3673,41)
      remark #15523: loop was not vectorized: loop control variable sn was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3642,1):remark #34051: REGISTER ALLOCATION : [_ZNK25RungeKuttaLevelIntegrator15printStatisticsERSo] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:3642

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     373
            Global    :     183
            Local     :     190
        Regenerable   :      71
        Spilled       :      22
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     160 bytes*
            Reads     :      35 [2.99e+02 ~ 9.8%]
            Writes    :      24 [1.70e+02 ~ 5.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ios_base::precision(std::ios_base *, std::streamsize)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/ios_base.h(631,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8ios_base9precisionEl] /usr/include/c++/4.8.5/bits/ios_base.h:631

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ios_base::width(std::ios_base *, std::streamsize)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/ios_base.h(654,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8ios_base5widthEl] /usr/include/c++/4.8.5/bits/ios_base.h:654

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::preprocessFluxAndSourceData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, double, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::preprocessFluxAndSourceData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, double, bool, bool, bool)) [172] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3168,1)
  -> INLINE: (3177,35) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3177,37) SAMRAI::hier::PatchLevel::getLevelNumber(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3184,18) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3184,20) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3189,18) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3189,20) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3196,18) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3196,20) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3197,18) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3197,20) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3205,18) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3205,20) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3207,52) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3207,54) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3208,20) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (3208,20) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (3208,28) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3208,28) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3208,30) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3208,30) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3209,19) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3211,63) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3214,21) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::begin(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3216,31) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (3216,31) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (3216,34) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3216,34) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3220,29) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INDIRECT- (VIRTUAL): (3221,29)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3bf_V$1d20.0.1829->__vptr_V$1106 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
  -> INLINE: (3225,73) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3226,29) std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *)
  -> INLINE: (3226,29) std::static_pointer_cast<SAMRAI::pdat::OuterfaceData<double>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3227,38) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3227,40) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3230,34) std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> (3230,36) SAMRAI::pdat::OuterfaceData<double>::fillAll(SAMRAI::pdat::OuterfaceData<double> *, const double &)
  -> INLINE: (3231,21) std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3234,73) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3235,29) std::shared_ptr<SAMRAI::pdat::OutersideData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *)
  -> INLINE: (3235,29) std::static_pointer_cast<SAMRAI::pdat::OutersideData<double>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3236,38) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3236,40) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3239,34) std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3239,36) SAMRAI::pdat::OutersideData<double>::fillAll(SAMRAI::pdat::OutersideData<double> *, const double &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(647,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(647,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(647,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(647,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(648,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(648,21) SAMRAI::pdat::ArrayData<double>::fillAll(SAMRAI::pdat::ArrayData<double> *, const double &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(649,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(649,21) SAMRAI::pdat::ArrayData<double>::fillAll(SAMRAI::pdat::ArrayData<double> *, const double &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3240,21) std::shared_ptr<SAMRAI::pdat::OutersideData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3242,27) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator++(std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, int)
  -> INLINE: (3248,18) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3248,20) SAMRAI::hier::PatchLevel::setTime(SAMRAI::hier::PatchLevel *, double, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(874,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(874,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3184,20)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3189,20)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3196,20)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3197,20)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3205,20)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3208,20)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3216,17)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(647,33) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3239,36)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3239,36)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3239,36)
            remark #25408: memset generated
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3239,36)
               remark #15300: LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3239,36)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3239,36)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3239,36)
            remark #25408: memset generated
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3239,36)
               remark #15300: LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3239,36)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(873,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3248,20)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3168,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator27preprocessFluxAndSourceDataERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEEddbbb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:3168

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     291
            Global    :      92
            Local     :     199
        Regenerable   :      80
        Spilled       :      17
        
    Routine stack
        Variables     :     264 bytes*
            Reads     :      43 [1.68e+01 ~ 2.4%]
            Writes    :      16 [9.46e+00 ~ 1.4%]
        Spills        :      96 bytes*
            Reads     :      27 [1.22e+01 ~ 1.8%]
            Writes    :      20 [5.43e+00 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::fillAll(SAMRAI::pdat::OuterfaceData<double> *, const double &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::fillAll(SAMRAI::pdat::OuterfaceData<double> *, const double &)) [173] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(700,1)
  -> INLINE: (701,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (701,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (701,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (701,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (702,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (702,21) SAMRAI::pdat::ArrayData<double>::fillAll(SAMRAI::pdat::ArrayData<double> *, const double &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (703,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (703,21) SAMRAI::pdat::ArrayData<double>::fillAll(SAMRAI::pdat::ArrayData<double> *, const double &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(701,33)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(703,21)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(703,21)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(703,21)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(703,21)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(703,21)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(703,21)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(703,21)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(704,21)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(704,21)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(704,21)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(704,21)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(704,21)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(704,21)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(704,21)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(700,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OuterfaceDataIdE7fillAllERKd] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:700

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r12 zmm0-zmm3]
        
    Routine temporaries
        Total         :      99
            Global    :      51
            Local     :      48
        Regenerable   :       1
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [1.80e+00 ~ 0.4%]
            Writes    :       2 [1.80e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat13OuterfaceDataIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::OutersideData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat13OutersideDataIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::postprocessFluxAndSourceData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::postprocessFluxAndSourceData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, bool, bool, bool)) [176] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3279,1)
  -> INLINE: (3284,14) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3284,16) SAMRAI::hier::PatchLevel::getDim(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3284,25) SAMRAI::tbox::Dimension::operator>(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3286,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3286,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3286,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3286,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3286,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3286,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3286,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3286,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3286,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3286,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3286,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3286,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3286,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3292,14) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (3292,16) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
  -> INLINE: (3293,14) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (3293,16) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
  -> INLINE: (3296,34) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3296,36) SAMRAI::hier::PatchLevel::getLevelNumber(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3298,48) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3298,50) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3299,16) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (3299,16) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (3299,24) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3299,24) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3299,26) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3299,26) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3300,15) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3302,59) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3305,17) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::begin(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3307,17) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::begin(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3309,43) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3309,45) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> INLINE: (3309,54) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3310,43) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3310,45) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> INLINE: (3310,54) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const
  -> INLINE: (3312,29) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (3312,29) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (3312,32) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3312,32) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3315,26) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> (3315,28) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
  -> (3315,28) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
  -> INLINE: (3315,41) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INLINE: (3317,25) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> (3317,27) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
  -> (3317,27) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
  -> INLINE: (3317,40) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> (3319,60) std::shared_ptr<SAMRAI::pdat::FaceData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::FaceData<double>> *)
  -> INLINE: (3319,60) std::shared_ptr<SAMRAI::pdat::FaceData<double>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::FaceData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3320,65) std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *)
  -> INLINE: (3320,65) std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3322,60) std::shared_ptr<SAMRAI::pdat::SideData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<double>> *)
  -> INLINE: (3322,60) std::shared_ptr<SAMRAI::pdat::SideData<double>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3323,65) std::shared_ptr<SAMRAI::pdat::OutersideData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *)
  -> INLINE: (3323,65) std::shared_ptr<SAMRAI::pdat::OutersideData<double>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3326,54) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3326,56) SAMRAI::hier::PatchLevel::getDim(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3330,32) std::shared_ptr<SAMRAI::pdat::FaceData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::FaceData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3330,32) std::shared_ptr<SAMRAI::pdat::FaceData<double>>::operator=(std::shared_ptr<SAMRAI::pdat::FaceData<double>> *, std::shared_ptr<SAMRAI::pdat::FaceData<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3331,25) std::static_pointer_cast<SAMRAI::pdat::FaceData<double>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::FaceData<double>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3333,32) std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3333,32) std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>>::operator=(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *, std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3334,25) std::static_pointer_cast<SAMRAI::pdat::OuterfaceData<double>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3339,40) std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3339,42) SAMRAI::pdat::FaceData<double>::getDepth(const SAMRAI::pdat::FaceData<double> *) const
  -> INLINE: (3340,37) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3340,49) std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3340,51) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3344,32) std::shared_ptr<SAMRAI::pdat::SideData<double>>::operator=(std::shared_ptr<SAMRAI::pdat::SideData<double>> *, std::shared_ptr<SAMRAI::pdat::SideData<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3344,32) std::shared_ptr<SAMRAI::pdat::SideData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3345,25) std::static_pointer_cast<SAMRAI::pdat::SideData<double>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::SideData<double>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3347,32) std::shared_ptr<SAMRAI::pdat::OutersideData<double>>::operator=(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *, std::shared_ptr<SAMRAI::pdat::OutersideData<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3347,32) std::shared_ptr<SAMRAI::pdat::OutersideData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3348,25) std::static_pointer_cast<SAMRAI::pdat::OutersideData<double>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3353,40) std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3353,42) SAMRAI::pdat::SideData<double>::getDepth(const SAMRAI::pdat::SideData<double> *) const
  -> INLINE: (3354,37) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3354,49) std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3354,51) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3362,34) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3362,36) SAMRAI::hier::PatchLevel::getDim(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3362,45) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3365,36) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3366,36) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3367,48) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3369,43) std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3369,45) SAMRAI::pdat::FaceData<double>::getPointer(SAMRAI::pdat::FaceData<double> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(95,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(95,32) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3370,43) std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3370,45) SAMRAI::pdat::OuterfaceData<double>::getPointer(SAMRAI::pdat::OuterfaceData<double> *, int, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(108,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(108,38) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3376,42) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3376,44) SAMRAI::hier::PatchLevel::getDim(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3376,53) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3379,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3380,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3381,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3382,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3383,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3384,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3386,51) std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3386,53) SAMRAI::pdat::FaceData<double>::getPointer(SAMRAI::pdat::FaceData<double> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(95,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(95,32) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3387,51) std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3387,53) SAMRAI::pdat::OuterfaceData<double>::getPointer(SAMRAI::pdat::OuterfaceData<double> *, int, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(108,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(108,38) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3389,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3390,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3391,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3392,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3393,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3394,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3396,51) std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3396,53) SAMRAI::pdat::FaceData<double>::getPointer(SAMRAI::pdat::FaceData<double> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(95,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(95,32) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3397,51) std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3397,53) SAMRAI::pdat::OuterfaceData<double>::getPointer(SAMRAI::pdat::OuterfaceData<double> *, int, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(108,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(108,38) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3399,42) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3399,44) SAMRAI::hier::PatchLevel::getDim(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3399,53) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3402,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3403,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3404,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3405,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3406,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3407,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3408,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3409,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3410,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3412,51) std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3412,53) SAMRAI::pdat::FaceData<double>::getPointer(SAMRAI::pdat::FaceData<double> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(95,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(95,32) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3413,51) std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3413,53) SAMRAI::pdat::OuterfaceData<double>::getPointer(SAMRAI::pdat::OuterfaceData<double> *, int, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(108,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(108,38) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3415,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3416,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3417,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3418,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3419,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3420,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3421,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3422,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3423,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3425,51) std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3425,53) SAMRAI::pdat::FaceData<double>::getPointer(SAMRAI::pdat::FaceData<double> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(95,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(95,32) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3426,51) std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3426,53) SAMRAI::pdat::OuterfaceData<double>::getPointer(SAMRAI::pdat::OuterfaceData<double> *, int, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(108,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(108,38) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3428,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3429,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3430,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3431,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3432,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3433,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3434,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3435,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3436,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3438,51) std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3438,53) SAMRAI::pdat::FaceData<double>::getPointer(SAMRAI::pdat::FaceData<double> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(95,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(95,32) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3439,51) std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3439,53) SAMRAI::pdat::OuterfaceData<double>::getPointer(SAMRAI::pdat::OuterfaceData<double> *, int, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(108,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(108,38) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3444,42) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3444,44) SAMRAI::hier::PatchLevel::getDim(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3444,53) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3447,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3448,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3448,52) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3448,60) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3449,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3450,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3452,51) std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3452,53) SAMRAI::pdat::SideData<double>::getPointer(SAMRAI::pdat::SideData<double> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3453,51) std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3453,53) SAMRAI::pdat::OutersideData<double>::getPointer(SAMRAI::pdat::OutersideData<double> *, int, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(107,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(107,38) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3455,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3456,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3456,52) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3456,60) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3457,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3458,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3460,51) std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3460,53) SAMRAI::pdat::SideData<double>::getPointer(SAMRAI::pdat::SideData<double> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3461,51) std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3461,53) SAMRAI::pdat::OutersideData<double>::getPointer(SAMRAI::pdat::OutersideData<double> *, int, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(107,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(107,38) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3463,42) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3463,44) SAMRAI::hier::PatchLevel::getDim(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3463,53) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3466,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3467,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3467,52) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3468,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3468,52) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3468,60) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3469,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3470,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3471,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3473,51) std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3473,53) SAMRAI::pdat::SideData<double>::getPointer(SAMRAI::pdat::SideData<double> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3474,51) std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3474,53) SAMRAI::pdat::OutersideData<double>::getPointer(SAMRAI::pdat::OutersideData<double> *, int, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(107,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(107,38) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3476,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3477,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3477,52) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3478,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3478,52) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3478,60) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3479,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3480,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3481,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3483,51) std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3483,53) SAMRAI::pdat::SideData<double>::getPointer(SAMRAI::pdat::SideData<double> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3484,51) std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3484,53) SAMRAI::pdat::OutersideData<double>::getPointer(SAMRAI::pdat::OutersideData<double> *, int, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(107,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(107,38) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3486,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3487,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3487,52) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3488,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3488,52) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3488,60) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3489,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3490,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3491,56) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3493,51) std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3493,53) SAMRAI::pdat::SideData<double>::getPointer(SAMRAI::pdat::SideData<double> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3494,51) std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3494,53) SAMRAI::pdat::OutersideData<double>::getPointer(SAMRAI::pdat::OutersideData<double> *, int, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(107,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(107,38) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3501,25) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator++(std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, int)
  -> INLINE: (3502,28) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator++(std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, int)
  -> INLINE: (3503,13) std::shared_ptr<SAMRAI::pdat::OutersideData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3503,13) std::shared_ptr<SAMRAI::pdat::SideData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3503,13) std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3503,13) std::shared_ptr<SAMRAI::pdat::FaceData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::FaceData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3503,13) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3503,13) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3312,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3357,17)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3360,21)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3299,16)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3317,27) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3279,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator28postprocessFluxAndSourceDataERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEEbbb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:3279

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     877
            Global    :     161
            Local     :     716
        Regenerable   :     237
        Spilled       :      22
        
    Routine stack
        Variables     :     685 bytes*
            Reads     :     107 [1.16e+03 ~ 12.4%]
            Writes    :      90 [5.67e+02 ~ 6.1%]
        Spills        :     136 bytes*
            Reads     :      80 [8.46e+02 ~ 9.0%]
            Writes    :      23 [4.86e+01 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic>::operator=(std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic> *, std::__shared_ptr<SAMRAI::pdat::SideData<double>, __gnu_cxx::_S_atomic> &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(859,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrIN6SAMRAI4pdat8SideDataIdEELN9__gnu_cxx12_Lock_policyE2EEaSEOS6_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:859

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      15
            Local     :      15
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 4.7%]
            Writes    :       4 [3.35e+00 ~ 7.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic>::operator=(std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic> *, std::__shared_ptr<SAMRAI::pdat::FaceData<double>, __gnu_cxx::_S_atomic> &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(859,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrIN6SAMRAI4pdat8FaceDataIdEELN9__gnu_cxx12_Lock_policyE2EEaSEOS6_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:859

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      15
            Local     :      15
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 4.7%]
            Writes    :       4 [3.35e+00 ~ 7.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(162,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEEaSERKS1_] /usr/include/c++/4.8.5/bits/vector.tcc:162

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      56
            Global    :      22
            Local     :      34
        Regenerable   :       1
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4hier9PatchDataEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::copyTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::copyTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &)) [181] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3521,1)
  -> INLINE: (3526,45) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3526,47) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3527,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (3527,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (3527,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3527,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3527,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3527,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3528,12) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3530,55) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3533,13) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::begin(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3535,29) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (3535,29) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (3535,32) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3535,32) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3538,22) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> (3538,24) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
  -> INLINE: (3538,24) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(188,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U130_V$1104.0.1305.24766->__vptr_V$1106 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3538,37) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INLINE: (3541,22) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> (3541,24) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
  -> INLINE: (3541,24) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(188,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U130_V$1104.0.1305.24777->__vptr_V$1106 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3541,37) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INLINE: (3543,21) std::__shared_ptr<SAMRAI::hier::PatchData, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchData, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3543,28) std::__shared_ptr<SAMRAI::hier::PatchData, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::PatchData, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3543,28)  SAMRAI::pdat::OutersideData<double>::copy(SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::PatchData &) (1388)
  -> INLINE: (3545,25) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator++(std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, int)
  -> INLINE: (3546,9) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3546,9) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3527,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3535,9)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3521,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator21copyTimeDependentDataERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEERKS0_INS2_15VariableContextEESA_] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:3521

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :     118
            Global    :      38
            Local     :      80
        Regenerable   :      24
        Spilled       :       8
        
    Routine stack
        Variables     :      72 bytes*
            Reads     :      10 [1.16e+02 ~ 5.6%]
            Writes    :       7 [1.20e+02 ~ 5.8%]
        Spills        :      16 bytes*
            Reads     :       3 [3.50e+01 ~ 1.7%]
            Writes    :       2 [2.00e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::copyNoFillData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::copyNoFillData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &)) [182] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3563,1)
  -> INLINE: (3568,45) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3568,47) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3569,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (3569,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (3569,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3569,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3569,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3569,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (3570,12) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3572,55) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3575,13) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::begin(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3577,28) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (3577,28) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (3577,31) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3577,31) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3580,22) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> (3580,24) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
  -> INLINE: (3580,24) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(188,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U130_V$1104.0.1305.24744->__vptr_V$1106 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3580,37) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INLINE: (3583,22) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> (3583,24) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
  -> INLINE: (3583,24) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(188,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U130_V$1104.0.1305.24755->__vptr_V$1106 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3583,37) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INLINE: (3585,21) std::__shared_ptr<SAMRAI::hier::PatchData, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchData, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3585,28) std::__shared_ptr<SAMRAI::hier::PatchData, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::PatchData, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3585,28)  SAMRAI::pdat::OutersideData<double>::copy(SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::PatchData &) (1388)
  -> INLINE: (3587,24) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator++(std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, int)
  -> INLINE: (3588,9) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3588,9) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3569,13)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3577,9)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(3563,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator14copyNoFillDataERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEERKS0_INS2_15VariableContextEESA_] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:3563

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :     118
            Global    :      38
            Local     :      80
        Regenerable   :      24
        Spilled       :       8
        
    Routine stack
        Variables     :      72 bytes*
            Reads     :      10 [1.16e+02 ~ 5.6%]
            Writes    :       7 [1.20e+02 ~ 5.8%]
        Spills        :      16 bytes*
            Reads     :       3 [3.50e+01 ~ 1.7%]
            Writes    :       2 [2.00e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::synchronizeLevelWithCoarser(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::synchronizeLevelWithCoarser(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, double)) [183] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2405,1)
  -> (2413,46) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
  -> INLINE: (2413,46) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2423,33) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2424,15) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::operator=(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *, std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2424,15) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2424,15) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2424,34) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (2427,13) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
  -> INLINE: (2427,13) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2428,33) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2430,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2431,14) std::__shared_ptr<SAMRAI::xfer::CoarsenSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2432,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2437,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2437,23) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(775,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(776,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2438,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2438,23) SAMRAI::hier::PatchLevel::setTime(SAMRAI::hier::PatchLevel *, double, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(873,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(874,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(874,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2440,27) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2442,33) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2443,29) std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::operator[](std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)
  -> INLINE: (2443,42) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2443,44) SAMRAI::hier::PatchLevel::getLevelNumber(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (2443,61) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2445,33) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2449,56) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2449,58) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (2450,17) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (2450,17) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (2450,32) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2450,32) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2450,34) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (2450,34) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (2451,16) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2453,59) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2455,18) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2457,49) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2459,16)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3e2_V$1d7c.0.1833->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> INLINE: (2460,18) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2463,27) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (2465,56)  RungeKuttaLevelIntegrator::copyTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) (1831)
  -> INLINE: (2467,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2467,23) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,24) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,37) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
      -> INLINE: (1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,40) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(829,47) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)
      -> INLINE: (1210,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(830,12) SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const
      -> INLINE: (1181,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2474,26) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2475,11) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2475,11) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2475,11) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::operator=(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *, std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2475,32) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2478,9) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2478,9) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
  -> INLINE: (2479,26) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2481,23) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2483,24) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2484,10) std::__shared_ptr<SAMRAI::xfer::CoarsenSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2485,24) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2487,23) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2487,23) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(775,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2437,23)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(873,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2438,23)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2450,17)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(829,37) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2467,23)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(2405,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator27synchronizeLevelWithCoarserERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEES6_dd] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:2405

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     380
            Global    :      84
            Local     :     296
        Regenerable   :      88
        Spilled       :      10
        
    Routine stack
        Variables     :     280 bytes*
            Reads     :      44 [3.65e+01 ~ 11.3%]
            Writes    :      37 [2.82e+01 ~ 8.7%]
        Spills        :      40 bytes*
            Reads     :      11 [9.40e+00 ~ 2.9%]
            Writes    :       5 [3.04e+00 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::finalizeCallback()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::finalizeCallback()) [184] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4453,1)
  -> INLINE: (4454,30) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4455,30) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4456,28) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4457,42) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4458,30) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4459,35) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4460,29) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4461,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4462,28) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4463,32) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4464,32) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4465,36) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4466,28) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4467,36) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4468,28) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4469,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4470,38) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4471,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4472,17) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4473,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4474,20) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4475,25) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4476,21) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4477,34) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4478,24) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4479,26) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4480,22) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4481,23) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4482,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4483,25) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4484,30) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4485,28) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4486,27) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4487,25) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4488,30) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4494,18) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::clear(std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4495,18) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::clear(std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4496,22) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::clear(std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4494,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4494,18)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4495,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4495,18)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4496,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4496,22)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4453,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator16finalizeCallbackEv] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:4453

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     250
            Global    :      75
            Local     :     175
        Regenerable   :      21
        Spilled       :       8
        
    Routine stack
        Variables     :     560 bytes*
            Reads     :      65 [6.50e+01 ~ 10.0%]
            Writes    :     130 [1.30e+02 ~ 19.9%]
        Spills        :      24 bytes*
            Reads     :       3 [2.96e+00 ~ 0.5%]
            Writes    :       3 [2.96e+00 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::swap(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *, std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(935,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrIN6SAMRAI4tbox5TimerELN9__gnu_cxx12_Lock_policyE2EE4swapERS5_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:935

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rsi rdi r8]
        
    Routine temporaries
        Total         :      14
            Global    :       0
            Local     :      14
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::~_Sp_counted_base(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::~_Sp_counted_base(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(113,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:113

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(124,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:124

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<char, std::allocator<char>>::_M_get_Tp_allocator(std::_Vector_base<char, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<char, std::allocator<char>>::_M_deallocate(std::_Vector_base<char, std::allocator<char>> *, std::_Vector_base<char, std::allocator<char>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(328,31):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1EOS1_] /usr/include/c++/4.8.5/bits/stl_vector.h:328

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r8-r10]
        
    Routine temporaries
        Total         :      16
            Global    :       0
            Local     :      16
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4tbox5TimerEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::~vector(std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4tbox9StatisticEESaIS4_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       3
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [4.93e+00 ~ 4.5%]
            Writes    :       5 [4.93e+00 ~ 4.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::~_Vector_base(std::_Vector_base<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4tbox9StatisticEESaIS4_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::_M_get_Tp_allocator(std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4xfer15RefineAlgorithmEESaIS4_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::_M_deallocate(std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>> *, std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4xfer15RefineAlgorithmEESaIS4_EE13_M_deallocateEPS4_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::pointer>(std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::pointer, std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineAlgorithm>>>::pointer)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_construct.h(101,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10shared_ptrIN6SAMRAI4xfer15RefineAlgorithmEEEEvT_S8_] /usr/include/c++/4.8.5/bits/stl_construct.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 4.0%]
            Writes    :       4 [3.94e+00 ~ 4.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::xfer::RefineAlgorithm *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<SAMRAI::xfer::RefineAlgorithm *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4xfer15RefineAlgorithmELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rbp rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::xfer::RefineAlgorithm *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<SAMRAI::xfer::RefineAlgorithm *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4xfer15RefineAlgorithmELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::xfer::RefineAlgorithm *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<SAMRAI::xfer::RefineAlgorithm *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4xfer15RefineAlgorithmELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::xfer::RefineAlgorithm *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::xfer::RefineAlgorithm *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4xfer15RefineAlgorithmELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::xfer::RefineAlgorithm *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::xfer::RefineAlgorithm *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4xfer15RefineAlgorithmELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::xfer::CoarsenAlgorithm *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<SAMRAI::xfer::CoarsenAlgorithm *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4xfer16CoarsenAlgorithmELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rbp rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::xfer::CoarsenAlgorithm *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<SAMRAI::xfer::CoarsenAlgorithm *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4xfer16CoarsenAlgorithmELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::xfer::CoarsenAlgorithm *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<SAMRAI::xfer::CoarsenAlgorithm *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4xfer16CoarsenAlgorithmELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::xfer::CoarsenAlgorithm *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::xfer::CoarsenAlgorithm *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4xfer16CoarsenAlgorithmELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::xfer::CoarsenAlgorithm *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::xfer::CoarsenAlgorithm *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4xfer16CoarsenAlgorithmELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,43):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat20OuterfaceDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat20OuterfaceDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(407,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat20OuterfaceDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:407

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(412,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat20OuterfaceDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:412

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdi r12]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(423,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat20OuterfaceDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:423

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      22
            Global    :      11
            Local     :      11
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,43):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat13OuterfaceDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat13OuterfaceDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(407,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat13OuterfaceDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:407

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(412,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat13OuterfaceDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:412

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdi r12]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(423,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat13OuterfaceDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:423

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      22
            Global    :      11
            Local     :      11
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<double> *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<double> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rbx rdi]
        
    Routine temporaries
        Total         :      14
            Global    :       8
            Local     :       6
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<double> *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<double> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<double> *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<double> *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<double> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<double> *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<double> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<double> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceGeometry>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceGeometry>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,43):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat17OuterfaceGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceGeometry>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceGeometry>::type>::type>, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat17OuterfaceGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceGeometry>::type>::type>, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceGeometry>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(407,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat17OuterfaceGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:407

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceGeometry>::type>::type>, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceGeometry>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(412,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat17OuterfaceGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:412

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdi r12]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceGeometry>::type>::type>, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceGeometry>::type>::type>, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(423,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat17OuterfaceGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:423

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      22
            Global    :      11
            Local     :      11
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::OuterfaceVariable<double> *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<SAMRAI::pdat::OuterfaceVariable<double> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat17OuterfaceVariableIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::OuterfaceVariable<double> *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<SAMRAI::pdat::OuterfaceVariable<double> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat17OuterfaceVariableIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::OuterfaceVariable<double> *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<SAMRAI::pdat::OuterfaceVariable<double> *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat17OuterfaceVariableIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::OuterfaceVariable<double> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::OuterfaceVariable<double> *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat17OuterfaceVariableIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::OuterfaceVariable<double> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::OuterfaceVariable<double> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat17OuterfaceVariableIdEELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,43):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat20OutersideDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat20OutersideDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(407,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat20OutersideDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:407

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(412,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat20OutersideDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:412

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdi r12]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(423,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat20OutersideDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:423

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      22
            Global    :      11
            Local     :      11
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,43):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat13OutersideDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat13OutersideDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(407,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat13OutersideDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:407

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(412,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat13OutersideDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:412

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdi r12]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(423,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat13OutersideDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:423

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      22
            Global    :      11
            Local     :      11
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideGeometry>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideGeometry>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,43):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat17OutersideGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideGeometry>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideGeometry>::type>::type>, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat17OutersideGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideGeometry>::type>::type>, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideGeometry>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(407,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat17OutersideGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:407

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideGeometry>::type>::type>, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideGeometry>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(412,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat17OutersideGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:412

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdi r12]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideGeometry>::type>::type>, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideGeometry>::type>::type>, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(423,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat17OutersideGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:423

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      22
            Global    :      11
            Local     :      11
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::OutersideVariable<double> *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<SAMRAI::pdat::OutersideVariable<double> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat17OutersideVariableIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::OutersideVariable<double> *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<SAMRAI::pdat::OutersideVariable<double> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat17OutersideVariableIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::OutersideVariable<double> *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<SAMRAI::pdat::OutersideVariable<double> *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat17OutersideVariableIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::OutersideVariable<double> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::OutersideVariable<double> *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat17OutersideVariableIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::OutersideVariable<double> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::OutersideVariable<double> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat17OutersideVariableIdEELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::tbox::SAMRAI_MPI::getSAMRAIWorld()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::SAMRAI_MPI::getSAMRAIWorld()) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/SAMRAI_MPI.h(169,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::SAMRAI_MPI::getRank(const SAMRAI::tbox::SAMRAI_MPI *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::SAMRAI_MPI::getRank(const SAMRAI::tbox::SAMRAI_MPI *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/SAMRAI_MPI.h(217,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::SAMRAI_MPI::getSize(const SAMRAI::tbox::SAMRAI_MPI *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::SAMRAI_MPI::getSize(const SAMRAI::tbox::SAMRAI_MPI *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/SAMRAI_MPI.h(227,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(150,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getWriteBuffer<double>(SAMRAI::tbox::MessageStream *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getWriteBuffer<double>(SAMRAI::tbox::MessageStream *, size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(215,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getReadBuffer<double>(SAMRAI::tbox::MessageStream *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getReadBuffer<double>(SAMRAI::tbox::MessageStream *, size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(193,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(73,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::operator>(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::operator>(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(93,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(137,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Database::getVector(SAMRAI::tbox::Database *, const std::string &, std::vector<double, std::allocator<double>> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Database::getVector(SAMRAI::tbox::Database *, const std::string &, std::vector<double, std::allocator<double>> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h(1470,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h(1486,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MathUtilities<double>::Min(double, double)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MathUtilities<double>::Min(double, double)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(200,1)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MathUtilities<double>::Max(double, double)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MathUtilities<double>::Max(double, double)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MathUtilities.cpp(209,1)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Statistic::getName(const SAMRAI::tbox::Statistic *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Statistic::getName(const SAMRAI::tbox::Statistic *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Statistic.h(90,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Statistic::getInstanceId(const SAMRAI::tbox::Statistic *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Statistic::getInstanceId(const SAMRAI::tbox::Statistic *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Statistic.h(108,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Statistic::getStatSequenceLength(const SAMRAI::tbox::Statistic *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Statistic::getStatSequenceLength(const SAMRAI::tbox::Statistic *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Statistic.h(120,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::RestartManager::isFromRestart(SAMRAI::tbox::RestartManager *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::RestartManager::isFromRestart(SAMRAI::tbox::RestartManager *)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/RestartManager.h(101,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::RestartManager::getRootDatabase(std::shared_ptr<SAMRAI::tbox::Database> *, SAMRAI::tbox::RestartManager *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::RestartManager::getRootDatabase(std::shared_ptr<SAMRAI::tbox::Database> *, SAMRAI::tbox::RestartManager *)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/RestartManager.h(130,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BlockId.h(155,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(186,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(269,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(285,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(301,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator*(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator*(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(542,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(555,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator/(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator/(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(611,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::ceilingDivide(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::ceilingDivide(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(701,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(715,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(756,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::max(const SAMRAI::hier::IntVector *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::max(const SAMRAI::hier::IntVector *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(990,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getDim(const SAMRAI::hier::IntVector *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::getDim(const SAMRAI::hier::IntVector *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1119,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(148,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(175,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(193,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(297,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(315,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(502,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(515,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(724,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(150,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(159,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getBeginBlock(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getBeginBlock(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(215,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getEndBlock(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getEndBlock(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(223,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(330,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(495,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(515,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(536,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::setLower(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::setLower(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(547,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(558,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::setUpper(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::setUpper(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(569,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(598,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(622,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(652,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(679,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(753,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::operator=(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::operator=(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1166,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::Box_from_DatabaseBox(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::Box_from_DatabaseBox(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1182,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1212,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1248,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1298,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::empty(const SAMRAI::hier::BoxContainer *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::empty(const SAMRAI::hier::BoxContainer *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(681,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(692,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(703,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(159,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(170,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(201,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(271,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::ComponentSelector::getSize(const SAMRAI::hier::ComponentSelector *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::ComponentSelector::getSize(const SAMRAI::hier::ComponentSelector *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(69,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::ComponentSelector::_index(const SAMRAI::hier::ComponentSelector *, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::ComponentSelector::_index(const SAMRAI::hier::ComponentSelector *, int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(305,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::ComponentSelector::_element(const SAMRAI::hier::ComponentSelector *, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::ComponentSelector::_element(const SAMRAI::hier::ComponentSelector *, int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/ComponentSelector.h(314,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(84,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(94,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(103,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getTime(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getTime(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(123,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(245,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchDataFactory::getDim(const SAMRAI::hier::PatchDataFactory *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchDataFactory::getDim(const SAMRAI::hier::PatchDataFactory *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataFactory.h(188,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Variable::getName(const SAMRAI::hier::Variable *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Variable::getName(const SAMRAI::hier::Variable *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Variable.h(112,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h(93,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h(158,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Patch::setPatchData(SAMRAI::hier::Patch *, int, const std::shared_ptr<SAMRAI::hier::PatchData> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Patch::setPatchData(SAMRAI::hier::Patch *, int, const std::shared_ptr<SAMRAI::hier::PatchData> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h(216,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Patch::deallocatePatchData(SAMRAI::hier::Patch *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Patch::deallocatePatchData(SAMRAI::hier::Patch *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h(305,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Patch::numPatchData(const SAMRAI::hier::Patch *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Patch::numPatchData(const SAMRAI::hier::Patch *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h(539,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxLevel::getMPI(const SAMRAI::hier::BoxLevel *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxLevel::getMPI(const SAMRAI::hier::BoxLevel *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxLevel.h(399,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxLevel::getLocalNumberOfBoxes(const SAMRAI::hier::BoxLevel *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxLevel::getLocalNumberOfBoxes(const SAMRAI::hier::BoxLevel *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxLevel.h(597,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxLevel::getLocalNumberOfCells(const SAMRAI::hier::BoxLevel *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxLevel::getLocalNumberOfCells(const SAMRAI::hier::BoxLevel *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxLevel.h(686,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxLevel::findConnectorWithTranspose(const SAMRAI::hier::BoxLevel *, const SAMRAI::hier::BoxLevel &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, SAMRAI::hier::ConnectorNotFoundAction, bool) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxLevel::findConnectorWithTranspose(const SAMRAI::hier::BoxLevel *, const SAMRAI::hier::BoxLevel &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, SAMRAI::hier::ConnectorNotFoundAction, bool) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxLevel.h(1426,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::getLevelNumber(const SAMRAI::hier::PatchLevel *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchLevel::getLevelNumber(const SAMRAI::hier::PatchLevel *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(189,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::getNextCoarserHierarchyLevelNumber(const SAMRAI::hier::PatchLevel *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchLevel::getNextCoarserHierarchyLevelNumber(const SAMRAI::hier::PatchLevel *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(226,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::inHierarchy(const SAMRAI::hier::PatchLevel *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchLevel::inHierarchy(const SAMRAI::hier::PatchLevel *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(254,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::getBoxLevel(const SAMRAI::hier::PatchLevel *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchLevel::getBoxLevel(const SAMRAI::hier::PatchLevel *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(604,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::getRatioToLevelZero(const SAMRAI::hier::PatchLevel *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchLevel::getRatioToLevelZero(const SAMRAI::hier::PatchLevel *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(652,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::getDim(const SAMRAI::hier::PatchLevel *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchLevel::getDim(const SAMRAI::hier::PatchLevel *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(841,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::findConnectorWithTranspose(const SAMRAI::hier::PatchLevel *, const SAMRAI::hier::PatchLevel &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, SAMRAI::hier::ConnectorNotFoundAction, bool) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchLevel::findConnectorWithTranspose(const SAMRAI::hier::PatchLevel *, const SAMRAI::hier::PatchLevel &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, SAMRAI::hier::ConnectorNotFoundAction, bool) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(961,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(1171,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchLevel::Iterator::operator->(const SAMRAI::hier::PatchLevel::Iterator *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(1180,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(1200,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h(1209,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h(493,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchHierarchy::getNumberOfLevels(const SAMRAI::hier::PatchHierarchy *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchHierarchy::getNumberOfLevels(const SAMRAI::hier::PatchHierarchy *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h(548,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchHierarchy::getFinestLevelNumber(const SAMRAI::hier::PatchHierarchy *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchHierarchy::getFinestLevelNumber(const SAMRAI::hier::PatchHierarchy *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h(560,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchHierarchy::getMPI(const SAMRAI::hier::PatchHierarchy *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchHierarchy::getMPI(const SAMRAI::hier::PatchHierarchy *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h(695,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchHierarchy::getDim(const SAMRAI::hier::PatchHierarchy *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchHierarchy::getDim(const SAMRAI::hier::PatchHierarchy *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h(1087,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::FaceData<double>::getDepth(const SAMRAI::pdat::FaceData<double> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::FaceData<double>::getDepth(const SAMRAI::pdat::FaceData<double> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp(82,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::FaceData<double>::getPointer(SAMRAI::pdat::FaceData<double> *, int, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::FaceData<double>::getPointer(SAMRAI::pdat::FaceData<double> *, int, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp(91,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::FaceData<double>::getArrayData(SAMRAI::pdat::FaceData<double> *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::FaceData<double>::getArrayData(SAMRAI::pdat::FaceData<double> *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp(171,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::FaceData<double>::getArrayData(const SAMRAI::pdat::FaceData<double> *, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::FaceData<double>::getArrayData(const SAMRAI::pdat::FaceData<double> *, int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp(182,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<double>::getDepth(const SAMRAI::pdat::SideData<double> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<double>::getDepth(const SAMRAI::pdat::SideData<double> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(148,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<double>::getPointer(SAMRAI::pdat::SideData<double> *, int, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<double>::getPointer(SAMRAI::pdat::SideData<double> *, int, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(157,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<double>::getArrayData(SAMRAI::pdat::SideData<double> *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<double>::getArrayData(SAMRAI::pdat::SideData<double> *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(240,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<double>::getArrayData(const SAMRAI::pdat::SideData<double> *, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<double>::getArrayData(const SAMRAI::pdat::SideData<double> *, int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(251,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceVariable<double>::~OuterfaceVariable(SAMRAI::pdat::OuterfaceVariable<double> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceVariable<double>::~OuterfaceVariable(SAMRAI::pdat::OuterfaceVariable<double> *)) [1303] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.cpp(54,1)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.cpp(54,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat17OuterfaceVariableIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.cpp:54

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      18
            Global    :       6
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceVariable<double>::~OuterfaceVariable(SAMRAI::pdat::OuterfaceVariable<double> *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceVariable<double>::~OuterfaceVariable(SAMRAI::pdat::OuterfaceVariable<double> *const)) [1304] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.cpp(53,26)
  -> INLINE: (53,26) SAMRAI::pdat::OuterfaceVariable<double>::~OuterfaceVariable(SAMRAI::pdat::OuterfaceVariable<double> *)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.cpp(53,26):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat17OuterfaceVariableIdED0Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.cpp:53

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rdi r15]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceVariable<double>::fineBoundaryRepresentsVariable(const SAMRAI::pdat::OuterfaceVariable<double> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceVariable<double>::fineBoundaryRepresentsVariable(const SAMRAI::pdat::OuterfaceVariable<double> *) const) [1305] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.h(81,48)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.h(81,48):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat17OuterfaceVariableIdE30fineBoundaryRepresentsVariableEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.h:81

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceVariable<double>::dataLivesOnPatchBorder(const SAMRAI::pdat::OuterfaceVariable<double> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceVariable<double>::dataLivesOnPatchBorder(const SAMRAI::pdat::OuterfaceVariable<double> *) const) [1306] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.h(89,40)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.h(89,40):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat17OuterfaceVariableIdE22dataLivesOnPatchBorderEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceVariable.h:89

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::FaceDataFactory<double>::getDepth(const SAMRAI::pdat::FaceDataFactory<double> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::FaceDataFactory<double>::getDepth(const SAMRAI::pdat::FaceDataFactory<double> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceDataFactory.cpp(143,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideVariable<double>::~OutersideVariable(SAMRAI::pdat::OutersideVariable<double> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideVariable<double>::~OutersideVariable(SAMRAI::pdat::OutersideVariable<double> *)) [1308] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.cpp(55,1)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.cpp(55,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat17OutersideVariableIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.cpp:55

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      18
            Global    :       6
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideVariable<double>::~OutersideVariable(SAMRAI::pdat::OutersideVariable<double> *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideVariable<double>::~OutersideVariable(SAMRAI::pdat::OutersideVariable<double> *const)) [1309] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.cpp(54,26)
  -> INLINE: (54,26) SAMRAI::pdat::OutersideVariable<double>::~OutersideVariable(SAMRAI::pdat::OutersideVariable<double> *)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.cpp(54,26):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat17OutersideVariableIdED0Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.cpp:54

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rdi r15]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideVariable<double>::fineBoundaryRepresentsVariable(const SAMRAI::pdat::OutersideVariable<double> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideVariable<double>::fineBoundaryRepresentsVariable(const SAMRAI::pdat::OutersideVariable<double> *) const) [1310] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.h(81,48)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.h(81,48):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat17OutersideVariableIdE30fineBoundaryRepresentsVariableEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.h:81

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideVariable<double>::dataLivesOnPatchBorder(const SAMRAI::pdat::OutersideVariable<double> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideVariable<double>::dataLivesOnPatchBorder(const SAMRAI::pdat::OutersideVariable<double> *) const) [1311] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.h(89,40)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.h(89,40):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat17OutersideVariableIdE22dataLivesOnPatchBorderEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideVariable.h:89

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideDataFactory<double>::getDepth(const SAMRAI::pdat::SideDataFactory<double> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideDataFactory<double>::getDepth(const SAMRAI::pdat::SideDataFactory<double> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideDataFactory.cpp(197,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::getSizeOfData(const SAMRAI::hier::Box &, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::OuterfaceData<double>::getSizeOfData(const SAMRAI::hier::Box &, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(643,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::~OuterfaceData(SAMRAI::pdat::OuterfaceData<double> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::~OuterfaceData(SAMRAI::pdat::OuterfaceData<double> *)) [1314] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(87,1)
  -> INLINE: (88,1) std::shared_ptr<SAMRAI::pdat::ArrayData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(88,1)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U149_V->_M_refcount->_M_pi (545:2) and *__mem (68:6)
   remark #25436: completely unrolled by 6  
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(87,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OuterfaceDataIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:87

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rdi r12-r14]
        
    Routine temporaries
        Total         :     102
            Global    :      43
            Local     :      59
        Regenerable   :      19
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::~OuterfaceData(SAMRAI::pdat::OuterfaceData<double> *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::~OuterfaceData(SAMRAI::pdat::OuterfaceData<double> *const)) [1315] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(86,22)
  -> INLINE: (86,22) SAMRAI::pdat::OuterfaceData<double>::~OuterfaceData(SAMRAI::pdat::OuterfaceData<double> *)
    -> INLINE: (88,1) std::shared_ptr<SAMRAI::pdat::ArrayData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<double>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(88,1) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(87,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U149_V->_M_refcount->_M_pi (545:2) and *__mem (68:6)
   remark #25436: completely unrolled by 6  
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(86,22):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OuterfaceDataIdED0Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:86

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rdi r12-r14]
        
    Routine temporaries
        Total         :     103
            Global    :      43
            Local     :      60
        Regenerable   :      19
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::getPointer(SAMRAI::pdat::OuterfaceData<double> *, int, int, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::OuterfaceData<double>::getPointer(SAMRAI::pdat::OuterfaceData<double> *, int, int, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(103,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::getArrayData(const SAMRAI::pdat::OuterfaceData<double> *, int, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::OuterfaceData<double>::getArrayData(const SAMRAI::pdat::OuterfaceData<double> *, int, int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(263,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::copy(SAMRAI::pdat::OuterfaceData<double> *, const SAMRAI::hier::PatchData &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::copy(SAMRAI::pdat::OuterfaceData<double> *, const SAMRAI::hier::PatchData &)) [1318] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(317,1)
  -> INLINE: (325,30) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (325,30) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (325,39) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (325,39) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (326,50) SAMRAI::pdat::FaceData<double>::getArrayData(const SAMRAI::pdat::FaceData<double> *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(186,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (328,41) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (329,22) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(312,16) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(327,10) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(64,35) SAMRAI::pdat::ArrayData<double>::getDim(const SAMRAI::pdat::ArrayData<double> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(66,30) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(67,36) SAMRAI::pdat::ArrayData<double>::getPointer(const SAMRAI::pdat::ArrayData<double> *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(70,33) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(71,33) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(78,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(79,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(80,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(84,34) SAMRAI::pdat::ArrayData<double>::getOffset(const SAMRAI::pdat::ArrayData<double> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(85,34) SAMRAI::pdat::ArrayData<double>::getOffset(const SAMRAI::pdat::ArrayData<double> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(97,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(99,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(99,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,52) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(319,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
          -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(199,15) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (329,51) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(327,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(77,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(119,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between dst_b[nd] (188:10) and dst_b[m] (230:16)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(196,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between dst[dst_counter+i0] (31:4) and dst[dst_counter+i0] (31:4)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between dst[dst_counter+i0] (31:4) and src[src_counter+i0] (31:4)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,53) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,67) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(330,22)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(325,39)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(318,45) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(317,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OuterfaceDataIdE4copyERKNS_4hier9PatchDataE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:317

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     519
            Global    :     143
            Local     :     376
        Regenerable   :      31
        Spilled       :      28
        
    Routine stack
        Variables     :     320 bytes*
            Reads     :     103 [2.82e+03 ~ 10.1%]
            Writes    :      38 [2.13e+03 ~ 7.6%]
        Spills        :     224 bytes*
            Reads     :      63 [4.09e+02 ~ 1.5%]
            Writes    :      45 [2.50e+02 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::copy2(const SAMRAI::pdat::OuterfaceData<double> *, SAMRAI::hier::PatchData &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::copy2(const SAMRAI::pdat::OuterfaceData<double> *, SAMRAI::hier::PatchData &) const) [1319] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(338,1)
  -> INLINE: (345,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (345,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (345,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (345,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (346,14) SAMRAI::pdat::FaceData<double>::getArrayData(SAMRAI::pdat::FaceData<double> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(175,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (346,30) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(312,16) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(327,10) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)
  -> INLINE: (346,35) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (346,64) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (346,66) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
  -> INLINE: (347,14) SAMRAI::pdat::FaceData<double>::getArrayData(SAMRAI::pdat::FaceData<double> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(175,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (347,30) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(312,16) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(327,10) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)
  -> INLINE: (347,35) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (347,64) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (347,66) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(347,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(347,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(347,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(347,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(347,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(347,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(347,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(347,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(347,30)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(347,30)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(347,30)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(347,30)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(348,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(348,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(348,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(348,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(348,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(348,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(348,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(348,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(348,30)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(348,30)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(348,30)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(348,30)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(345,33)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(318,45) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(338,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat13OuterfaceDataIdE5copy2ERNS_4hier9PatchDataE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:338

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     279
            Global    :      94
            Local     :     185
        Regenerable   :      47
        Spilled       :       7
        
    Routine stack
        Variables     :     394 bytes*
            Reads     :      12 [5.28e+01 ~ 6.7%]
            Writes    :      10 [6.54e+00 ~ 0.8%]
        Spills        :      56 bytes*
            Reads     :      45 [2.04e+01 ~ 2.6%]
            Writes    :       7 [6.30e+00 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::copy(SAMRAI::pdat::OuterfaceData<double> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::copy(SAMRAI::pdat::OuterfaceData<double> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)) [1320] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(365,1)
  -> INDIRECT- (VIRTUAL): (380,40)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.163958_V$1298.0.1372->__vptr_V$129c_2.72 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (382,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (382,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (382,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (382,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INDIRECT- (VIRTUAL): (384,51)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.163958_V$1298.0.1372->__vptr_V$129c_2.72 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (385,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (385,24) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (385,42) SAMRAI::pdat::OuterfaceData<double>::getArrayData(const SAMRAI::pdat::OuterfaceData<double> *, int, int) const
    -> INLINE: (267,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (386,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (386,24) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (386,42) SAMRAI::pdat::OuterfaceData<double>::getArrayData(const SAMRAI::pdat::OuterfaceData<double> *, int, int) const
    -> INLINE: (267,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (387,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (387,24) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (387,42) SAMRAI::pdat::OuterfaceData<double>::getArrayData(const SAMRAI::pdat::OuterfaceData<double> *, int, int) const
    -> INLINE: (267,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (388,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (388,24) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (388,42) SAMRAI::pdat::OuterfaceData<double>::getArrayData(const SAMRAI::pdat::OuterfaceData<double> *, int, int) const
    -> INLINE: (267,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (391,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (391,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (391,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (391,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INDIRECT- (VIRTUAL): (393,51)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.163958_V$1298.0.1372->__vptr_V$129c_2.72 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (394,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (394,24) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (394,41) SAMRAI::pdat::FaceData<double>::getArrayData(const SAMRAI::pdat::FaceData<double> *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(186,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (395,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (395,24) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (395,41) SAMRAI::pdat::FaceData<double>::getArrayData(const SAMRAI::pdat::FaceData<double> *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(186,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (398,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (398,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (398,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (398,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (398,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (398,7) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (398,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (398,7) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (398,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (398,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (398,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (398,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (398,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (398,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(382,36)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(386,24)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(387,24)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(388,24)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(389,24)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(391,36)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(395,24)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(396,24)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(365,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OuterfaceDataIdE4copyERKNS_4hier9PatchDataERKNS3_10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:365

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     651
            Global    :     137
            Local     :     514
        Regenerable   :     207
        Spilled       :      12
        
    Routine stack
        Variables     :     709 bytes*
            Reads     :     126 [7.52e+02 ~ 22.3%]
            Writes    :      69 [1.01e+02 ~ 3.0%]
        Spills        :      48 bytes*
            Reads     :      25 [5.79e+01 ~ 1.7%]
            Writes    :      10 [8.81e+00 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)) [1321] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(354,1)
  -> INLINE: (356,18) SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(762,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(763,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,72) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(768,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,60) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (356,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (356,50) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (358,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &)
    -> INLINE: (294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: (298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: (312,16) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
    -> INLINE: (320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> (327,10) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)
  -> INLINE: (363,25) SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,22) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,30) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,44) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,52) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (365,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> (373,10) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(761,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(357,18)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(763,38) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(357,18)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(769,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(357,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(364,25)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(364,25)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(366,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(354,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdE4copyERKS2_RKNS_4hier3BoxERKNS5_9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:354

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     320
            Global    :      95
            Local     :     225
        Regenerable   :      58
        Spilled       :       8
        
    Routine stack
        Variables     :     466 bytes*
            Reads     :      30 [7.71e+00 ~ 5.4%]
            Writes    :      28 [1.57e+00 ~ 1.1%]
        Spills        :      24 bytes*
            Reads     :       6 [1.04e+00 ~ 0.7%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::copy2(const SAMRAI::pdat::OuterfaceData<double> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::copy2(const SAMRAI::pdat::OuterfaceData<double> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const) [1322] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(409,1)
  -> INDIRECT- (VIRTUAL): (418,49)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.164006_V$12b2.0.1373->__vptr_V$129c_2.72 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (421,55) SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const
  -> INLINE: (422,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (422,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (422,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (422,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (425,30) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (425,30) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (425,39) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (425,39) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (426,24) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (426,40) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (426,51) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (426,60) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (431,43) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (431,52) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
  -> INLINE: (432,50) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (432,59) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
  -> INDIRECT- (VIRTUAL): (434,82)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.164006_V$12b2.0.1373->__vptr_V$129c_2.72 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (435,14) SAMRAI::pdat::FaceData<double>::getArrayData(SAMRAI::pdat::FaceData<double> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(175,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (435,30) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(451,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)
      -> INLINE: (392,23) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
      -> INLINE: (392,90) SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const
      -> INLINE: (392,102) SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(762,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(763,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,72) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(768,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,60) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (392,105) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (392,134) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (392,162) SAMRAI::hier::Transformation::getBeginBlock(const SAMRAI::hier::Transformation *) const
      -> INLINE: (392,178) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: (392,196) SAMRAI::hier::Transformation::getEndBlock(const SAMRAI::hier::Transformation *) const
      -> INLINE: (394,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &)
        -> INLINE: (294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
        -> INLINE: (298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: (312,16) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
        -> INLINE: (320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> (327,10) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)
      -> INLINE: (403,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> (411,10) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)
      -> INLINE: (415,55) SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (435,35) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (436,14) SAMRAI::pdat::FaceData<double>::getArrayData(SAMRAI::pdat::FaceData<double> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/FaceData.cpp:(175,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (436,30) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(451,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (436,35) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(425,39)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(298,36) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(761,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(763,38) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(769,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(436,30)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(452,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(437,30)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(422,33)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(432,59) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(409,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat13OuterfaceDataIdE5copy2ERNS_4hier9PatchDataERKNS3_10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:409

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     438
            Global    :     107
            Local     :     331
        Regenerable   :      92
        Spilled       :      20
        
    Routine stack
        Variables     :     626 bytes*
            Reads     :      51 [6.65e+02 ~ 16.4%]
            Writes    :      18 [7.80e+01 ~ 1.9%]
        Spills        :     112 bytes*
            Reads     :      54 [1.39e+02 ~ 3.4%]
            Writes    :      18 [3.66e+01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)) [1323] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(59,1)
  -> INLINE: (64,35) SAMRAI::pdat::ArrayData<double>::getDim(const SAMRAI::pdat::ArrayData<double> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (66,30) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (67,36) SAMRAI::pdat::ArrayData<double>::getPointer(const SAMRAI::pdat::ArrayData<double> *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (70,33) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
  -> INLINE: (71,33) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
  -> INLINE: (77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (78,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (79,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (80,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (84,34) SAMRAI::pdat::ArrayData<double>::getOffset(const SAMRAI::pdat::ArrayData<double> *) const
  -> INLINE: (85,34) SAMRAI::pdat::ArrayData<double>::getOffset(const SAMRAI::pdat::ArrayData<double> *) const
  -> INLINE: (97,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (99,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (99,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (100,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (100,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (100,52) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(319,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
      -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (199,15) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
  -> INLINE: (208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(77,47)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(79,24)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(80,26)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(81,26)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(98,53)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(98,53)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(100,31)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(100,31)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,52)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,31)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,31)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(119,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between dst_b[nd] (188:10) and dst_b[m] (230:16)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(196,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between vdst (31:4) and vdst (31:4)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between vdst (31:4) and vsrc (31:4)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,53)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,67) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(59,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat27ArrayDataOperationUtilitiesIdNS0_13CopyOperationIdEEE25doArrayDataOperationOnBoxERNS0_9ArrayDataIdEERKS6_RKNS_4hier3BoxERKNSA_9IntVectorEjjjRKS3_] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:59

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     297
            Global    :      96
            Local     :     201
        Regenerable   :       8
        Spilled       :      20
        
    Routine stack
        Variables     :     120 bytes*
            Reads     :      50 [3.48e+02 ~ 9.1%]
            Writes    :      29 [2.98e+02 ~ 7.8%]
        Spills        :     112 bytes*
            Reads     :      20 [4.38e+01 ~ 1.1%]
            Writes    :      20 [2.80e+01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)) [1324] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(391,1)
  -> INLINE: (392,23) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INLINE: (392,90) SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const
  -> INLINE: (392,102) SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(762,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(763,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,72) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(768,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,60) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (392,105) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (392,134) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (392,162) SAMRAI::hier::Transformation::getBeginBlock(const SAMRAI::hier::Transformation *) const
  -> INLINE: (392,178) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
  -> INLINE: (392,196) SAMRAI::hier::Transformation::getEndBlock(const SAMRAI::hier::Transformation *) const
  -> INLINE: (394,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &)
    -> INLINE: (294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: (298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: (312,16) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
    -> INLINE: (320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> (327,10) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)
  -> INLINE: (403,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> (411,10) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)
  -> INLINE: (415,55) SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(761,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(393,102)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(763,38) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(393,102)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(769,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(393,102)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(404,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(391,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdE4copyERKS2_RKNS_4hier3BoxERKNS5_14TransformationE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:391

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     229
            Global    :      72
            Local     :     157
        Regenerable   :      47
        Spilled       :       7
        
    Routine stack
        Variables     :     418 bytes*
            Reads     :      11 [5.40e+00 ~ 5.9%]
            Writes    :      10 [6.70e-01 ~ 0.7%]
        Spills        :      24 bytes*
            Reads     :       6 [2.30e-01 ~ 0.3%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::canEstimateStreamSizeFromBox(const SAMRAI::pdat::OuterfaceData<double> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::canEstimateStreamSizeFromBox(const SAMRAI::pdat::OuterfaceData<double> *) const) [1325] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(512,1)
  -> INLINE: (513,11) SAMRAI::pdat::ArrayData<double>::canEstimateStreamSizeFromBox()
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,22) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,55) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,88) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,123) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,157) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,189) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(512,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat13OuterfaceDataIdE28canEstimateStreamSizeFromBoxEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:512

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rcx rsi rdi]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :      17
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::getDataStreamSize(const SAMRAI::pdat::OuterfaceData<double> *, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::getDataStreamSize(const SAMRAI::pdat::OuterfaceData<double> *, const SAMRAI::hier::BoxOverlap &) const) [1326] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(520,1)
  -> INDIRECT- (VIRTUAL): (525,36)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.164446_V$12be.0.1375->__vptr_V$129c_2.72 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (528,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (528,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (528,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (528,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INDIRECT- (VIRTUAL): (529,81)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.164446_V$12be.0.1375->__vptr_V$129c_2.72 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (532,30) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (532,30) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (532,39) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (532,39) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (533,24) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (533,36) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (533,47) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (533,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (536,27) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (536,29) SAMRAI::pdat::ArrayData<double>::getDataStreamSize(const SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(770,21) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(771,14) SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(772,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(773,14) SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(774,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(775,14) SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(776,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(777,14) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(778,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(779,14) SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(780,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(781,14) SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (537,27) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (537,29) SAMRAI::pdat::ArrayData<double>::getDataStreamSize(const SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(770,21) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(771,14) SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(772,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(773,14) SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(774,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(775,14) SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(776,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(777,14) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(778,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(779,14) SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(780,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(781,14) SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(528,33)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(532,39)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(520,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat13OuterfaceDataIdE17getDataStreamSizeERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:520

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     189
            Global    :      54
            Local     :     135
        Regenerable   :      24
        Spilled       :      10
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :       9 [2.80e+00 ~ 0.5%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       8 [2.94e+01 ~ 5.3%]
            Writes    :       4 [1.27e+01 ~ 2.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word *, int)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/ext/atomicity.h(79,3):remark #34051: REGISTER ALLOCATION : [_ZN17_INTERNAL0ff0fcfe9__gnu_cxx27__exchange_and_add_dispatchEPii] /usr/include/c++/4.8.5/ext/atomicity.h:79

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      16
            Global    :       8
            Local     :       8
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf(std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/iosfwd(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEED1Ev] /usr/include/c++/4.8.5/iosfwd:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::packStream(const SAMRAI::pdat::OuterfaceData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::packStream(const SAMRAI::pdat::OuterfaceData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &) const) [1333] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(556,1)
  -> INDIRECT- (VIRTUAL): (561,36)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.165126_V$12c8.0.1376->__vptr_V$129c_2.72 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (562,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (562,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (562,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (562,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INDIRECT- (VIRTUAL): (563,79)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.165126_V$12c8.0.1376->__vptr_V$129c_2.72 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (565,18) SAMRAI::hier::BoxContainer::empty(const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(682,21) std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::empty(const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>> *) const
  -> INLINE: (568,33) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (568,33) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (568,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (568,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (569,27) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (569,39) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (569,50) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (569,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (575,46) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (575,55) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
  -> INLINE: (576,52) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (576,59) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,29) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,45) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (576,61) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
  -> INLINE: (578,60) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (579,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (579,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (579,26) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (579,26) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (579,33) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
  -> INLINE: (580,31) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (583,58) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (583,60) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
  -> INLINE: (584,31) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (586,31) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (586,33) SAMRAI::pdat::ArrayData<double>::packStream(const SAMRAI::pdat::ArrayData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(852,43) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(853,26) SAMRAI::tbox::MessageStream::getWriteBuffer<double>(SAMRAI::tbox::MessageStream *, size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(217,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(219,25) std::vector<char, std::allocator<char>>::resize(std::vector<char, std::allocator<char>> *, std::vector<char, std::allocator<char>>::size_type)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(219,32) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(220,41) std::vector<char, std::allocator<char>>::size(const std::vector<char, std::allocator<char>> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(223,55) std::vector<char, std::allocator<char>>::operator[](std::vector<char, std::allocator<char>> *, std::vector<char, std::allocator<char>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(223,56) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(857,4) SAMRAI::pdat::ArrayData<double>::packBuffer(const SAMRAI::pdat::ArrayData<double> *, double *, const SAMRAI::hier::Box &) const
      -> (1294,4) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<double> &, const double *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<double> &)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(568,42)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(579,17)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(582,13)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(585,31)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(587,33)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(587,33)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(587,33)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(562,33)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(693,30) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(703,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(703,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(556,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat13OuterfaceDataIdE10packStreamERNS_4tbox13MessageStreamERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:556

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     392
            Global    :      69
            Local     :     323
        Regenerable   :      66
        Spilled       :      19
        
    Routine stack
        Variables     :     409 bytes*
            Reads     :      61 [3.92e+02 ~ 14.5%]
            Writes    :      13 [4.32e+01 ~ 1.6%]
        Spills        :     104 bytes*
            Reads     :      40 [1.12e+02 ~ 4.2%]
            Writes    :      19 [2.65e+01 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<double> &, const double *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<double> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<double> &, const double *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<double> &)) [1334] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(267,1)
  -> INLINE: (272,41) SAMRAI::pdat::ArrayData<double>::getDim(const SAMRAI::pdat::ArrayData<double> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (275,53) SAMRAI::pdat::ArrayData<double>::getPointer(const SAMRAI::pdat::ArrayData<double> *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (278,44) SAMRAI::pdat::ArrayData<double>::getPointer(const SAMRAI::pdat::ArrayData<double> *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (280,49) SAMRAI::pdat::ArrayData<double>::getDepth(const SAMRAI::pdat::ArrayData<double> *) const
  -> INLINE: (283,43) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
  -> INLINE: (288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (289,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (290,30) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (294,40) SAMRAI::pdat::ArrayData<double>::getOffset(const SAMRAI::pdat::ArrayData<double> *) const
  -> INLINE: (307,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (309,35) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (309,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (397,15) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
  -> INLINE: (406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(288,47)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between opbox->d_empty_flag (606:16) and opbox->d_empty_flag (599:11)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(290,24)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(291,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(308,53)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(308,53)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(310,35)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(310,35)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(319,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between dat_counter (379:28) and dat_counter (422:13)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(394,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *dst_counter (397:24) and buf_counter (430:10)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[*dst_counter+i0] (31:4) and src_ptr[*src_counter+i0] (31:4)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(406,34)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(412,16) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

Fusion of IFs performed in _ZN6SAMRAI4pdat27ArrayDataOperationUtilitiesIdNS0_13CopyOperationIdEEE31doArrayDataBufferOperationOnBoxERKNS0_9ArrayDataIdEEPKdRKNS_4hier3BoxEbRKS3_ at line 382

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(267,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat27ArrayDataOperationUtilitiesIdNS0_13CopyOperationIdEEE31doArrayDataBufferOperationOnBoxERKNS0_9ArrayDataIdEEPKdRKNS_4hier3BoxEbRKS3_] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:267

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     193
            Global    :      73
            Local     :     120
        Regenerable   :       6
        Spilled       :      20
        
    Routine stack
        Variables     :      64 bytes*
            Reads     :      20 [2.04e+02 ~ 6.1%]
            Writes    :      21 [2.15e+02 ~ 6.4%]
        Spills        :     112 bytes*
            Reads     :      28 [1.50e+02 ~ 4.5%]
            Writes    :      32 [4.31e+01 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::unpackStream(SAMRAI::pdat::OuterfaceData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::unpackStream(SAMRAI::pdat::OuterfaceData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)) [1336] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(602,1)
  -> INDIRECT- (VIRTUAL): (607,36)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.165351_V$12d9.0.1377->__vptr_V$129c_2.72 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (608,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (608,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (608,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (608,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INDIRECT- (VIRTUAL): (609,79)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.165351_V$12d9.0.1377->__vptr_V$129c_2.72 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (612,30) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (612,30) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (612,39) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (612,39) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (613,24) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (613,36) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (613,47) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (613,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (617,57) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (618,14) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (618,14) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (618,23) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (618,23) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (618,30) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
  -> INLINE: (620,42) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (620,60) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (620,62) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
  -> INLINE: (621,28) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (622,28) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (622,30) SAMRAI::pdat::ArrayData<double>::unpackStream(SAMRAI::pdat::ArrayData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(916,43) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(917,32) SAMRAI::tbox::MessageStream::getReadBuffer<double>(SAMRAI::tbox::MessageStream *, size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(195,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(198,61) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(919,4) SAMRAI::pdat::ArrayData<double>::unpackBuffer(SAMRAI::pdat::ArrayData<double> *, const double *, const SAMRAI::hier::Box &)
      -> INLINE: (1313,4) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<double> &, const double *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<double> &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(272,41) SAMRAI::pdat::ArrayData<double>::getDim(const SAMRAI::pdat::ArrayData<double> *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(275,53) SAMRAI::pdat::ArrayData<double>::getPointer(const SAMRAI::pdat::ArrayData<double> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(278,44) SAMRAI::pdat::ArrayData<double>::getPointer(const SAMRAI::pdat::ArrayData<double> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(280,49) SAMRAI::pdat::ArrayData<double>::getDepth(const SAMRAI::pdat::ArrayData<double> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(283,43) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(289,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(290,30) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(294,40) SAMRAI::pdat::ArrayData<double>::getOffset(const SAMRAI::pdat::ArrayData<double> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(307,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,35) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(397,15) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(612,39)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(618,14)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(619,21)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(622,28)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(288,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between intersect.intersect.intersect.intersect (604:41) and this->d_empty_flag (610:10)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
         remark #25439: unrolled with remainder by 2  
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(319,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between dat_b[nd] (387:10) and dat_b[m] (425:16)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(394,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed OUTPUT dependence between dst_ptr[dat_counter+i0] (31:4) and dst_ptr[dat_counter+i0] (31:4)

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
               remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[dat_counter+i0] (31:4) and buffer[buf_counter+i0] (31:4)
               remark #25439: unrolled with remainder by 2  
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
            <Remainder>
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(406,34) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
               remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(412,16) ]
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
               remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
               remark #25439: unrolled with remainder by 8  
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
               remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
               remark #25439: unrolled with remainder by 2  
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
            <Remainder>
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
            <Remainder>
               remark #25436: completely unrolled by 7  
            LOOP END
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(623,30)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(608,33)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(693,30) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(602,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OuterfaceDataIdE12unpackStreamERNS_4tbox13MessageStreamERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:602

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     547
            Global    :     108
            Local     :     439
        Regenerable   :      25
        Spilled       :      29
        
    Routine stack
        Variables     :     224 bytes*
            Reads     :     123 [7.88e+03 ~ 8.3%]
            Writes    :      25 [4.95e+03 ~ 5.2%]
        Spills        :     184 bytes*
            Reads     :      44 [1.90e+03 ~ 2.0%]
            Writes    :      39 [7.67e+02 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::getFromRestart(SAMRAI::pdat::OuterfaceData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::getFromRestart(SAMRAI::pdat::OuterfaceData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &)) [1337] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(825,1)
  -> DELETED: (830,8) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (830,8) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (830,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (830,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (830,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (830,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U155_V$12eb.0.1379->__vptr_V$100b + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (830,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (832,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (832,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (832,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (832,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (832,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (832,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (832,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (832,7) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (832,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (832,7) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (832,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (832,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (832,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (832,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (837,4) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (837,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (837,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (837,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (837,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (837,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U156_V$12ec.0.1379->__vptr_V$100b + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (837,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (839,36) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (839,36) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (840,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (840,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (840,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (840,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (841,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,41) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,41) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (841,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (842,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (842,10) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (843,22) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (843,22) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (843,34) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (843,48)  EXPR_CONV.SI64.P64(*((SI64*) (__$U15d_V$12fe.0.1379->__vptr_V$100b + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (844,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> (844,21) SAMRAI::pdat::ArrayData<double>::getFromRestart(SAMRAI::pdat::ArrayData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &)
  -> INLINE: (846,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (846,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (846,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (846,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (846,29) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (846,29) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (846,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (846,63) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (846,63) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (847,22) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (847,22) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (847,34) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (847,48)  EXPR_CONV.SI64.P64(*((SI64*) (__$U15f_V$1300.0.1379->__vptr_V$100b + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (848,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> (848,21) SAMRAI::pdat::ArrayData<double>::getFromRestart(SAMRAI::pdat::ArrayData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &)
  -> INLINE: (849,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (849,4) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(840,33)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(825,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OuterfaceDataIdE14getFromRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:825

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     675
            Global    :     173
            Local     :     502
        Regenerable   :     241
        Spilled       :       9
        
    Routine stack
        Variables     :     542 bytes*
            Reads     :      58 [1.16e+02 ~ 10.8%]
            Writes    :      84 [1.40e+02 ~ 13.1%]
        Spills        :      32 bytes*
            Reads     :       4 [1.03e+00 ~ 0.1%]
            Writes    :       4 [1.03e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::getFromRestart(SAMRAI::pdat::ArrayData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<double>::getFromRestart(SAMRAI::pdat::ArrayData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &)) [1338] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1197,1)
  -> DELETED: (1200,8) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1200,8) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1200,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1200,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1200,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (1200,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1b3_V$142e.0.1419->__vptr_V$100b + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (1200,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1202,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1202,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1202,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1202,7) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1202,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1206,4) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1206,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1206,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1206,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1206,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (1206,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1b4_V$142f.0.1419->__vptr_V$100b + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (1206,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1207,4) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1207,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1207,25) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1207,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1207,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (1207,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1b5_V$1430.0.1419->__vptr_V$100b + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (1207,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1208,10) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1208,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1208,10) SAMRAI::hier::Box::operator=(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1172,14) SAMRAI::hier::Box::Box_from_DatabaseBox(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)
  -> INLINE: (1208,22) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1208,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1208,39) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (1208,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1b7_V$1436.0.1419->__vptr_V$100b + EXPR_CONV.SI32.I64(25(SI32)) * 8(I64))))
  -> INLINE: (1208,39) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1215,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (1215,16) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1215,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1215,16) SAMRAI::tbox::Database::getVector(SAMRAI::tbox::Database *, const std::string &, std::vector<double, std::allocator<double>> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,13) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,13) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,31)  EXPR_CONV.SI64.P64(*((SI64*) (this_22990_V$1007.0.1226.17459->__vptr_V$100b + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (1215,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1215,26) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1215,26) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1197,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdE14getFromRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:1197

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     525
            Global    :     130
            Local     :     395
        Regenerable   :     194
        Spilled       :       8
        
    Routine stack
        Variables     :     517 bytes*
            Reads     :      46 [1.81e+01 ~ 7.5%]
            Writes    :      68 [2.91e+01 ~ 12.2%]
        Spills        :      16 bytes*
            Reads     :       2 [1.33e-01 ~ 0.1%]
            Writes    :       2 [1.33e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::putToRestart(const SAMRAI::pdat::OuterfaceData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::putToRestart(const SAMRAI::pdat::OuterfaceData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [1339] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(865,1)
  -> INLINE: (871,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (871,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (871,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (871,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (872,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (872,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (872,7)  EXPR_CONV.SI64.P64(*((SI64*) (__$U162_V$130b.0.1380->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> INLINE: (874,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (874,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (874,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (874,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (874,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (874,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (874,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U163_V$130c.0.1380->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> (876,36) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (876,36) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (877,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (877,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (877,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (877,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (878,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (878,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (878,41) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (878,41) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (878,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (879,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (879,10) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (880,22) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (880,22) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (880,34) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (880,48)  EXPR_CONV.SI64.P64(*((SI64*) (__$U167_V$1312.0.1380->__vptr_V$100b + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (881,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (881,21) SAMRAI::pdat::ArrayData<double>::putToRestart(const SAMRAI::pdat::ArrayData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1bd_V$1447.0.1420.34522->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1bf_V$1449.0.1420.34522->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1c0_V$144a.0.1420.34522->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1c2_V$144c.0.1420.34522->__vptr_V$100b + EXPR_CONV.SI32.I64(22(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)
      -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1487,28)  EXPR_CONV.SI64.P64(*((SI64*) (this_22992_V$100c.0.1227.34541->__vptr_V$100b + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (883,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (883,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (883,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (883,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (883,29) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (883,29) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (883,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (883,63) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (883,63) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (884,22) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (884,22) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (884,34) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (884,48)  EXPR_CONV.SI64.P64(*((SI64*) (__$U169_V$1314.0.1380->__vptr_V$100b + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (885,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (885,21) SAMRAI::pdat::ArrayData<double>::putToRestart(const SAMRAI::pdat::ArrayData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1bd_V$1447.0.1420.34625->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1bf_V$1449.0.1420.34625->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1c0_V$144a.0.1420.34625->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1c2_V$144c.0.1420.34625->__vptr_V$100b + EXPR_CONV.SI32.I64(22(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)
      -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1487,28)  EXPR_CONV.SI64.P64(*((SI64*) (this_22992_V$100c.0.1227.34644->__vptr_V$100b + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (886,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (886,4) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(877,33)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(865,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat13OuterfaceDataIdE12putToRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:865

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     788
            Global    :     204
            Local     :     584
        Regenerable   :     265
        Spilled       :       6
        
    Routine stack
        Variables     :     231 bytes*
            Reads     :      64 [2.19e+02 ~ 11.5%]
            Writes    :      59 [1.34e+02 ~ 7.0%]
        Spills        :       8 bytes*
            Reads     :       4 [1.30e+01 ~ 0.7%]
            Writes    :       1 [1.00e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::getSizeOfData(const SAMRAI::hier::Box &, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::OutersideData<double>::getSizeOfData(const SAMRAI::hier::Box &, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(589,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::~OutersideData(SAMRAI::pdat::OutersideData<double> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideData<double>::~OutersideData(SAMRAI::pdat::OutersideData<double> *)) [1342] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(86,1)
  -> INLINE: (87,1) std::shared_ptr<SAMRAI::pdat::ArrayData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(87,1)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U17b_V->_M_refcount->_M_pi (545:2) and *__mem (68:6)
   remark #25436: completely unrolled by 6  
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(86,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OutersideDataIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:86

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rdi r12-r14]
        
    Routine temporaries
        Total         :     102
            Global    :      43
            Local     :      59
        Regenerable   :      19
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::~OutersideData(SAMRAI::pdat::OutersideData<double> *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideData<double>::~OutersideData(SAMRAI::pdat::OutersideData<double> *const)) [1343] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(85,22)
  -> INLINE: (85,22) SAMRAI::pdat::OutersideData<double>::~OutersideData(SAMRAI::pdat::OutersideData<double> *)
    -> INLINE: (87,1) std::shared_ptr<SAMRAI::pdat::ArrayData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<double>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(87,1) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(86,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U17b_V->_M_refcount->_M_pi (545:2) and *__mem (68:6)
   remark #25436: completely unrolled by 6  
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(85,22):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OutersideDataIdED0Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:85

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rdi r12-r14]
        
    Routine temporaries
        Total         :     103
            Global    :      43
            Local     :      60
        Regenerable   :      19
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::getPointer(SAMRAI::pdat::OutersideData<double> *, int, int, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::OutersideData<double>::getPointer(SAMRAI::pdat::OutersideData<double> *, int, int, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(102,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::getArrayData(const SAMRAI::pdat::OutersideData<double> *, int, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::OutersideData<double>::getArrayData(const SAMRAI::pdat::OutersideData<double> *, int, int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(254,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::copy(SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::PatchData &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideData<double>::copy(SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::PatchData &)) [1346] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(308,1)
  -> INLINE: (315,30) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (315,30) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (315,39) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (315,39) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (316,50) SAMRAI::pdat::SideData<double>::getArrayData(const SAMRAI::pdat::SideData<double> *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(255,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (318,41) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (319,22) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(312,16) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(327,10) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(64,35) SAMRAI::pdat::ArrayData<double>::getDim(const SAMRAI::pdat::ArrayData<double> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(66,30) SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(67,36) SAMRAI::pdat::ArrayData<double>::getPointer(const SAMRAI::pdat::ArrayData<double> *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(70,33) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(71,33) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(78,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(79,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(80,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(84,34) SAMRAI::pdat::ArrayData<double>::getOffset(const SAMRAI::pdat::ArrayData<double> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(85,34) SAMRAI::pdat::ArrayData<double>::getOffset(const SAMRAI::pdat::ArrayData<double> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(97,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(99,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(99,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,52) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(319,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
          -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(199,15) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (319,51) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(317,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(77,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(119,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between dst_b[nd] (188:10) and dst_b[m] (230:16)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(196,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between dst[dst_counter+i0] (31:4) and dst[dst_counter+i0] (31:4)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between dst[dst_counter+i0] (31:4) and src[src_counter+i0] (31:4)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,53) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,67) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(320,22)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(315,39)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(318,45) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(308,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OutersideDataIdE4copyERKNS_4hier9PatchDataE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:308

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     519
            Global    :     143
            Local     :     376
        Regenerable   :      31
        Spilled       :      28
        
    Routine stack
        Variables     :     320 bytes*
            Reads     :     103 [2.82e+03 ~ 10.1%]
            Writes    :      38 [2.13e+03 ~ 7.6%]
        Spills        :     224 bytes*
            Reads     :      63 [4.09e+02 ~ 1.5%]
            Writes    :      45 [2.50e+02 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::copy2(const SAMRAI::pdat::OutersideData<double> *, SAMRAI::hier::PatchData &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideData<double>::copy2(const SAMRAI::pdat::OutersideData<double> *, SAMRAI::hier::PatchData &) const) [1347] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(329,1)
  -> INLINE: (336,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (336,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (336,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (336,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (337,14) SAMRAI::pdat::SideData<double>::getArrayData(SAMRAI::pdat::SideData<double> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(244,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (337,30) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(312,16) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(327,10) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)
  -> INLINE: (337,35) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (337,64) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (337,66) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
  -> INLINE: (338,14) SAMRAI::pdat::SideData<double>::getArrayData(SAMRAI::pdat::SideData<double> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(244,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (338,30) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(312,16) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(327,10) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)
  -> INLINE: (338,35) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (338,64) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (338,66) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(338,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(338,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(338,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(338,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(338,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(338,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(338,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(338,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(338,30)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(338,30)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(338,30)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(338,30)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(339,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(339,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(339,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(339,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(339,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(339,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(339,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(339,30)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(339,30)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(339,30)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(339,30)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(339,30)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(336,33)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(318,45) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(329,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat13OutersideDataIdE5copy2ERNS_4hier9PatchDataE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:329

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     279
            Global    :      94
            Local     :     185
        Regenerable   :      47
        Spilled       :       7
        
    Routine stack
        Variables     :     394 bytes*
            Reads     :      12 [5.28e+01 ~ 6.7%]
            Writes    :      10 [6.54e+00 ~ 0.8%]
        Spills        :      56 bytes*
            Reads     :      45 [2.04e+01 ~ 2.6%]
            Writes    :       7 [6.30e+00 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::copy(SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideData<double>::copy(SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)) [1348] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(356,1)
  -> INDIRECT- (VIRTUAL): (372,40)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.173258_V$1354.0.1390->__vptr_V$129c_2.73 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (374,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (374,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (374,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (374,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INDIRECT- (VIRTUAL): (376,51)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.173258_V$1354.0.1390->__vptr_V$129c_2.73 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (377,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (377,24) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (377,42) SAMRAI::pdat::OutersideData<double>::getArrayData(const SAMRAI::pdat::OutersideData<double> *, int, int) const
    -> INLINE: (258,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (378,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (378,24) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (378,42) SAMRAI::pdat::OutersideData<double>::getArrayData(const SAMRAI::pdat::OutersideData<double> *, int, int) const
    -> INLINE: (258,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (379,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (379,24) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (379,42) SAMRAI::pdat::OutersideData<double>::getArrayData(const SAMRAI::pdat::OutersideData<double> *, int, int) const
    -> INLINE: (258,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (380,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (380,24) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (380,42) SAMRAI::pdat::OutersideData<double>::getArrayData(const SAMRAI::pdat::OutersideData<double> *, int, int) const
    -> INLINE: (258,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (383,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (383,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (383,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (383,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INDIRECT- (VIRTUAL): (385,51)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.173258_V$1354.0.1390->__vptr_V$129c_2.73 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (386,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (386,24) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (386,41) SAMRAI::pdat::SideData<double>::getArrayData(const SAMRAI::pdat::SideData<double> *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(255,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (387,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (387,24) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (387,41) SAMRAI::pdat::SideData<double>::getArrayData(const SAMRAI::pdat::SideData<double> *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(255,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (390,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (390,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (390,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (390,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (390,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (390,7) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (390,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (390,7) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (390,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (390,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (390,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (390,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (390,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (390,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(374,36)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(378,24)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(379,24)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(380,24)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(381,24)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(383,36)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(387,24)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(388,24)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(356,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OutersideDataIdE4copyERKNS_4hier9PatchDataERKNS3_10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:356

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     651
            Global    :     137
            Local     :     514
        Regenerable   :     207
        Spilled       :      12
        
    Routine stack
        Variables     :     709 bytes*
            Reads     :     126 [7.52e+02 ~ 22.3%]
            Writes    :      69 [1.01e+02 ~ 3.0%]
        Spills        :      48 bytes*
            Reads     :      25 [5.79e+01 ~ 1.7%]
            Writes    :      10 [8.81e+00 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::copy2(const SAMRAI::pdat::OutersideData<double> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideData<double>::copy2(const SAMRAI::pdat::OutersideData<double> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const) [1349] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(400,1)
  -> INDIRECT- (VIRTUAL): (409,40)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.173285_V$136b.0.1391->__vptr_V$129c_2.73 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (410,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (410,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (410,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (410,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INDIRECT- (VIRTUAL): (411,82)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.173285_V$136b.0.1391->__vptr_V$129c_2.73 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (412,14) SAMRAI::pdat::SideData<double>::getArrayData(SAMRAI::pdat::SideData<double> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(244,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (412,30) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
      -> INLINE: (356,18) SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(762,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(763,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,72) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(768,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,60) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (356,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (356,50) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (358,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &)
        -> INLINE: (294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
        -> INLINE: (298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: (312,16) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
        -> INLINE: (320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> (327,10) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)
      -> INLINE: (363,25) SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,22) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,30) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
            -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
              -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,44) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,52) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
            -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
              -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: (365,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> (373,10) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<double> &, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<double> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (412,35) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (413,14) SAMRAI::pdat::SideData<double>::getArrayData(SAMRAI::pdat::SideData<double> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(244,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (413,30) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (413,35) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(298,36) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(761,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(763,38) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(769,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(413,30)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(414,30)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(410,33)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(704,36) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(400,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat13OutersideDataIdE5copy2ERNS_4hier9PatchDataERKNS3_10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:400

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     430
            Global    :     118
            Local     :     312
        Regenerable   :      85
        Spilled       :      21
        
    Routine stack
        Variables     :     562 bytes*
            Reads     :      61 [6.26e+02 ~ 11.9%]
            Writes    :      34 [9.79e+01 ~ 1.9%]
        Spills        :     120 bytes*
            Reads     :      48 [1.85e+02 ~ 3.5%]
            Writes    :      17 [7.12e+01 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::canEstimateStreamSizeFromBox(const SAMRAI::pdat::OutersideData<double> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideData<double>::canEstimateStreamSizeFromBox(const SAMRAI::pdat::OutersideData<double> *) const) [1350] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(489,1)
  -> INLINE: (490,11) SAMRAI::pdat::ArrayData<double>::canEstimateStreamSizeFromBox()
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,22) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,55) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,88) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,123) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,157) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,189) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(489,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat13OutersideDataIdE28canEstimateStreamSizeFromBoxEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:489

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rcx rsi rdi]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :      17
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::getDataStreamSize(const SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideData<double>::getDataStreamSize(const SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::BoxOverlap &) const) [1351] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(497,1)
  -> INDIRECT- (VIRTUAL): (502,40)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.173297_V$1372.0.1393->__vptr_V$129c_2.73 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (505,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (505,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (505,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (505,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INDIRECT- (VIRTUAL): (506,81)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.173297_V$1372.0.1393->__vptr_V$129c_2.73 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (507,27) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (507,29) SAMRAI::pdat::ArrayData<double>::getDataStreamSize(const SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(770,21) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(771,14) SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(772,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(773,14) SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(774,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(775,14) SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(776,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(777,14) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(778,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(779,14) SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(780,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(781,14) SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (508,27) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (508,29) SAMRAI::pdat::ArrayData<double>::getDataStreamSize(const SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(770,21) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(771,14) SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(772,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(773,14) SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(774,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(775,14) SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(776,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(777,14) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(778,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(779,14) SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(780,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(781,14) SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(505,52)
   remark #15523: loop was not vectorized: loop control variable d was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(497,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat13OutersideDataIdE17getDataStreamSizeERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:497

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :      86
            Global    :      39
            Local     :      47
        Regenerable   :      18
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [8.60e+00 ~ 1.9%]
            Writes    :       5 [4.50e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::packStream(const SAMRAI::pdat::OutersideData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideData<double>::packStream(const SAMRAI::pdat::OutersideData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &) const) [1352] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(527,1)
  -> INDIRECT- (VIRTUAL): (532,40)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.173310_V$137a.0.1394->__vptr_V$129c_2.73 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (533,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (533,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (533,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (533,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INDIRECT- (VIRTUAL): (534,79)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.173310_V$137a.0.1394->__vptr_V$129c_2.73 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (535,57) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (536,14) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (536,14) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (536,23) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (536,23) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (536,30) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
  -> INLINE: (537,36) SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,22) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,30) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,44) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,52) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (537,53) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (537,57) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (539,63) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (539,65) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
  -> INLINE: (540,28) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (541,28) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> (541,30) SAMRAI::pdat::ArrayData<double>::packStream(const SAMRAI::pdat::ArrayData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &) const
  -> INLINE: (542,19) SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,22) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,30) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,44) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,52) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(533,33)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(536,14)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(538,57)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(538,57)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(538,57)
      <Remainder loop for vectorization>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(538,36)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         remark #25478: While Loop Unrolled by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(538,36)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         remark #25478: While Loop Unrolled by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(538,10)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(541,28)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(543,19)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
            remark #25478: While Loop Unrolled by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(543,19)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
            remark #25478: While Loop Unrolled by 8  
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(527,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat13OutersideDataIdE10packStreamERNS_4tbox13MessageStreamERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:527

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     332
            Global    :      88
            Local     :     244
        Regenerable   :      67
        Spilled       :      10
        
    Routine stack
        Variables     :     416 bytes*
            Reads     :      62 [8.32e+02 ~ 9.7%]
            Writes    :      45 [1.39e+02 ~ 1.6%]
        Spills        :      40 bytes*
            Reads     :       7 [7.97e+01 ~ 0.9%]
            Writes    :       6 [6.57e+01 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::packStream(const SAMRAI::pdat::ArrayData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<double>::packStream(const SAMRAI::pdat::ArrayData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &) const) [1353] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(805,1)
  -> INLINE: (808,43) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (810,26) SAMRAI::tbox::MessageStream::getWriteBuffer<double>(SAMRAI::tbox::MessageStream *, size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(217,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(219,25) std::vector<char, std::allocator<char>>::resize(std::vector<char, std::allocator<char>> *, std::vector<char, std::allocator<char>>::size_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(219,32) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(220,41) std::vector<char, std::allocator<char>>::size(const std::vector<char, std::allocator<char>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(223,55) std::vector<char, std::allocator<char>>::operator[](std::vector<char, std::allocator<char>> *, std::vector<char, std::allocator<char>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(223,56) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
  -> INLINE: (811,4) SAMRAI::pdat::ArrayData<double>::packBuffer(const SAMRAI::pdat::ArrayData<double> *, double *, const SAMRAI::hier::Box &) const
    -> INLINE: (1294,4) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<double> &, const double *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<double> &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(272,41) SAMRAI::pdat::ArrayData<double>::getDim(const SAMRAI::pdat::ArrayData<double> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(275,53) SAMRAI::pdat::ArrayData<double>::getPointer(const SAMRAI::pdat::ArrayData<double> *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(278,44) SAMRAI::pdat::ArrayData<double>::getPointer(const SAMRAI::pdat::ArrayData<double> *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(280,49) SAMRAI::pdat::ArrayData<double>::getDepth(const SAMRAI::pdat::ArrayData<double> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(283,43) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(289,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(290,30) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(294,40) SAMRAI::pdat::ArrayData<double>::getOffset(const SAMRAI::pdat::ArrayData<double> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(307,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,35) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(397,15) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (811,27) SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,22) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,30) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,44) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,52) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (811,54) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(809,43)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(809,43)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,54)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,54)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,54)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,27)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,27)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(288,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between U1af_V.U1af_V (606:16) and U1af_V.U1af_V (606:16)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(319,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between dat_b[nd] (387:10) and dat_b[m] (425:16)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(394,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between buffer[buf_counter+i0] (31:4) and buffer[buf_counter+i0] (31:4)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between buffer[buf_counter+i0] (31:4) and src_ptr[dat_counter+i0] (31:4)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(406,34) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(412,16) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(812,4)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(703,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(703,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(805,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat9ArrayDataIdE10packStreamERNS_4tbox13MessageStreamERKNS_4hier3BoxERKNS6_9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:805

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     465
            Global    :     124
            Local     :     341
        Regenerable   :      30
        Spilled       :      24
        
    Routine stack
        Variables     :     224 bytes*
            Reads     :      89 [2.52e+02 ~ 7.5%]
            Writes    :      37 [1.71e+02 ~ 5.1%]
        Spills        :     152 bytes*
            Reads     :      43 [8.91e+01 ~ 2.6%]
            Writes    :      43 [2.77e+01 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::unpackStream(SAMRAI::pdat::OutersideData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideData<double>::unpackStream(SAMRAI::pdat::OutersideData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)) [1354] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(555,1)
  -> INDIRECT- (VIRTUAL): (560,40)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.173336_V$1389.0.1395->__vptr_V$129c_2.73 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (561,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (561,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (561,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (561,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INDIRECT- (VIRTUAL): (562,79)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.173336_V$1389.0.1395->__vptr_V$129c_2.73 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (563,57) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (564,14) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (564,14) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (564,23) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (564,23) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (564,30) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
  -> INLINE: (566,42) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (566,60) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (566,62) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
  -> INLINE: (567,28) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (568,28) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (568,30) SAMRAI::pdat::ArrayData<double>::unpackStream(SAMRAI::pdat::ArrayData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(916,43) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(917,32) SAMRAI::tbox::MessageStream::getReadBuffer<double>(SAMRAI::tbox::MessageStream *, size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(195,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(198,61) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(919,4) SAMRAI::pdat::ArrayData<double>::unpackBuffer(SAMRAI::pdat::ArrayData<double> *, const double *, const SAMRAI::hier::Box &)
      -> INLINE: (1313,4) SAMRAI::pdat::ArrayDataOperationUtilities<double, SAMRAI::pdat::CopyOperation<double>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<double> &, const double *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<double> &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(272,41) SAMRAI::pdat::ArrayData<double>::getDim(const SAMRAI::pdat::ArrayData<double> *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(275,53) SAMRAI::pdat::ArrayData<double>::getPointer(const SAMRAI::pdat::ArrayData<double> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(278,44) SAMRAI::pdat::ArrayData<double>::getPointer(const SAMRAI::pdat::ArrayData<double> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(280,49) SAMRAI::pdat::ArrayData<double>::getDepth(const SAMRAI::pdat::ArrayData<double> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(283,43) SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(289,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(290,30) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(294,40) SAMRAI::pdat::ArrayData<double>::getOffset(const SAMRAI::pdat::ArrayData<double> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(307,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,35) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(397,15) SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(561,33)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(564,14)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(565,21)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(568,28)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(288,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between intersect.intersect.intersect.intersect (604:41) and this->d_empty_flag (610:10)

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
               remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
               remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(319,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed OUTPUT dependence between dat_b[nd] (387:10) and dat_b[m] (425:16)

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
               remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
               remark #25439: unrolled with remainder by 2  
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
            <Remainder>
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(394,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
               remark #15346: vector dependence: assumed OUTPUT dependence between dst_ptr[dat_counter+i0] (31:4) and dst_ptr[dat_counter+i0] (31:4)

               LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
                  remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
                  remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[dat_counter+i0] (31:4) and buffer[buf_counter+i0] (31:4)
                  remark #25439: unrolled with remainder by 2  
               LOOP END

               LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
               <Remainder>
               LOOP END

               LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(406,34) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
                  remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(412,16) ]
               LOOP END

               LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
                  remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
                  remark #25439: unrolled with remainder by 8  
               LOOP END

               LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
                  remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
                  remark #25439: unrolled with remainder by 2  
               LOOP END

               LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
               <Remainder>
               LOOP END

               LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
               <Remainder>
                  remark #25436: completely unrolled by 7  
               LOOP END
            LOOP END
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(569,30)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(555,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OutersideDataIdE12unpackStreamERNS_4tbox13MessageStreamERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:555

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     468
            Global    :      99
            Local     :     369
        Regenerable   :      20
        Spilled       :      28
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :     122 [7.88e+03 ~ 8.3%]
            Writes    :      24 [4.95e+03 ~ 5.2%]
        Spills        :     176 bytes*
            Reads     :      39 [1.87e+03 ~ 2.0%]
            Writes    :      38 [7.66e+02 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::fillAll(SAMRAI::pdat::OutersideData<double> *, const double &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::OutersideData<double>::fillAll(SAMRAI::pdat::OutersideData<double> *, const double &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(646,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::getFromRestart(SAMRAI::pdat::OutersideData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideData<double>::getFromRestart(SAMRAI::pdat::OutersideData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &)) [1356] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(771,1)
  -> DELETED: (776,8) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (776,8) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (776,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (776,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (776,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (776,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U187_V$1399.0.1397->__vptr_V$100b + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (776,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (778,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (778,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (778,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (778,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (778,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (778,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (778,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (778,7) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (778,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (778,7) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (778,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (778,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (778,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (778,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (782,4) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (782,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (782,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (782,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (782,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (782,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U188_V$139a.0.1397->__vptr_V$100b + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (782,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (784,36) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (784,36) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (785,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (785,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (785,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (785,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (786,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (786,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (786,41) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (786,41) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (786,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (787,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (787,10) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,22) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,22) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,34) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (788,48)  EXPR_CONV.SI64.P64(*((SI64*) (__$U18f_V$13a8.0.1397->__vptr_V$100b + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (789,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> (789,21) SAMRAI::pdat::ArrayData<double>::getFromRestart(SAMRAI::pdat::ArrayData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &)
  -> INLINE: (791,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (791,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (791,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (791,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (791,29) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (791,29) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (791,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (791,63) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (791,63) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (792,22) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (792,22) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (792,34) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (792,48)  EXPR_CONV.SI64.P64(*((SI64*) (__$U191_V$13aa.0.1397->__vptr_V$100b + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (793,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> (793,21) SAMRAI::pdat::ArrayData<double>::getFromRestart(SAMRAI::pdat::ArrayData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &)
  -> INLINE: (794,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (794,4) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(785,33)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(771,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OutersideDataIdE14getFromRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:771

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     675
            Global    :     173
            Local     :     502
        Regenerable   :     241
        Spilled       :       9
        
    Routine stack
        Variables     :     542 bytes*
            Reads     :      58 [1.16e+02 ~ 10.8%]
            Writes    :      84 [1.40e+02 ~ 13.1%]
        Spills        :      32 bytes*
            Reads     :       4 [1.03e+00 ~ 0.1%]
            Writes    :       4 [1.03e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::putToRestart(const SAMRAI::pdat::OutersideData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideData<double>::putToRestart(const SAMRAI::pdat::OutersideData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [1357] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(810,1)
  -> INLINE: (815,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (815,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (815,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (815,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (816,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (816,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (816,7)  EXPR_CONV.SI64.P64(*((SI64*) (__$U194_V$13b0.0.1398->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> INLINE: (818,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (818,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (818,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (818,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (818,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (818,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (818,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U195_V$13b1.0.1398->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> (820,36) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (820,36) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (821,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (821,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (821,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (821,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (822,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (822,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (822,41) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (822,41) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (822,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (823,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (823,10) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (824,22) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (824,22) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (824,34) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (824,48)  EXPR_CONV.SI64.P64(*((SI64*) (__$U199_V$13b7.0.1398->__vptr_V$100b + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (825,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (825,21) SAMRAI::pdat::ArrayData<double>::putToRestart(const SAMRAI::pdat::ArrayData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1bd_V$1447.0.1420.34316->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1bf_V$1449.0.1420.34316->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1c0_V$144a.0.1420.34316->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1c2_V$144c.0.1420.34316->__vptr_V$100b + EXPR_CONV.SI32.I64(22(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)
      -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1487,28)  EXPR_CONV.SI64.P64(*((SI64*) (this_22992_V$100c.0.1227.34335->__vptr_V$100b + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,29) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,29) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,63) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (827,63) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (828,22) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (828,22) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (828,34) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (828,48)  EXPR_CONV.SI64.P64(*((SI64*) (__$U19b_V$13b9.0.1398->__vptr_V$100b + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (829,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (829,21) SAMRAI::pdat::ArrayData<double>::putToRestart(const SAMRAI::pdat::ArrayData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1bd_V$1447.0.1420.34419->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1bf_V$1449.0.1420.34419->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1c0_V$144a.0.1420.34419->__vptr_V$100b + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1c2_V$144c.0.1420.34419->__vptr_V$100b + EXPR_CONV.SI32.I64(22(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)
      -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1487,28)  EXPR_CONV.SI64.P64(*((SI64*) (this_22992_V$100c.0.1227.34438->__vptr_V$100b + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (830,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (830,4) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(821,33)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(810,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat13OutersideDataIdE12putToRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:810

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     788
            Global    :     204
            Local     :     584
        Regenerable   :     265
        Spilled       :       6
        
    Routine stack
        Variables     :     231 bytes*
            Reads     :      64 [2.19e+02 ~ 11.5%]
            Writes    :      59 [1.34e+02 ~ 7.0%]
        Spills        :       8 bytes*
            Reads     :       4 [1.30e+01 ~ 0.7%]
            Writes    :       1 [1.00e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::canEstimateStreamSizeFromBox()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::canEstimateStreamSizeFromBox()) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(63,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::getSizeOfData(const SAMRAI::hier::Box &, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::getSizeOfData(const SAMRAI::hier::Box &, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(76,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::ArrayData(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::Box &, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::ArrayData(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::Box &, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(105,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::ArrayData(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::Box &, unsigned int, SAMRAI::tbox::ResourceAllocator)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::ArrayData(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::Box &, unsigned int, SAMRAI::tbox::ResourceAllocator)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(136,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::getBox(const SAMRAI::pdat::ArrayData<double> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(171,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::getDepth(const SAMRAI::pdat::ArrayData<double> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::getDepth(const SAMRAI::pdat::ArrayData<double> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(178,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::getOffset(const SAMRAI::pdat::ArrayData<double> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::getOffset(const SAMRAI::pdat::ArrayData<double> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(185,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::getPointer(SAMRAI::pdat::ArrayData<double> *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(207,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::getPointer(const SAMRAI::pdat::ArrayData<double> *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::getPointer(const SAMRAI::pdat::ArrayData<double> *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(217,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(284,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(438,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::copy(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::pdat::ArrayData<double> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(450,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::getDataStreamSize(const SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::getDataStreamSize(const SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(761,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::packStream(const SAMRAI::pdat::ArrayData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::packStream(const SAMRAI::pdat::ArrayData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(849,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::unpackStream(SAMRAI::pdat::ArrayData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::unpackStream(SAMRAI::pdat::ArrayData<double> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(911,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::fillAll(SAMRAI::pdat::ArrayData<double> *, const double &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::fillAll(SAMRAI::pdat::ArrayData<double> *, const double &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1007,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::putToRestart(const SAMRAI::pdat::ArrayData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::putToRestart(const SAMRAI::pdat::ArrayData<double> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1231,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::getDim(const SAMRAI::pdat::ArrayData<double> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::getDim(const SAMRAI::pdat::ArrayData<double> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1250,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::packBuffer(const SAMRAI::pdat::ArrayData<double> *, double *, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::packBuffer(const SAMRAI::pdat::ArrayData<double> *, double *, const SAMRAI::hier::Box &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1287,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::unpackBuffer(SAMRAI::pdat::ArrayData<double> *, const double *, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<double>::unpackBuffer(SAMRAI::pdat::ArrayData<double> *, const double *, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1306,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceDataFactory<double>::OuterfaceDataFactory(SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::OuterfaceDataFactory<double>::OuterfaceDataFactory(SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(42,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceDataFactory<double>::OuterfaceDataFactory(SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int, SAMRAI::tbox::ResourceAllocator)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::OuterfaceDataFactory<double>::OuterfaceDataFactory(SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int, SAMRAI::tbox::ResourceAllocator)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(56,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceDataFactory<double>::~OuterfaceDataFactory(SAMRAI::pdat::OuterfaceDataFactory<double> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceDataFactory<double>::~OuterfaceDataFactory(SAMRAI::pdat::OuterfaceDataFactory<double> *)) [1380] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(62,1)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(62,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat20OuterfaceDataFactoryIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:62

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rdi r15]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceDataFactory<double>::~OuterfaceDataFactory(SAMRAI::pdat::OuterfaceDataFactory<double> *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceDataFactory<double>::~OuterfaceDataFactory(SAMRAI::pdat::OuterfaceDataFactory<double> *const)) [1381] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(61,29)
  -> INLINE: (61,29) SAMRAI::pdat::OuterfaceDataFactory<double>::~OuterfaceDataFactory(SAMRAI::pdat::OuterfaceDataFactory<double> *)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(61,29):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat20OuterfaceDataFactoryIdED0Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:61

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rdi r15]
        
    Routine temporaries
        Total         :      21
            Global    :       7
            Local     :      14
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceDataFactory<double>::cloneFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceDataFactory<double>::cloneFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::hier::IntVector &)) [1382] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(77,1)
  -> INLINE: (81,7) std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (81,14) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, void>(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (81,14) std::make_shared<SAMRAI::pdat::OuterfaceDataFactory<double>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::__shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::OuterfaceDataFactory<double> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &>::type, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &>::type &&, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &>::type, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &>::type &&, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &&, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> *, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::construct<SAMRAI::pdat::OuterfaceDataFactory<double>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::_S_construct<SAMRAI::pdat::OuterfaceDataFactory<double>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>::construct<SAMRAI::pdat::OuterfaceDataFactory<double>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> *, SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
                            -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::OuterfaceDataFactory<double>::OuterfaceDataFactory(SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int, SAMRAI::tbox::ResourceAllocator)
                              -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:(51,27) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
                                -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
                              -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:(53,16) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
                                -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (82,21) SAMRAI::hier::IntVector::getDim(const SAMRAI::hier::IntVector *) const
  -> INLINE: (86,7) std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (86,14) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, void>(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (86,14) std::make_shared<SAMRAI::pdat::OuterfaceDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *, const SAMRAI::tbox::Dimension &, int &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::__shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::OuterfaceDataFactory<double> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &>::type, const SAMRAI::tbox::Dimension &, int &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &>::type &&, const SAMRAI::tbox::Dimension &, int &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &>::type, const SAMRAI::tbox::Dimension &, int &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &>::type &&, const SAMRAI::tbox::Dimension &, int &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &&, const SAMRAI::tbox::Dimension &, int &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const SAMRAI::tbox::Dimension &, int &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> *, const SAMRAI::tbox::Dimension &, int &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::construct<SAMRAI::pdat::OuterfaceDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>>::_S_construct<SAMRAI::pdat::OuterfaceDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> &, SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type>::construct<SAMRAI::pdat::OuterfaceDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceDataFactory<double>>::type>::type> *, SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &)
                            -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::OuterfaceDataFactory<double>::OuterfaceDataFactory(SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::tbox::Dimension &, int)
                              -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:(38,27) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
                                -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
                              -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:(40,16) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
                                -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (87,21) SAMRAI::hier::IntVector::getDim(const SAMRAI::hier::IntVector *) const


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(77,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat20OuterfaceDataFactoryIdE12cloneFactoryERKNS_4hier9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:77

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :     144
            Global    :      33
            Local     :     111
        Regenerable   :      16
        Spilled       :       5
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       6 [0.00e+00 ~ 0.0%]
            Writes    :      10 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceDataFactory<double>::allocate(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::hier::Patch &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceDataFactory<double>::allocate(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::hier::Patch &) const) [1389] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(104,1)
  -> INLINE: (108,7) std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (108,14) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr<SAMRAI::pdat::OuterfaceData<double>, void>(std::shared_ptr<SAMRAI::hier::PatchData> *, std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (108,14) std::make_shared<SAMRAI::pdat::OuterfaceData<double>, const SAMRAI::hier::Box &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::tbox::ResourceAllocator &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::OuterfaceData<double> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::tbox::ResourceAllocator &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::tbox::ResourceAllocator &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>>::construct<SAMRAI::pdat::OuterfaceData<double>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &, SAMRAI::pdat::OuterfaceData<double> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>>::_S_construct<SAMRAI::pdat::OuterfaceData<double>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &, SAMRAI::pdat::OuterfaceData<double> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>::construct<SAMRAI::pdat::OuterfaceData<double>, const SAMRAI::hier::Box &, const int &, const SAMRAI::tbox::ResourceAllocator &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> *, SAMRAI::pdat::OuterfaceData<double> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::tbox::ResourceAllocator &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::OuterfaceData<double>::OuterfaceData(SAMRAI::pdat::OuterfaceData<double> *, const SAMRAI::hier::Box &, int, SAMRAI::tbox::ResourceAllocator)
  -> INLINE: (108,59) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> INLINE: (110,7) std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (110,14) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr<SAMRAI::pdat::OuterfaceData<double>, void>(std::shared_ptr<SAMRAI::hier::PatchData> *, std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (110,14) std::make_shared<SAMRAI::pdat::OuterfaceData<double>, const SAMRAI::hier::Box &, const int &>(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *, const SAMRAI::hier::Box &, const int &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::shared_ptr<SAMRAI::pdat::OuterfaceData<double>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::__shared_ptr<SAMRAI::pdat::OuterfaceData<double>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::OuterfaceData<double> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, const SAMRAI::hier::Box &, const int &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &&, const SAMRAI::hier::Box &, const int &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OuterfaceData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>>::construct<SAMRAI::pdat::OuterfaceData<double>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &, SAMRAI::pdat::OuterfaceData<double> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>>::_S_construct<SAMRAI::pdat::OuterfaceData<double>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> &, SAMRAI::pdat::OuterfaceData<double> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type>::construct<SAMRAI::pdat::OuterfaceData<double>, const SAMRAI::hier::Box &, const int &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OuterfaceData<double>>::type>::type> *, SAMRAI::pdat::OuterfaceData<double> *, const SAMRAI::hier::Box &, const int &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::OuterfaceData<double>::OuterfaceData(SAMRAI::pdat::OuterfaceData<double> *, const SAMRAI::hier::Box &, int)
  -> INLINE: (110,59) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/ext/new_allocator.h(120,27):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(104,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat20OuterfaceDataFactoryIdE8allocateERKNS_4hier5PatchE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:104

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :     126
            Global    :      31
            Local     :      95
        Regenerable   :      16
        Spilled       :       4
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       6 [0.00e+00 ~ 0.0%]
            Writes    :       8 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::OuterfaceData(SAMRAI::pdat::OuterfaceData<double> *, const SAMRAI::hier::Box &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::OuterfaceData(SAMRAI::pdat::OuterfaceData<double> *, const SAMRAI::hier::Box &, int)) [1391] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(46,1)
  -> (41,22) std::shared_ptr<SAMRAI::pdat::ArrayData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<double>> *)
  -> INLINE: (41,22) std::shared_ptr<SAMRAI::pdat::ArrayData<double>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (44,25) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (44,54) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (50,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (50,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (50,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (50,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (51,33) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (54,20) SAMRAI::hier::Box::setUpper(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(570,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (54,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(537,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (55,20) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::ArrayData<double> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
        -> (456,8) SAMRAI::pdat::ArrayData<double>::~ArrayData(SAMRAI::pdat::ArrayData<double> *)
  -> INLINE: (55,60) SAMRAI::pdat::ArrayData<double>::ArrayData(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::Box &, unsigned int)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(91,18) std::allocator<double>::~allocator(std::allocator<double> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(94,40) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::allocator(std::allocator<double> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (56,20) SAMRAI::hier::Box::setLower(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(548,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (56,40) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (57,20) SAMRAI::hier::Box::setUpper(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(570,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (57,40) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (58,20) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::ArrayData<double> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
        -> (456,8) SAMRAI::pdat::ArrayData<double>::~ArrayData(SAMRAI::pdat::ArrayData<double> *)
  -> INLINE: (58,60) SAMRAI::pdat::ArrayData<double>::ArrayData(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::Box &, unsigned int)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(91,18) std::allocator<double>::~allocator(std::allocator<double> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(94,40) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::allocator(std::allocator<double> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::~allocator(std::allocator<double> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(41,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between U13a_V->_M_ptr (733:17) and call:?1memset (733:17)
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(50,52)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(56,60)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(56,60)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(56,60)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(56,60)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(56,60)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(59,60)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(59,60)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(59,60)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(59,60)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(59,60)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(56,60)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(59,60)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(41,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(46,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OuterfaceDataIdEC1ERKNS_4hier3BoxEi] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:46

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     412
            Global    :      73
            Local     :     339
        Regenerable   :      32
        Spilled       :      11
        
    Routine stack
        Variables     :     152 bytes*
            Reads     :      77 [1.01e+02 ~ 5.6%]
            Writes    :      20 [3.38e+01 ~ 1.9%]
        Spills        :      48 bytes*
            Reads     :      15 [3.81e+01 ~ 2.1%]
            Writes    :       7 [8.30e+00 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<double>::~ArrayData(SAMRAI::pdat::ArrayData<double> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<double>::~ArrayData(SAMRAI::pdat::ArrayData<double> *)) [1393] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(155,1)
  -> INLINE: (159,1) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(155,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:155

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rdi r13]
        
    Routine temporaries
        Total         :      12
            Global    :       8
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__enable_shared_from_this_helper<__gnu_cxx::_S_atomic>(const std::__shared_count<__gnu_cxx::_S_atomic> &, ...)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(724,5):remark #34051: REGISTER ALLOCATION : [_ZSt32__enable_shared_from_this_helperILN9__gnu_cxx12_Lock_policyE2EEvRKSt14__shared_countIXT_EEz] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:724

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::ArrayData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat9ArrayDataIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceData<double>::OuterfaceData(SAMRAI::pdat::OuterfaceData<double> *, const SAMRAI::hier::Box &, int, SAMRAI::tbox::ResourceAllocator)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceData<double>::OuterfaceData(SAMRAI::pdat::OuterfaceData<double> *, const SAMRAI::hier::Box &, int, SAMRAI::tbox::ResourceAllocator)) [1396] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(69,1)
  -> (63,22) std::shared_ptr<SAMRAI::pdat::ArrayData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<double>> *)
  -> INLINE: (63,22) std::shared_ptr<SAMRAI::pdat::ArrayData<double>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (67,25) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (67,54) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (73,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (73,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (73,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (73,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (74,33) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (77,20) SAMRAI::hier::Box::setUpper(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(570,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (77,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(537,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (78,20) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::ArrayData<double> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
        -> (456,8) SAMRAI::pdat::ArrayData<double>::~ArrayData(SAMRAI::pdat::ArrayData<double> *)
  -> INLINE: (78,66) SAMRAI::pdat::ArrayData<double>::ArrayData(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::Box &, unsigned int, SAMRAI::tbox::ResourceAllocator)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(122,18) std::allocator<double>::~allocator(std::allocator<double> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(127,17) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::allocator<double>::allocator(std::allocator<double> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (79,20) SAMRAI::hier::Box::setLower(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(548,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (79,40) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (80,20) SAMRAI::hier::Box::setUpper(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(570,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (80,40) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (81,20) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::ArrayData<double> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
        -> (456,8) SAMRAI::pdat::ArrayData<double>::~ArrayData(SAMRAI::pdat::ArrayData<double> *)
  -> INLINE: (81,66) SAMRAI::pdat::ArrayData<double>::ArrayData(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::Box &, unsigned int, SAMRAI::tbox::ResourceAllocator)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(122,18) std::allocator<double>::~allocator(std::allocator<double> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(127,17) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::allocator<double>::allocator(std::allocator<double> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::allocator<double>::~allocator(std::allocator<double> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(63,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between U142_V->_M_ptr (733:17) and call:?1memset (733:17)
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(73,52)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(79,66)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(79,66)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(79,66)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(79,66)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(79,66)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(82,66)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(82,66)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(82,66)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(82,66)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(82,66)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(79,66)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(82,66)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(63,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(69,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OuterfaceDataIdEC1ERKNS_4hier3BoxEiNS_4tbox17ResourceAllocatorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:69

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     412
            Global    :      73
            Local     :     339
        Regenerable   :      32
        Spilled       :      11
        
    Routine stack
        Variables     :     152 bytes*
            Reads     :      77 [1.01e+02 ~ 5.6%]
            Writes    :      20 [3.38e+01 ~ 1.9%]
        Spills        :      48 bytes*
            Reads     :      15 [3.81e+01 ~ 2.1%]
            Writes    :       7 [8.30e+00 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceDataFactory<double>::getBoxGeometry(std::shared_ptr<SAMRAI::hier::BoxGeometry> *, const SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceDataFactory<double>::getBoxGeometry(std::shared_ptr<SAMRAI::hier::BoxGeometry> *, const SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::hier::Box &) const) [1401] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(126,1)
  -> INLINE: (129,38) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (129,63) SAMRAI::hier::PatchDataFactory::getDim(const SAMRAI::hier::PatchDataFactory *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataFactory.h:(189,23) SAMRAI::hier::IntVector::getDim(const SAMRAI::hier::IntVector *) const
  -> INLINE: (131,4) std::shared_ptr<SAMRAI::pdat::OuterfaceGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (131,11) std::shared_ptr<SAMRAI::hier::BoxGeometry>::shared_ptr<SAMRAI::pdat::OuterfaceGeometry, void>(std::shared_ptr<SAMRAI::hier::BoxGeometry> *, std::shared_ptr<SAMRAI::pdat::OuterfaceGeometry> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (131,11) std::make_shared<SAMRAI::pdat::OuterfaceGeometry, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::OuterfaceGeometry> *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(126,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat20OuterfaceDataFactoryIdE14getBoxGeometryERKNS_4hier3BoxE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:126

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r12-r14]
        
    Routine temporaries
        Total         :      72
            Global    :      20
            Local     :      52
        Regenerable   :      14
        Spilled       :       3
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :       3 [0.00e+00 ~ 0.0%]
            Writes    :       4 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceDataFactory<double>::getSizeOfMemory(const SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceDataFactory<double>::getSizeOfMemory(const SAMRAI::pdat::OuterfaceDataFactory<double> *, const SAMRAI::hier::Box &) const) [1406] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(153,1)
  -> INLINE: (157,24) SAMRAI::pdat::OuterfaceData<double>::getSizeOfData(const SAMRAI::hier::Box &, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(647,47) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(647,47) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(647,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(647,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(650,13) SAMRAI::hier::Box::setUpper(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(570,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(650,29) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(537,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(651,13) SAMRAI::hier::Box::setLower(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(548,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(651,29) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(652,15) SAMRAI::pdat::ArrayData<double>::getSizeOfData(const SAMRAI::hier::Box &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(77,44) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp:(653,15) SAMRAI::pdat::ArrayData<double>::getSizeOfData(const SAMRAI::hier::Box &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(77,44) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceData.cpp(647,56) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(158,24)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(158,24)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(158,24)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(158,24)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(158,24)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(158,24)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(158,24)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(153,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat20OuterfaceDataFactoryIdE15getSizeOfMemoryERKNS_4hier3BoxE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:153

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     287
            Global    :      40
            Local     :     247
        Regenerable   :      13
        Spilled       :      10
        
    Routine stack
        Variables     :     152 bytes*
            Reads     :      72 [8.74e+01 ~ 15.2%]
            Writes    :       9 [2.31e+01 ~ 4.0%]
        Spills        :      32 bytes*
            Reads     :       7 [7.38e+00 ~ 1.3%]
            Writes    :       7 [2.56e-02 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceDataFactory<double>::fineBoundaryRepresentsVariable(const SAMRAI::pdat::OuterfaceDataFactory<double> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceDataFactory<double>::fineBoundaryRepresentsVariable(const SAMRAI::pdat::OuterfaceDataFactory<double> *) const) [1407] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(173,1)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(173,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat20OuterfaceDataFactoryIdE30fineBoundaryRepresentsVariableEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:173

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceDataFactory<double>::dataLivesOnPatchBorder(const SAMRAI::pdat::OuterfaceDataFactory<double> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceDataFactory<double>::dataLivesOnPatchBorder(const SAMRAI::pdat::OuterfaceDataFactory<double> *) const) [1408] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(188,1)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(188,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat20OuterfaceDataFactoryIdE22dataLivesOnPatchBorderEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:188

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OuterfaceDataFactory<double>::validCopyTo(const SAMRAI::pdat::OuterfaceDataFactory<double> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OuterfaceDataFactory<double>::validCopyTo(const SAMRAI::pdat::OuterfaceDataFactory<double> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &) const) [1409] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(205,1)
  -> INLINE: (215,10) std::dynamic_pointer_cast<SAMRAI::pdat::FaceDataFactory<double>, SAMRAI::hier::PatchDataFactory>(std::shared_ptr<SAMRAI::pdat::FaceDataFactory<double>> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (217,11) std::__shared_ptr<SAMRAI::pdat::FaceDataFactory<double>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::FaceDataFactory<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (220,4) std::shared_ptr<SAMRAI::pdat::FaceDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::FaceDataFactory<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (224,10) std::dynamic_pointer_cast<SAMRAI::pdat::OuterfaceDataFactory<double>, SAMRAI::hier::PatchDataFactory>(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (227,11) std::__shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (230,4) std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OuterfaceDataFactory<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp(205,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat20OuterfaceDataFactoryIdE11validCopyToERKSt10shared_ptrINS_4hier16PatchDataFactoryEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OuterfaceDataFactory.cpp:205

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      70
            Global    :      33
            Local     :      37
        Regenerable   :      23
        Spilled       :       4
        
    Routine stack
        Variables     :      32 bytes*
            Reads     :       8 [4.32e-01 ~ 1.1%]
            Writes    :       8 [8.80e-01 ~ 2.2%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CopyOperation<double>::operator()(const SAMRAI::pdat::CopyOperation<double> *, double &, const double &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CopyOperation.cpp(30,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideDataFactory<double>::OutersideDataFactory(SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::OutersideDataFactory<double>::OutersideDataFactory(SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(42,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideDataFactory<double>::OutersideDataFactory(SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int, SAMRAI::tbox::ResourceAllocator)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::OutersideDataFactory<double>::OutersideDataFactory(SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int, SAMRAI::tbox::ResourceAllocator)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(57,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideDataFactory<double>::~OutersideDataFactory(SAMRAI::pdat::OutersideDataFactory<double> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideDataFactory<double>::~OutersideDataFactory(SAMRAI::pdat::OutersideDataFactory<double> *)) [1413] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(63,1)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(63,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat20OutersideDataFactoryIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:63

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rdi r15]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideDataFactory<double>::~OutersideDataFactory(SAMRAI::pdat::OutersideDataFactory<double> *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideDataFactory<double>::~OutersideDataFactory(SAMRAI::pdat::OutersideDataFactory<double> *const)) [1414] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(62,29)
  -> INLINE: (62,29) SAMRAI::pdat::OutersideDataFactory<double>::~OutersideDataFactory(SAMRAI::pdat::OutersideDataFactory<double> *)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(62,29):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat20OutersideDataFactoryIdED0Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:62

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rdi r15]
        
    Routine temporaries
        Total         :      21
            Global    :       7
            Local     :      14
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideDataFactory<double>::cloneFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideDataFactory<double>::cloneFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::hier::IntVector &)) [1415] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(78,1)
  -> INLINE: (82,7) std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (82,14) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, void>(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (82,14) std::make_shared<SAMRAI::pdat::OutersideDataFactory<double>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::__shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::OutersideDataFactory<double> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &>::type, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &>::type &&, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &>::type, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &>::type &&, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &&, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> *, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::construct<SAMRAI::pdat::OutersideDataFactory<double>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::_S_construct<SAMRAI::pdat::OutersideDataFactory<double>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>::construct<SAMRAI::pdat::OutersideDataFactory<double>, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> *, SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &, SAMRAI::tbox::ResourceAllocator &)
                            -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::OutersideDataFactory<double>::OutersideDataFactory(SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int, SAMRAI::tbox::ResourceAllocator)
                              -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:(52,27) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
                                -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
                              -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:(54,16) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
                                -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (83,21) SAMRAI::hier::IntVector::getDim(const SAMRAI::hier::IntVector *) const
  -> INLINE: (87,7) std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (87,14) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, void>(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (87,14) std::make_shared<SAMRAI::pdat::OutersideDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *, const SAMRAI::tbox::Dimension &, int &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::__shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::OutersideDataFactory<double> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, const SAMRAI::tbox::Dimension &, int &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &>::type, const SAMRAI::tbox::Dimension &, int &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &>::type &&, const SAMRAI::tbox::Dimension &, int &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &>::type, const SAMRAI::tbox::Dimension &, int &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &>::type &&, const SAMRAI::tbox::Dimension &, int &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, const SAMRAI::tbox::Dimension &, int &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &&, const SAMRAI::tbox::Dimension &, int &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const SAMRAI::tbox::Dimension &, int &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideDataFactory<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> *, const SAMRAI::tbox::Dimension &, int &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::construct<SAMRAI::pdat::OutersideDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>>::_S_construct<SAMRAI::pdat::OutersideDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> &, SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type>::construct<SAMRAI::pdat::OutersideDataFactory<double>, const SAMRAI::tbox::Dimension &, int &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideDataFactory<double>>::type>::type> *, SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int &)
                            -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::OutersideDataFactory<double>::OutersideDataFactory(SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::tbox::Dimension &, int)
                              -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:(38,27) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
                                -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
                              -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:(40,16) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
                                -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (88,21) SAMRAI::hier::IntVector::getDim(const SAMRAI::hier::IntVector *) const


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(78,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat20OutersideDataFactoryIdE12cloneFactoryERKNS_4hier9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:78

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :     144
            Global    :      33
            Local     :     111
        Regenerable   :      16
        Spilled       :       5
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       6 [0.00e+00 ~ 0.0%]
            Writes    :      10 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideDataFactory<double>::allocate(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::hier::Patch &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideDataFactory<double>::allocate(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::hier::Patch &) const) [1421] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(105,1)
  -> INLINE: (109,7) std::shared_ptr<SAMRAI::pdat::OutersideData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (109,14) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr<SAMRAI::pdat::OutersideData<double>, void>(std::shared_ptr<SAMRAI::hier::PatchData> *, std::shared_ptr<SAMRAI::pdat::OutersideData<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (109,14) std::make_shared<SAMRAI::pdat::OutersideData<double>, const SAMRAI::hier::Box &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::tbox::ResourceAllocator &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::OutersideData<double>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::OutersideData<double> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::tbox::ResourceAllocator &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::tbox::ResourceAllocator &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>>::construct<SAMRAI::pdat::OutersideData<double>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &, SAMRAI::pdat::OutersideData<double> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>>::_S_construct<SAMRAI::pdat::OutersideData<double>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &, SAMRAI::pdat::OutersideData<double> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const SAMRAI::tbox::ResourceAllocator &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>::construct<SAMRAI::pdat::OutersideData<double>, const SAMRAI::hier::Box &, const int &, const SAMRAI::tbox::ResourceAllocator &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> *, SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::tbox::ResourceAllocator &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::OutersideData<double>::OutersideData(SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::Box &, int, SAMRAI::tbox::ResourceAllocator)
  -> INLINE: (109,59) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> INLINE: (111,7) std::shared_ptr<SAMRAI::pdat::OutersideData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,14) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr<SAMRAI::pdat::OutersideData<double>, void>(std::shared_ptr<SAMRAI::hier::PatchData> *, std::shared_ptr<SAMRAI::pdat::OutersideData<double>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,14) std::make_shared<SAMRAI::pdat::OutersideData<double>, const SAMRAI::hier::Box &, const int &>(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *, const SAMRAI::hier::Box &, const int &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::OutersideData<double>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::shared_ptr<SAMRAI::pdat::OutersideData<double>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::__shared_ptr<SAMRAI::pdat::OutersideData<double>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::OutersideData<double> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, const SAMRAI::hier::Box &, const int &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &&, const SAMRAI::hier::Box &, const int &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::OutersideData<double>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>>::construct<SAMRAI::pdat::OutersideData<double>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &, SAMRAI::pdat::OutersideData<double> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>>::_S_construct<SAMRAI::pdat::OutersideData<double>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> &, SAMRAI::pdat::OutersideData<double> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type>::construct<SAMRAI::pdat::OutersideData<double>, const SAMRAI::hier::Box &, const int &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::OutersideData<double>>::type>::type> *, SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::Box &, const int &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::OutersideData<double>::OutersideData(SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::Box &, int)
  -> INLINE: (111,59) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/ext/new_allocator.h(120,27):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(105,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat20OutersideDataFactoryIdE8allocateERKNS_4hier5PatchE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:105

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :     126
            Global    :      31
            Local     :      95
        Regenerable   :      16
        Spilled       :       4
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       6 [0.00e+00 ~ 0.0%]
            Writes    :       8 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::OutersideData(SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::Box &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideData<double>::OutersideData(SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::Box &, int)) [1423] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(46,1)
  -> (41,22) std::shared_ptr<SAMRAI::pdat::ArrayData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<double>> *)
  -> INLINE: (41,22) std::shared_ptr<SAMRAI::pdat::ArrayData<double>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (44,25) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (44,54) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (49,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (49,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (49,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (49,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (50,33) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (53,20) SAMRAI::hier::Box::setUpper(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(570,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (53,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(537,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (54,20) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::ArrayData<double> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
        -> (456,8) SAMRAI::pdat::ArrayData<double>::~ArrayData(SAMRAI::pdat::ArrayData<double> *)
  -> INLINE: (54,60) SAMRAI::pdat::ArrayData<double>::ArrayData(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::Box &, unsigned int)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(91,18) std::allocator<double>::~allocator(std::allocator<double> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(94,40) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::allocator(std::allocator<double> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (55,20) SAMRAI::hier::Box::setLower(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(548,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (55,40) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (56,20) SAMRAI::hier::Box::setUpper(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(570,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (56,40) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (57,20) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::ArrayData<double> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
        -> (456,8) SAMRAI::pdat::ArrayData<double>::~ArrayData(SAMRAI::pdat::ArrayData<double> *)
  -> INLINE: (57,60) SAMRAI::pdat::ArrayData<double>::ArrayData(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::Box &, unsigned int)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(91,18) std::allocator<double>::~allocator(std::allocator<double> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(94,40) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::allocator(std::allocator<double> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::~allocator(std::allocator<double> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(41,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between U16c_V->_M_ptr (733:17) and call:?1memset (733:17)
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(49,52)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(55,60)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(55,60)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(55,60)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(55,60)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(55,60)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(58,60)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(58,60)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(58,60)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(58,60)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(58,60)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(55,60)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(58,60)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(41,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(46,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OutersideDataIdEC1ERKNS_4hier3BoxEi] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:46

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     411
            Global    :      75
            Local     :     336
        Regenerable   :      32
        Spilled       :      13
        
    Routine stack
        Variables     :     152 bytes*
            Reads     :      77 [1.01e+02 ~ 5.5%]
            Writes    :      20 [3.38e+01 ~ 1.8%]
        Spills        :      64 bytes*
            Reads     :      17 [3.92e+01 ~ 2.1%]
            Writes    :       9 [1.36e+01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideData<double>::OutersideData(SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::Box &, int, SAMRAI::tbox::ResourceAllocator)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideData<double>::OutersideData(SAMRAI::pdat::OutersideData<double> *, const SAMRAI::hier::Box &, int, SAMRAI::tbox::ResourceAllocator)) [1424] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(68,1)
  -> (62,22) std::shared_ptr<SAMRAI::pdat::ArrayData<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<double>> *)
  -> INLINE: (62,22) std::shared_ptr<SAMRAI::pdat::ArrayData<double>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (66,25) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (66,54) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (72,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (72,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (72,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (72,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (73,33) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (76,20) SAMRAI::hier::Box::setUpper(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(570,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (76,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(537,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (77,20) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::ArrayData<double> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
        -> (456,8) SAMRAI::pdat::ArrayData<double>::~ArrayData(SAMRAI::pdat::ArrayData<double> *)
  -> INLINE: (77,67) SAMRAI::pdat::ArrayData<double>::ArrayData(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::Box &, unsigned int, SAMRAI::tbox::ResourceAllocator)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(122,18) std::allocator<double>::~allocator(std::allocator<double> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(127,17) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::allocator<double>::allocator(std::allocator<double> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (78,20) SAMRAI::hier::Box::setLower(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(548,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (78,40) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (79,20) SAMRAI::hier::Box::setUpper(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(570,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (79,40) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (80,20) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::ArrayData<double>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<double>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::ArrayData<double> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<double> *)
        -> (456,8) SAMRAI::pdat::ArrayData<double>::~ArrayData(SAMRAI::pdat::ArrayData<double> *)
  -> INLINE: (80,67) SAMRAI::pdat::ArrayData<double>::ArrayData(SAMRAI::pdat::ArrayData<double> *, const SAMRAI::hier::Box &, unsigned int, SAMRAI::tbox::ResourceAllocator)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(122,18) std::allocator<double>::~allocator(std::allocator<double> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(127,17) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::allocator<double>::allocator(std::allocator<double> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::allocator<double>::~allocator(std::allocator<double> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(62,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between U174_V->_M_ptr (733:17) and call:?1memset (733:17)
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(72,52)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(78,67)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(78,67)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(78,67)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(78,67)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(78,67)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(81,67)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(81,67)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(81,67)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(81,67)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(81,67)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(78,67)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(81,67)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(62,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(68,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat13OutersideDataIdEC1ERKNS_4hier3BoxEiNS_4tbox17ResourceAllocatorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:68

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     411
            Global    :      75
            Local     :     336
        Regenerable   :      32
        Spilled       :      13
        
    Routine stack
        Variables     :     152 bytes*
            Reads     :      77 [1.01e+02 ~ 5.5%]
            Writes    :      20 [3.38e+01 ~ 1.8%]
        Spills        :      64 bytes*
            Reads     :      17 [3.92e+01 ~ 2.1%]
            Writes    :       9 [1.36e+01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideDataFactory<double>::getBoxGeometry(std::shared_ptr<SAMRAI::hier::BoxGeometry> *, const SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideDataFactory<double>::getBoxGeometry(std::shared_ptr<SAMRAI::hier::BoxGeometry> *, const SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::hier::Box &) const) [1429] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(127,1)
  -> INLINE: (130,39) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (130,64) SAMRAI::hier::PatchDataFactory::getDim(const SAMRAI::hier::PatchDataFactory *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchDataFactory.h:(189,23) SAMRAI::hier::IntVector::getDim(const SAMRAI::hier::IntVector *) const
  -> INLINE: (132,4) std::shared_ptr<SAMRAI::pdat::OutersideGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (132,11) std::shared_ptr<SAMRAI::hier::BoxGeometry>::shared_ptr<SAMRAI::pdat::OutersideGeometry, void>(std::shared_ptr<SAMRAI::hier::BoxGeometry> *, std::shared_ptr<SAMRAI::pdat::OutersideGeometry> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (132,11) std::make_shared<SAMRAI::pdat::OutersideGeometry, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::OutersideGeometry> *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(127,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat20OutersideDataFactoryIdE14getBoxGeometryERKNS_4hier3BoxE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:127

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      68
            Global    :      20
            Local     :      48
        Regenerable   :       8
        Spilled       :       4
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       3 [0.00e+00 ~ 0.0%]
            Writes    :       4 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideDataFactory<double>::getSizeOfMemory(const SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideDataFactory<double>::getSizeOfMemory(const SAMRAI::pdat::OutersideDataFactory<double> *, const SAMRAI::hier::Box &) const) [1434] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(154,1)
  -> INLINE: (158,24) SAMRAI::pdat::OutersideData<double>::getSizeOfData(const SAMRAI::hier::Box &, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(593,47) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(593,47) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(593,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(593,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(596,13) SAMRAI::hier::Box::setUpper(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(570,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(596,29) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(537,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(597,13) SAMRAI::hier::Box::setLower(SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t, int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(548,11) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(597,29) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(598,15) SAMRAI::pdat::ArrayData<double>::getSizeOfData(const SAMRAI::hier::Box &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(77,44) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp:(599,15) SAMRAI::pdat::ArrayData<double>::getSizeOfData(const SAMRAI::hier::Box &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(77,44) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideData.cpp(593,56) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(159,24)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(159,24)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(159,24)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(159,24)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(159,24)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(159,24)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(159,24)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(154,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat20OutersideDataFactoryIdE15getSizeOfMemoryERKNS_4hier3BoxE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:154

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     287
            Global    :      40
            Local     :     247
        Regenerable   :      13
        Spilled       :      10
        
    Routine stack
        Variables     :     152 bytes*
            Reads     :      72 [8.74e+01 ~ 15.2%]
            Writes    :       9 [2.31e+01 ~ 4.0%]
        Spills        :      32 bytes*
            Reads     :       7 [7.38e+00 ~ 1.3%]
            Writes    :       7 [2.56e-02 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideDataFactory<double>::fineBoundaryRepresentsVariable(const SAMRAI::pdat::OutersideDataFactory<double> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideDataFactory<double>::fineBoundaryRepresentsVariable(const SAMRAI::pdat::OutersideDataFactory<double> *) const) [1435] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(217,1)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(217,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat20OutersideDataFactoryIdE30fineBoundaryRepresentsVariableEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:217

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideDataFactory<double>::dataLivesOnPatchBorder(const SAMRAI::pdat::OutersideDataFactory<double> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideDataFactory<double>::dataLivesOnPatchBorder(const SAMRAI::pdat::OutersideDataFactory<double> *) const) [1436] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(232,1)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(232,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat20OutersideDataFactoryIdE22dataLivesOnPatchBorderEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:232

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::OutersideDataFactory<double>::validCopyTo(const SAMRAI::pdat::OutersideDataFactory<double> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::OutersideDataFactory<double>::validCopyTo(const SAMRAI::pdat::OutersideDataFactory<double> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &) const) [1437] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(175,1)
  -> INLINE: (185,10) std::dynamic_pointer_cast<SAMRAI::pdat::SideDataFactory<double>, SAMRAI::hier::PatchDataFactory>(std::shared_ptr<SAMRAI::pdat::SideDataFactory<double>> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (187,11) std::__shared_ptr<SAMRAI::pdat::SideDataFactory<double>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::SideDataFactory<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (190,4) std::shared_ptr<SAMRAI::pdat::SideDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideDataFactory<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (194,10) std::dynamic_pointer_cast<SAMRAI::pdat::OutersideDataFactory<double>, SAMRAI::hier::PatchDataFactory>(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (197,11) std::__shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (200,4) std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::OutersideDataFactory<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp(175,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat20OutersideDataFactoryIdE11validCopyToERKSt10shared_ptrINS_4hier16PatchDataFactoryEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/OutersideDataFactory.cpp:175

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      70
            Global    :      33
            Local     :      37
        Regenerable   :      23
        Spilled       :       4
        
    Routine stack
        Variables     :      32 bytes*
            Reads     :       8 [4.32e-01 ~ 1.1%]
            Writes    :       8 [8.80e-01 ~ 2.2%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::fixed(std::ios_base &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/ios_base.h(959,3):remark #34051: REGISTER ALLOCATION : [_ZSt5fixedRSt8ios_base] /usr/include/c++/4.8.5/bits/ios_base.h:959

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::scientific(std::ios_base &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/ios_base.h(967,3):remark #34051: REGISTER ALLOCATION : [_ZSt10scientificRSt8ios_base] /usr/include/c++/4.8.5/bits/ios_base.h:967

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [1697] <compiler generated>
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator16s_timestamp_statE()
    -> /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(247,77) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::vector(std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *)
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator12s_cells_statE()
    -> /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(246,77) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::vector(std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *)
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator12s_boxes_statE()
    -> /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(245,77) std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::vector(std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *)
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator24t_output_data_statisticsE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(239,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator19t_coarsen_sync_commE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(238,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator21t_coarsen_sync_createE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(237,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator22t_coarsen_fluxsum_commE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(236,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator24t_coarsen_fluxsum_createE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(235,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator21t_sync_initial_createE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(234,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator19t_sync_initial_commE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(233,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator36t_barrier_after_error_bdry_fill_commE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(232,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator17t_sync_new_levelsE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(231,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator16t_std_level_syncE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(230,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator20t_advance_level_syncE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(229,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator18t_patch_num_kernelE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(228,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator28t_new_advance_bdry_fill_commE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(227,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator15t_advance_levelE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(226,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator19t_get_level_dt_syncE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(225,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator14t_get_level_dtE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(224,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator21t_coarsen_rich_extrapE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(223,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator11t_tag_cellsE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(222,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator25t_apply_integral_detectorE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(221,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator32t_apply_multiresolution_detectorE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(220,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator25t_apply_gradient_detectorE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(219,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator22t_apply_value_detectorE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(218,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator30t_apply_immersed_bdry_detectorE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(217,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator22t_apply_refine_regionsE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(216,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator30t_new_advance_bdry_fill_createE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(215,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator26t_advance_bdry_fill_createE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(214,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator26t_init_level_fill_interiorE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(213,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator22t_init_level_fill_dataE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(212,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator25t_init_level_create_schedE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(211,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator23t_initialize_level_dataE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(210,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator29t_get_level_dt_mpi_reductionsE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(209,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator24t_advance_mpi_reductionsE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(208,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator22t_error_bdry_fill_commE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(207,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator24t_error_bdry_fill_createE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(206,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator24t_advance_bdry_fill_commE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:(205,59) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN25RungeKuttaLevelIntegrator20s_initialize_handlerE()


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
<compiler generated>:remark #34051: REGISTER ALLOCATION : [__sti__$E] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rdx rcx rsi rdi r8-r9 r13]
        
    Routine temporaries
        Total         :     184
            Global    :      15
            Local     :     169
        Regenerable   :     178
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::vector(std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4tbox9StatisticEESaIS4_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator24t_advance_bdry_fill_commE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator24t_advance_bdry_fill_commE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator24t_advance_mpi_reductionsE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator24t_advance_mpi_reductionsE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator29t_get_level_dt_mpi_reductionsE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator29t_get_level_dt_mpi_reductionsE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator26t_advance_bdry_fill_createE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator26t_advance_bdry_fill_createE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator30t_new_advance_bdry_fill_createE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator30t_new_advance_bdry_fill_createE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator22t_apply_refine_regionsE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator22t_apply_refine_regionsE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator30t_apply_immersed_bdry_detectorE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator30t_apply_immersed_bdry_detectorE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator22t_apply_value_detectorE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator22t_apply_value_detectorE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator25t_apply_gradient_detectorE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator25t_apply_gradient_detectorE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator32t_apply_multiresolution_detectorE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator32t_apply_multiresolution_detectorE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator25t_apply_integral_detectorE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator25t_apply_integral_detectorE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator11t_tag_cellsE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator11t_tag_cellsE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator14t_get_level_dtE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator14t_get_level_dtE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator19t_get_level_dt_syncE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator19t_get_level_dt_syncE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator15t_advance_levelE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator15t_advance_levelE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator28t_new_advance_bdry_fill_commE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator28t_new_advance_bdry_fill_commE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator18t_patch_num_kernelE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator18t_patch_num_kernelE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator20t_advance_level_syncE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator20t_advance_level_syncE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator16t_std_level_syncE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator16t_std_level_syncE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator17t_sync_new_levelsE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator17t_sync_new_levelsE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator24t_coarsen_fluxsum_createE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator24t_coarsen_fluxsum_createE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator22t_coarsen_fluxsum_commE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator22t_coarsen_fluxsum_commE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator21t_coarsen_sync_createE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator21t_coarsen_sync_createE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator19t_coarsen_sync_commE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator19t_coarsen_sync_commE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator24t_output_data_statisticsE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator24t_output_data_statisticsE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator12s_boxes_statE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator12s_boxes_statE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator12s_cells_statE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator12s_cells_statE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator16s_timestamp_statE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator16s_timestamp_statE()) <compiler generated>

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::_M_get_Tp_allocator(std::_Vector_base<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::_M_deallocate(std::_Vector_base<double, std::allocator<double>> *, std::_Vector_base<double, std::allocator<double>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::_M_get_Tp_allocator(std::_Vector_base<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4hier15VariableContextEESaIS4_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::_M_deallocate(std::_Vector_base<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *, std::_Vector_base<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4hier15VariableContextEESaIS4_EE13_M_deallocateEPS4_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator=(std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *, std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(859,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrIN6SAMRAI4tbox5TimerELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:859

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      15
            Local     :      15
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 4.7%]
            Writes    :       4 [3.35e+00 ~ 7.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::_M_get_Tp_allocator(std::_Vector_base<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4tbox9StatisticEESaIS4_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::_M_deallocate(std::_Vector_base<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::_Vector_base<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4tbox9StatisticEESaIS4_EE13_M_deallocateEPS4_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::_M_get_Tp_allocator(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt6vectorIdSaIdEESaIS2_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::_M_deallocate(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt6vectorIdSaIdEESaIS2_EE13_M_deallocateEPS2_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::_M_get_Tp_allocator(std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4xfer14RefineScheduleEESaIS4_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::_M_deallocate(std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4xfer14RefineScheduleEESaIS4_EE13_M_deallocateEPS4_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::_M_get_Tp_allocator(std::_Vector_base<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIN6SAMRAI4hier17ComponentSelectorESaIS2_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::_M_deallocate(std::_Vector_base<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *, std::_Vector_base<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIN6SAMRAI4hier17ComponentSelectorESaIS2_EE13_M_deallocateEPS2_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::pointer>(std::_Vector_base<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::pointer, std::_Vector_base<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::pointer)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_construct.h(101,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10shared_ptrIN6SAMRAI4hier15VariableContextEEEEvT_S8_] /usr/include/c++/4.8.5/bits/stl_construct.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 4.0%]
            Writes    :       4 [3.94e+00 ~ 4.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::pointer>(std::_Vector_base<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::pointer, std::_Vector_base<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::pointer)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_construct.h(101,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10shared_ptrIN6SAMRAI4tbox9StatisticEEEEvT_S8_] /usr/include/c++/4.8.5/bits/stl_construct.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 4.0%]
            Writes    :       4 [3.94e+00 ~ 4.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer>(std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer, std::_Vector_base<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::pointer)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (160:9) and call:operator delete(void *) (110:9)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_construct.h(101,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIdSaIdEEEEvT_S6_] /usr/include/c++/4.8.5/bits/stl_construct.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rsi rdi r12-r13]
        
    Routine temporaries
        Total         :      12
            Global    :       9
            Local     :       3
        Regenerable   :       0
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [1.97e+00 ~ 3.4%]
            Writes    :       2 [1.97e+00 ~ 3.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::pointer>(std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::pointer, std::_Vector_base<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::pointer)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_construct.h(101,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10shared_ptrIN6SAMRAI4xfer14RefineScheduleEEEEvT_S8_] /usr/include/c++/4.8.5/bits/stl_construct.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 4.0%]
            Writes    :       4 [3.94e+00 ~ 4.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::pointer>(std::_Vector_base<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::pointer, std::_Vector_base<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::pointer)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_construct.h(101,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Destroy_auxILb0EE9__destroyIPN6SAMRAI4hier17ComponentSelectorEEEvT_S6_] /usr/include/c++/4.8.5/bits/stl_construct.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rsi rdi r12-r13]
        
    Routine temporaries
        Total         :      11
            Global    :       8
            Local     :       3
        Regenerable   :       0
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [1.97e+00 ~ 3.9%]
            Writes    :       2 [1.97e+00 ~ 3.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)) [1757] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(515,4)
  -> INLINE: (520,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (521,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (521,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (522,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (522,52) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (526,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (528,21) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (528,40) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(519,10)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(521,48)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between this (522:24) and *(this+(offset+i)*4) (522:24)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(521,48)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(527,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between this (528:21) and *(this+i*4) (528:21)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(527,10)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(515,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVectormLERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:515

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r11 r14-r15]
        
    Routine temporaries
        Total         :      68
            Global    :      22
            Local     :      46
        Regenerable   :       1
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [1.40e+00 ~ 0.7%]
            Writes    :       4 [1.40e+00 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator/=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator/=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)) [1758] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(584,4)
  -> INLINE: (589,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (590,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (590,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (591,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (591,52) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (595,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (597,21) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (597,40) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(588,10)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(590,48)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 2  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(596,10)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(596,10)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(596,10)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(596,10)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(584,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVectordVERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:584

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :      84
            Global    :      31
            Local     :      53
        Regenerable   :       1
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :      10 [3.05e+00 ~ 1.6%]
            Writes    :      10 [3.05e+00 ~ 1.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::ceilingDivide(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::ceilingDivide(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)) [1759] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(655,4)
  -> INLINE: (673,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (674,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (674,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (675,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (675,48) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (675,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: (272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (676,26) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (676,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: (272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (677,29) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (677,62) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: (272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (681,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (683,21) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (683,36) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (683,62) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (684,26) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (684,52) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (685,26) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (685,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(672,10)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(674,48)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 2  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(682,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between denominator[i] (685:80) and this[i] (683:21)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(655,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVector13ceilingDivideERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:655

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :      94
            Global    :      38
            Local     :      56
        Regenerable   :       5
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :       9 [4.41e+00 ~ 1.5%]
            Writes    :       8 [3.53e+00 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator<(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator<(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const) [1760] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(800,4)
  -> INLINE: (806,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (807,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (808,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (808,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (812,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (814,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (814,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(805,10)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(807,38)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(813,10)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(800,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier9IntVectorltERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:800

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rsi rdi r8-r14]
        
    Routine temporaries
        Total         :      37
            Global    :      20
            Local     :      17
        Regenerable   :       1
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       6 [1.04e+00 ~ 2.0%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<int, std::allocator<int>>::_M_deallocate(std::_Vector_base<int, std::allocator<int>> *, std::_Vector_base<int, std::allocator<int>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator21t_sync_initial_createE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator21t_sync_initial_createE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator19t_sync_initial_commE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator19t_sync_initial_commE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator36t_barrier_after_error_bdry_fill_commE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator36t_barrier_after_error_bdry_fill_commE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator21t_coarsen_rich_extrapE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator21t_coarsen_rich_extrapE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator26t_init_level_fill_interiorE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator26t_init_level_fill_interiorE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator22t_init_level_fill_dataE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator22t_init_level_fill_dataE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator25t_init_level_create_schedE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator25t_init_level_create_schedE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator23t_initialize_level_dataE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator23t_initialize_level_dataE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator22t_error_bdry_fill_commE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator22t_error_bdry_fill_commE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator24t_error_bdry_fill_createE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator24t_error_bdry_fill_createE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN25RungeKuttaLevelIntegrator20s_initialize_handlerE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN25RungeKuttaLevelIntegrator20s_initialize_handlerE()) <compiler generated>

===========================================================================

Begin optimization report for: std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::_M_default_append(std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>> *, std::vector<SAMRAI::hier::ComponentSelector, std::allocator<SAMRAI::hier::ComponentSelector>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(555,9)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_construct.h(75,7) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(569,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/vector.tcc(534,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIN6SAMRAI4hier17ComponentSelectorESaIS2_EE17_M_default_appendEm] /usr/include/c++/4.8.5/bits/vector.tcc:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :     100
            Global    :      23
            Local     :      77
        Regenerable   :       5
        Spilled       :      11
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       6 [0.00e+00 ~ 0.0%]
            Writes    :       7 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       8 [2.04e+00 ~ 1.5%]
            Writes    :       7 [2.54e+00 ~ 1.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::_M_default_append(std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>> *, std::vector<std::shared_ptr<SAMRAI::xfer::RefineSchedule>, std::allocator<std::shared_ptr<SAMRAI::xfer::RefineSchedule>>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (733:17) and call:?1memset (733:17)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(555,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   remark #15527: loop was not vectorized: function call to ?1memset cannot be vectorized   [ /usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(569,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(534,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4xfer14RefineScheduleEESaIS4_EE17_M_default_appendEm] /usr/include/c++/4.8.5/bits/vector.tcc:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      58
            Global    :      28
            Local     :      30
        Regenerable   :       8
        Spilled       :       9
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [2.04e+00 ~ 1.3%]
            Writes    :       4 [2.04e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy>::~shared_ptr(std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4mesh24TagAndInitializeStrategyEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::_M_default_append(std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>> *, std::vector<std::vector<double, std::allocator<double>>, std::allocator<std::vector<double, std::allocator<double>>>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(555,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(569,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_start (160:9) and call:operator delete(void *) (110:9)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/vector.tcc(534,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIS_IdSaIdEESaIS1_EE17_M_default_appendEm] /usr/include/c++/4.8.5/bits/vector.tcc:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      60
            Global    :      25
            Local     :      35
        Regenerable   :       6
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       3 [1.50e+00 ~ 1.1%]
            Writes    :       3 [1.50e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::_M_default_append(std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>> *, std::vector<std::shared_ptr<SAMRAI::tbox::Statistic>, std::allocator<std::shared_ptr<SAMRAI::tbox::Statistic>>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (733:17) and call:?1memset (733:17)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(555,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   remark #15527: loop was not vectorized: function call to ?1memset cannot be vectorized   [ /usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(569,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(534,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4tbox9StatisticEESaIS4_EE17_M_default_appendEm] /usr/include/c++/4.8.5/bits/vector.tcc:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      58
            Global    :      28
            Local     :      30
        Regenerable   :       8
        Spilled       :       9
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [2.04e+00 ~ 1.3%]
            Writes    :       4 [2.04e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::_M_default_append(std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>> *, std::vector<std::shared_ptr<SAMRAI::hier::VariableContext>, std::allocator<std::shared_ptr<SAMRAI::hier::VariableContext>>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (733:17) and call:?1memset (733:17)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(555,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   remark #15527: loop was not vectorized: function call to ?1memset cannot be vectorized   [ /usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17) ]
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(569,8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(534,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4hier15VariableContextEESaIS4_EE17_M_default_appendEm] /usr/include/c++/4.8.5/bits/vector.tcc:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      58
            Global    :      28
            Local     :      30
        Regenerable   :       8
        Spilled       :       9
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [2.04e+00 ~ 1.3%]
            Writes    :       4 [2.04e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::_M_default_append(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(534,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEE17_M_default_appendEm] /usr/include/c++/4.8.5/bits/vector.tcc:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      56
            Global    :      28
            Local     :      28
        Regenerable   :      11
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       3 [8.34e-01 ~ 0.8%]
            Writes    :       3 [8.34e-01 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::initializeCallback()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::initializeCallback()) [1869] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4369,1)
  -> DELETED: (4374,30) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4374,30) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4374,30) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4374,30) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4375,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4375,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4375,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4376,30) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4376,30) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4376,30) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4376,30) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4377,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4377,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4377,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4378,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4378,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4378,28) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4378,28) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4379,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4379,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4379,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4380,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4380,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4380,42) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4380,42) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4381,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4381,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4381,19) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4382,30) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4382,30) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4382,30) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4382,30) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4383,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4383,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4383,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4384,35) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4384,35) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4384,35) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4384,35) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4385,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4385,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4385,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4386,29) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4386,29) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4386,29) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4386,29) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4387,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4387,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4387,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4388,31) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4388,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4388,31) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4388,31) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4389,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4389,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4389,19) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4390,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4390,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4390,28) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4390,28) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4391,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4391,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4391,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4392,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4392,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4392,32) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4392,32) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4393,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4393,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4393,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4394,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4394,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4394,32) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4394,32) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4395,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4395,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4395,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4396,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4396,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4396,36) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4396,36) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4397,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4397,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4397,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4398,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4398,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4398,28) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4398,28) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4399,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4399,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4399,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4400,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4400,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4400,36) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4400,36) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4401,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4401,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4401,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4402,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4402,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4402,28) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4402,28) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4403,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4403,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4403,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4404,31) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4404,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4404,31) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4404,31) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4405,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4405,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4405,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4406,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4406,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4406,38) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4406,38) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4407,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4407,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4407,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4408,31) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4408,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4408,31) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4408,31) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4409,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4409,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4409,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4410,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4410,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4410,17) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4410,17) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4411,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4411,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4411,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4412,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4412,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4412,27) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4412,27) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4413,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4413,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4413,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4414,20) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4414,20) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4414,20) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4414,20) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4415,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4415,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4415,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4416,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4416,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4416,25) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4416,25) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4417,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4417,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4417,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4418,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4418,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4418,21) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4418,21) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4419,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4419,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4419,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4420,34) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4420,34) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4420,34) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4420,34) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4421,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4421,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4421,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4422,24) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4422,24) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4422,24) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4422,24) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4423,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4423,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4423,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4424,26) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4424,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4424,26) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4424,26) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4425,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4425,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4425,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4426,22) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4426,22) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4426,22) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4426,22) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4427,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4427,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4427,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4428,23) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4428,23) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4428,23) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4428,23) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4429,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4429,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4429,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4430,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4430,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4430,27) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4430,27) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4431,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4431,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4431,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4432,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4432,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4432,25) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4432,25) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4433,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4433,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4433,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4434,30) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4434,30) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4434,30) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4434,30) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4435,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4435,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4435,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4436,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4436,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4436,28) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4436,28) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4437,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4437,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4437,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4438,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4438,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4438,27) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4438,27) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4439,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4439,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4439,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4440,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4440,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4440,25) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4440,25) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4441,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4441,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4441,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4442,30) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4442,30) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4442,30) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4442,30) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4443,18) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4443,18) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4443,18) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(4369,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator18initializeCallbackEv] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:4369

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r13-r14]
        
    Routine temporaries
        Total         :    1824
            Global    :     480
            Local     :    1344
        Regenerable   :     685
        Spilled       :       2
        
    Routine stack
        Variables     :     103 bytes*
            Reads     :     140 [7.00e+01 ~ 7.5%]
            Writes    :      70 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: coarsenDataForRichardsonExtrapolation(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (coarsenDataForRichardsonExtrapolation(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, bool)) [1870] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegrator37coarsenDataForRichardsonExtrapolationERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEiRKS0_INS2_10PatchLevelEEdb] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rdx rcx rsi rdi r8-r9 zmm0]
        
    Routine temporaries
        Total         :      28
            Global    :       0
            Local     :      28
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::coarsenDataForRichardsonExtrapolation(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::coarsenDataForRichardsonExtrapolation(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, bool)) [1871] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1217,1)
  -> INLINE: (1225,26) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1227,40) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1227,74) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1227,76) SAMRAI::hier::PatchHierarchy::getDim(const SAMRAI::hier::PatchHierarchy *) const
  -> INLINE: (1230,18) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (1230,20) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (1230,20) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1232,44) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1232,46) SAMRAI::hier::PatchHierarchy::getDim(const SAMRAI::hier::PatchHierarchy *) const
  -> INLINE: (1233,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1233,23) SAMRAI::hier::PatchLevel::getRatioToLevelZero(const SAMRAI::hier::PatchLevel *) const
  -> (1233,45) SAMRAI::hier::IntVector::operator<(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1235,23) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1235,25) SAMRAI::hier::PatchLevel::getRatioToLevelZero(const SAMRAI::hier::PatchLevel *) const
  -> (1235,47) SAMRAI::hier::IntVector::operator<(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1237,27) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1237,41) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1237,43) SAMRAI::hier::PatchLevel::getRatioToLevelZero(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1238,17) SAMRAI::hier::IntVector::operator/(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(614,11) SAMRAI::hier::IntVector::operator/=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (1238,29) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1238,31) SAMRAI::hier::PatchLevel::getRatioToLevelZero(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1245,27) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1245,29) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1245,42) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1245,44) SAMRAI::hier::PatchLevel::getRatioToLevelZero(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1246,17) SAMRAI::hier::IntVector::operator/(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(614,11) SAMRAI::hier::IntVector::operator/=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (1246,29) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1246,31) SAMRAI::hier::PatchLevel::getRatioToLevelZero(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1254,23) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (1254,35) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1254,37) SAMRAI::hier::PatchLevel::getRatioToLevelZero(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1255,13) SAMRAI::hier::IntVector::operator/(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(614,11) SAMRAI::hier::IntVector::operator/=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (1255,27) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1255,29) SAMRAI::hier::PatchLevel::getRatioToLevelZero(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1268,18) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1274,8) SAMRAI::hier::IntVector::ceilingDivide(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(706,12) SAMRAI::hier::IntVector::ceilingDivide(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (1276,53) SAMRAI::hier::IntVector::operator*(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(545,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (1278,17) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1278,19) SAMRAI::hier::PatchLevel::findConnectorWithTranspose(const SAMRAI::hier::PatchLevel *, const SAMRAI::hier::PatchLevel &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, SAMRAI::hier::ConnectorNotFoundAction, bool) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(962,14) SAMRAI::hier::PatchLevel::getBoxLevel(const SAMRAI::hier::PatchLevel *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(962,27) std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(962,29) SAMRAI::hier::BoxLevel::findConnectorWithTranspose(const SAMRAI::hier::BoxLevel *, const SAMRAI::hier::BoxLevel &, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &, SAMRAI::hier::ConnectorNotFoundAction, bool) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(962,56) std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(962,62) SAMRAI::hier::PatchLevel::getBoxLevel(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1279,9) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1286,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (1286,23) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
  -> INLINE: (1292,31) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1296,31) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1299,35) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (1299,37) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
  -> (1302,13) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
  -> INLINE: (1302,13) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1302,30) std::__shared_ptr<SAMRAI::xfer::CoarsenSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1302,32) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1302,32) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1304,27) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1308,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (1308,23) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
  -> INLINE: (1312,27) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1314,36) std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (1314,38) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
  -> INLINE: (1317,13) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1317,13) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
  -> INLINE: (1318,17) std::__shared_ptr<SAMRAI::xfer::CoarsenSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::CoarsenSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1318,19) std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1318,19) std::shared_ptr<SAMRAI::xfer::CoarsenSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::CoarsenSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1320,27) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1323,26) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1323,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1245,29)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1245,29)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1245,29)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1217,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator37coarsenDataForRichardsonExtrapolationERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEiRKS0_INS2_10PatchLevelEEdb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:1217

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     513
            Global    :     120
            Local     :     393
        Regenerable   :     125
        Spilled       :      18
        
    Routine stack
        Variables     :     504 bytes*
            Reads     :      46 [1.25e+01 ~ 4.8%]
            Writes    :      36 [9.48e+00 ~ 3.6%]
        Spills        :     104 bytes*
            Reads     :      45 [5.91e+00 ~ 2.3%]
            Writes    :      37 [6.05e+00 ~ 2.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: applyRichardsonExtrapolation(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, int, double, int, bool, bool, bool, bool, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (applyRichardsonExtrapolation(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, int, double, int, bool, bool, bool, bool, bool, bool, bool)) [1872] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegrator28applyRichardsonExtrapolationERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEEdidibbbbbbb] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rdx rcx rsi rdi r8-r9 zmm0-zmm1]
        
    Routine temporaries
        Total         :      31
            Global    :       0
            Local     :      31
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::applyRichardsonExtrapolation(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, int, double, int, bool, bool, bool, bool, bool, bool, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::applyRichardsonExtrapolation(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, double, int, double, int, bool, bool, bool, bool, bool, bool, bool)) [1873] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1148,1)
  -> INLINE: (1159,14) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1159,16) SAMRAI::hier::PatchLevel::getNextCoarserHierarchyLevelNumber(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1161,45) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1161,47) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1162,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (1162,13) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (1162,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1162,21) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1162,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1162,23) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (1163,12) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1165,55) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1168,13) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1182,13)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2e4_V$1b11.0.1816->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(35(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1162,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1148,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator28applyRichardsonExtrapolationERKSt10shared_ptrIN6SAMRAI4hier10PatchLevelEEdidibbbbbbb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:1148

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :      66
            Global    :      29
            Local     :      37
        Regenerable   :      15
        Spilled       :      14
        
    Routine stack
        Variables     :      32 bytes*
            Reads     :       5 [1.70e+01 ~ 7.2%]
            Writes    :       1 [5.00e+00 ~ 2.1%]
        Spills        :      64 bytes*
            Reads     :       8 [4.00e+01 ~ 17.0%]
            Writes    :       8 [7.50e+00 ~ 3.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: initializeLevelData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, bool, bool, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (initializeLevelData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, bool, bool, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, bool)) [1874] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [_ZThn8_N25RungeKuttaLevelIntegrator19initializeLevelDataERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEidbbRKS0_INS2_10PatchLevelEEb] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rdx rcx rsi rdi r8-r9 zmm0]
        
    Routine temporaries
        Total         :      28
            Global    :       0
            Local     :      28
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::initializeLevelData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, bool, bool, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::initializeLevelData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, int, double, bool, bool, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, bool)) [1875] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(359,1)
  -> INLINE: (367,18) std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchHierarchy, __gnu_cxx::_S_atomic> *) const
  -> (367,20) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
  -> INLINE: (367,20) SAMRAI::hier::PatchHierarchy::getPatchLevel(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const SAMRAI::hier::PatchHierarchy *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchLevel>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchLevel>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchHierarchy.h:(495,28) std::shared_ptr<SAMRAI::hier::PatchLevel>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (369,38) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (369,40) SAMRAI::hier::PatchLevel::getBoxLevel(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (369,53) std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (369,55) SAMRAI::hier::BoxLevel::getMPI(const SAMRAI::hier::BoxLevel *) const
  -> INLINE: (371,28) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (381,14) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (381,16) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
  -> INLINE: (382,14) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (382,16) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
  -> INLINE: (386,14) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (386,16) SAMRAI::hier::PatchLevel::setTime(SAMRAI::hier::PatchLevel *, double, const SAMRAI::hier::ComponentSelector &)
  -> INLINE: (392,10) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (392,12) SAMRAI::hier::PatchLevel::getBoxLevel(const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (392,25) std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::BoxLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (392,27) SAMRAI::hier::BoxLevel::getMPI(const SAMRAI::hier::BoxLevel *) const
  -> INLINE: (394,31) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (396,34) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (398,49) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (399,29) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (399,31) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
  -> (404,17) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
  -> INLINE: (404,17) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (408,34) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (410,27) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (412,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (413,14) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (415,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (417,27) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (418,5) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (424,49) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (424,51) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (425,17) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (425,17) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (425,25) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (425,25) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (425,27) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (425,27) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (426,16) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (428,59) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (431,16) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::begin(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (433,33) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (433,33) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator!=(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::_Self &) const
  -> INLINE: (433,36) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (433,36) std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>>::end(std::list<std::shared_ptr<SAMRAI::hier::Variable>, std::allocator<std::shared_ptr<SAMRAI::hier::Variable>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (436,21) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INDIRECT- (VIRTUAL): (437,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2cd_V$1a2a.0.1800->__vptr_V$1106 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
  -> INLINE: (439,21) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator*(const std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *) const
  -> INDIRECT- (VIRTUAL): (440,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2ce_V$1a2b.0.1800->__vptr_V$1106 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
  -> INLINE: (442,22) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (442,24) SAMRAI::hier::Patch::setPatchData(SAMRAI::hier::Patch *, int, const std::shared_ptr<SAMRAI::hier::PatchData> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(219,19) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(219,24) std::shared_ptr<SAMRAI::hier::PatchData>::operator=(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (442,24) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (442,52) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (442,54) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(160,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (444,29) std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>>::operator++(std::_List_iterator<std::shared_ptr<SAMRAI::hier::Variable>> *, int)
  -> INLINE: (455,27) RungeKuttaPatchStrategy::useGhostCellImmersedBoundaryMethod(const RungeKuttaPatchStrategy *) const
  -> INLINE: (458,14) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (458,16) SAMRAI::hier::PatchLevel::allocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &, double)
  -> INLINE: (462,49) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (463,37) std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> (463,39) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
  -> (465,17) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
  -> INLINE: (465,17) std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory>::shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineTransactionFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (467,27) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (469,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (470,30) std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::xfer::RefineSchedule, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (472,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (473,5) std::shared_ptr<SAMRAI::xfer::RefineSchedule>::~shared_ptr(std::shared_ptr<SAMRAI::xfer::RefineSchedule> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (476,27) RungeKuttaPatchStrategy::setDataContext(RungeKuttaPatchStrategy *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(742,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (479,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (481,44) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (481,46) SAMRAI::hier::PatchLevel::begin(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (481,58) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (481,58) SAMRAI::hier::PatchLevel::Iterator::operator!=(const SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel::Iterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1201,28) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::_Self &) const
  -> INLINE: (481,66) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (481,66) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (481,68) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (481,68) SAMRAI::hier::PatchLevel::end(SAMRAI::hier::PatchLevel::Iterator *, const SAMRAI::hier::PatchLevel *) const
  -> INLINE: (481,76) SAMRAI::hier::PatchLevel::Iterator::operator++(SAMRAI::hier::PatchLevel::Iterator *, SAMRAI::hier::PatchLevel::Iterator *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1222,10) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (483,55) SAMRAI::hier::PatchLevel::Iterator::operator*(const SAMRAI::hier::PatchLevel::Iterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchLevel.h:(1172,27) std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type>::operator->(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_type, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type, std::_Select1st<std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::value_type>, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::key_compare, std::map<SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>, std::less<SAMRAI::hier::BoxId>, std::allocator<std::pair<const SAMRAI::hier::BoxId, std::shared_ptr<SAMRAI::hier::Patch>>>>::_Pair_alloc_type>::value_type> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (485,14) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (488,13) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (491,31) RungeKuttaPatchStrategy::useGhostCellImmersedBoundaryMethod(const RungeKuttaPatchStrategy *) const
  -> INDIRECT- (VIRTUAL): (491,31)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2d2_V$1a34.0.1800->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(12(SI32)) * 8(I64))))
  -> INLINE: (493,14) std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::Patch, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (495,23) RungeKuttaPatchStrategy::clearDataContext(RungeKuttaPatchStrategy *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/algs/patch_strategy/RungeKuttaPatchStrategy.hpp:(751,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (497,27) RungeKuttaPatchStrategy::useGhostCellImmersedBoundaryMethod(const RungeKuttaPatchStrategy *) const
  -> INDIRECT- (VIRTUAL): (500,49)  RungeKuttaLevelIntegrator::copyTimeDependentData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) (1831)
  -> INDIRECT- (VIRTUAL): (501,42)  RungeKuttaLevelIntegrator::copyNoFillData(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::hier::PatchLevel> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) (1832)
  -> INLINE: (503,14) std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::hier::PatchLevel, __gnu_cxx::_S_atomic> *) const
  -> (503,16) SAMRAI::hier::PatchLevel::deallocatePatchData(SAMRAI::hier::PatchLevel *, const SAMRAI::hier::ComponentSelector &)
  -> INLINE: (507,31) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (509,28) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (509,30) std::shared_ptr<SAMRAI::hier::PatchLevel>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchLevel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(425,17)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(433,13)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(481,58)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(359,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator19initializeLevelDataERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEEidbbRKS0_INS2_10PatchLevelEEb] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:359

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     445
            Global    :     104
            Local     :     341
        Regenerable   :      95
        Spilled       :      14
        
    Routine stack
        Variables     :     184 bytes*
            Reads     :      35 [2.70e+01 ~ 4.2%]
            Writes    :      21 [1.47e+01 ~ 2.3%]
        Spills        :      72 bytes*
            Reads     :      22 [3.50e+01 ~ 5.5%]
            Writes    :      11 [5.62e+00 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: RungeKuttaLevelIntegrator::initializeLevelIntegrator(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::mesh::GriddingAlgorithmStrategy> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RungeKuttaLevelIntegrator::initializeLevelIntegrator(RungeKuttaLevelIntegrator *, const std::shared_ptr<SAMRAI::mesh::GriddingAlgorithmStrategy> &)) [1876] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1340,1)
  -> INLINE: (1341,20) std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm>::~shared_ptr(std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1341,20) std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm>::operator=(std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm> *, std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1342,9) std::static_pointer_cast<SAMRAI::mesh::GriddingAlgorithm, SAMRAI::mesh::GriddingAlgorithmStrategy>(std::shared_ptr<SAMRAI::mesh::GriddingAlgorithm> *, const std::shared_ptr<SAMRAI::mesh::GriddingAlgorithmStrategy> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1349,5) std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy>::~shared_ptr(std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy> *)
  -> (1349,5) std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy>::~shared_ptr(std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy> *)
  -> INDIRECT- (VIRTUAL): (1349,24)  EXPR_CONV.SI64.P64(*((SI64*) (__$U27f_V$192f.0.1787->__vptr_V$944_2.83 + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (1349,24) std::__shared_ptr<SAMRAI::mesh::GriddingAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::mesh::GriddingAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1349,55)  EXPR_CONV.SI64.P64(*((SI64*) (__$U280_V$1930.0.1787->__vptr_V$1948 + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (1349,55) std::__shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1349,82) std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy>::~shared_ptr(std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1349,82) std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy>::~shared_ptr(std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1350,24) std::__shared_ptr<SAMRAI::mesh::GriddingAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::mesh::GriddingAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1350,24)  EXPR_CONV.SI64.P64(*((SI64*) (__$U282_V$1932.0.1787->__vptr_V$944_2.83 + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (1350,55) std::__shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1350,55)  EXPR_CONV.SI64.P64(*((SI64*) (__$U283_V$1933.0.1787->__vptr_V$1948 + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (1352,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1352,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1352,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1352,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1352,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1352,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1352,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1352,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1352,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1352,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1352,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1352,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1352,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1352,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1352,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1352,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1352,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1360,5) std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy>::~shared_ptr(std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy> *)
  -> (1360,5) std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy>::~shared_ptr(std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy> *)
  -> INDIRECT- (VIRTUAL): (1360,24)  EXPR_CONV.SI64.P64(*((SI64*) (__$U287_V$1937.0.1787->__vptr_V$944_2.83 + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (1360,24) std::__shared_ptr<SAMRAI::mesh::GriddingAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::mesh::GriddingAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1360,55) std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy>::~shared_ptr(std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1360,55) std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy>::~shared_ptr(std::shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (1360,55)  EXPR_CONV.SI64.P64(*((SI64*) (__$U288_V$1938.0.1787->__vptr_V$1948 + EXPR_CONV.SI32.I64(9(SI32)) * 8(I64))))
  -> INLINE: (1360,55) std::__shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1361,24) std::__shared_ptr<SAMRAI::mesh::GriddingAlgorithm, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::mesh::GriddingAlgorithm, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1361,24)  EXPR_CONV.SI64.P64(*((SI64*) (__$U289_V$1939.0.1787->__vptr_V$944_2.83 + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (1361,55) std::__shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::mesh::TagAndInitializeStrategy, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1361,55)  EXPR_CONV.SI64.P64(*((SI64*) (__$U28a_V$193a.0.1787->__vptr_V$1948 + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (1364,15) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, std::shared_ptr<SAMRAI::hier::VariableContext> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1364,15) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1364,15) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1364,15) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1364,67) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1364,67) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1364,67) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (1364,67)  EXPR_CONV.SI64.P64(*((SI64*) (__$U293_V$194d.0.1787->__vptr_V$1106 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (1367,46)  EXPR_CONV.SI64.P64(*((SI64*) ((this_80711_V$1929.0.1787->d_patch_strategy_V$10c)->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (1369,62)  EXPR_CONV.SI64.P64(*((SI64*) (__$U28c_V$193c.0.1787->__vptr_V$492_2.84 + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (1369,62) std::__shared_ptr<SAMRAI::mesh::GriddingAlgorithm, __gnu_cxx::_S_atomic>::get(const std::__shared_ptr<SAMRAI::mesh::GriddingAlgorithm, __gnu_cxx::_S_atomic> *) const


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp(1340,1):remark #34051: REGISTER ALLOCATION : [_ZN25RungeKuttaLevelIntegrator25initializeLevelIntegratorERKSt10shared_ptrIN6SAMRAI4mesh25GriddingAlgorithmStrategyEE] /home/akula/HAMeRS_IB/HAMeRS/src/algs/integrator/RungeKuttaLevelIntegrator.cpp:1340

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     561
            Global    :     158
            Local     :     403
        Regenerable   :     184
        Spilled       :       7
        
    Routine stack
        Variables     :     512 bytes*
            Reads     :      46 [1.76e+01 ~ 6.9%]
            Writes    :      65 [3.09e+01 ~ 12.0%]
        Spills        :      16 bytes*
            Reads     :       2 [1.30e-01 ~ 0.1%]
            Writes    :       2 [1.30e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
