Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: ipow(Real, const int &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (ipow(Real, const int &)) /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(10,1)

===========================================================================

Begin optimization report for: computeLocalSigma(Real &, Real **, const int &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (computeLocalSigma(Real &, Real **, const int &)) /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(28,1)

===========================================================================

Begin optimization report for: computeLocalBeta(Real &, Real &, Real &, Real &, Real **, const int &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (computeLocalBeta(Real &, Real &, Real &, Real &, Real **, const int &)) /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(54,1)

===========================================================================

Begin optimization report for: computeLocalBetaTilde(Real &, Real &, Real &, Real &, Real **, const int &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (computeLocalBetaTilde(Real &, Real &, Real &, Real &, Real **, const int &)) /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(97,1)

===========================================================================

Begin optimization report for: performLocalWENOInterpolationMinus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (performLocalWENOInterpolationMinus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)) /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(141,1)

===========================================================================

Begin optimization report for: performLocalWENOInterpolationPlus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (performLocalWENOInterpolationPlus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)) /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(237,1)

===========================================================================

Begin optimization report for: ConvectiveFluxReconstructor::~ConvectiveFluxReconstructor(ConvectiveFluxReconstructor *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ConvectiveFluxReconstructor::~ConvectiveFluxReconstructor(ConvectiveFluxReconstructor *)) [11] /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/ConvectiveFluxReconstructor.hpp(44,48)
  -> INLINE: (44,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (44,49) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (44,49) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (44,49) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/ConvectiveFluxReconstructor.hpp(44,48):remark #34051: REGISTER ALLOCATION : [_ZN27ConvectiveFluxReconstructorD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/ConvectiveFluxReconstructor.hpp:44

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      63
            Global    :      29
            Local     :      34
        Regenerable   :      14
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: ConvectiveFluxReconstructor::~ConvectiveFluxReconstructor(ConvectiveFluxReconstructor *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ConvectiveFluxReconstructor::~ConvectiveFluxReconstructor(ConvectiveFluxReconstructor *const)) [12] /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/ConvectiveFluxReconstructor.hpp(44,17)
  -> INLINE: (44,17) ConvectiveFluxReconstructor::~ConvectiveFluxReconstructor(ConvectiveFluxReconstructor *)
    -> INLINE: (44,49) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (44,49) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (44,49) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (44,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/ConvectiveFluxReconstructor.hpp(44,17):remark #34051: REGISTER ALLOCATION : [_ZN27ConvectiveFluxReconstructorD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/ConvectiveFluxReconstructor.hpp:44

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      64
            Global    :      29
            Local     :      35
        Regenerable   :      14
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: ConvectiveFluxReconstructor::~ConvectiveFluxReconstructor(ConvectiveFluxReconstructor *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (ConvectiveFluxReconstructor::~ConvectiveFluxReconstructor(ConvectiveFluxReconstructor *const)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/ConvectiveFluxReconstructor.hpp(44,17)

===========================================================================

Begin optimization report for: ConvectiveFluxReconstructorWCNS56::~ConvectiveFluxReconstructorWCNS56(ConvectiveFluxReconstructorWCNS56 *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (ConvectiveFluxReconstructorWCNS56::~ConvectiveFluxReconstructorWCNS56(ConvectiveFluxReconstructorWCNS56 *const)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS56-HLLC-HLL.hpp(20,17)

===========================================================================

Begin optimization report for: ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL(ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL(ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &)) [15] /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(338,1)
  -> INLINE: (337,13) ConvectiveFluxReconstructorWCNS56::~ConvectiveFluxReconstructorWCNS56(ConvectiveFluxReconstructorWCNS56 *const)
    -> /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS56-HLLC-HLL.hpp:(20,17) ConvectiveFluxReconstructorWCNS56::~ConvectiveFluxReconstructorWCNS56(ConvectiveFluxReconstructorWCNS56 *)
  -> INLINE: (343,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (343,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (343,54) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (344,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (344,31) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (344,31) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (344,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U20_V$807.0.165->__vptr_V$812 + EXPR_CONV.SI32.I64(66(SI32)) * 8(I64))))
  -> INLINE: (345,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (345,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (345,54) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (346,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (346,31) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (346,31) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (346,47)  EXPR_CONV.SI64.P64(*((SI64*) (__$U21_V$808.0.165->__vptr_V$812 + EXPR_CONV.SI32.I64(66(SI32)) * 8(I64))))
  -> INLINE: (348,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (348,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (348,54) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (349,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (349,31) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (349,31) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (349,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U23_V$80a.0.165->__vptr_V$812 + EXPR_CONV.SI32.I64(66(SI32)) * 8(I64))))
  -> INLINE: (350,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (350,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (350,54) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (351,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (351,31) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (351,31) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (351,47)  EXPR_CONV.SI64.P64(*((SI64*) (__$U24_V$80b.0.165->__vptr_V$812 + EXPR_CONV.SI32.I64(66(SI32)) * 8(I64))))
  -> INLINE: (353,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (353,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (353,54) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (354,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (354,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (354,28) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (354,42)  EXPR_CONV.SI64.P64(*((SI64*) (__$U26_V$80d.0.165->__vptr_V$812 + EXPR_CONV.SI32.I64(50(SI32)) * 8(I64))))
  -> INLINE: (355,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (355,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (355,54) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (356,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (356,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (356,28) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (356,44)  EXPR_CONV.SI64.P64(*((SI64*) (__$U27_V$80e.0.165->__vptr_V$812 + EXPR_CONV.SI32.I64(50(SI32)) * 8(I64))))
  -> INLINE: (358,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (358,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (358,62) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (359,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (359,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (359,28) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (359,50)  EXPR_CONV.SI64.P64(*((SI64*) (__$U29_V$810.0.165->__vptr_V$812 + EXPR_CONV.SI32.I64(50(SI32)) * 8(I64))))
  -> DELETED: (360,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (360,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (360,62) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (361,28) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (361,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (361,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (361,52)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2a_V$811.0.165->__vptr_V$812 + EXPR_CONV.SI32.I64(50(SI32)) * 8(I64))))


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(338,1):remark #34051: REGISTER ALLOCATION : [_ZN44ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLLC1ERKSsRKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKiRKN10FLOW_MODEL4TYPEERKS7_I9FlowModelERKS7_INS3_8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp:338

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8-r9 r14-r15 zmm0]
        
    Routine temporaries
        Total         :     360
            Global    :      98
            Local     :     262
        Regenerable   :     117
        Spilled       :       2
        
    Routine stack
        Variables     :      57 bytes*
            Reads     :      17 [8.00e+00 ~ 4.7%]
            Writes    :      20 [4.00e+00 ~ 2.4%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word *, int)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/ext/atomicity.h(79,3):remark #34051: REGISTER ALLOCATION : [_ZN17_INTERNAL67863f339__gnu_cxx27__exchange_and_add_dispatchEPii] /usr/include/c++/4.8.5/ext/atomicity.h:79

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      16
            Global    :       8
            Local     :       8
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: ConvectiveFluxReconstructorWCNS56::~ConvectiveFluxReconstructorWCNS56(ConvectiveFluxReconstructorWCNS56 *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ConvectiveFluxReconstructorWCNS56::~ConvectiveFluxReconstructorWCNS56(ConvectiveFluxReconstructorWCNS56 *)) [20] /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS56-HLLC-HLL.hpp(20,54)
  -> INLINE: (20,55) ConvectiveFluxReconstructor::~ConvectiveFluxReconstructor(ConvectiveFluxReconstructor *const)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/ConvectiveFluxReconstructor.hpp:(44,17) ConvectiveFluxReconstructor::~ConvectiveFluxReconstructor(ConvectiveFluxReconstructor *)
      -> INLINE: (44,49) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (44,49) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (44,49) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (44,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,55) std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::~vector(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS56-HLLC-HLL.hpp(20,54):remark #34051: REGISTER ALLOCATION : [_ZN33ConvectiveFluxReconstructorWCNS56D1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS56-HLLC-HLL.hpp:20

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      65
            Global    :      30
            Local     :      35
        Regenerable   :      14
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::~_Vector_base(std::_Vector_base<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIN8EQN_FORM4TYPEESaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL(ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL(ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &)) [23] /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(322,47)
  -> INLINE: (322,47) ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL(ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const FLOW_MODEL::TYPE &, const std::shared_ptr<FlowModel> &, const std::shared_ptr<SAMRAI::tbox::Database> &)
    -> INLINE: (337,13) ConvectiveFluxReconstructorWCNS56::~ConvectiveFluxReconstructorWCNS56(ConvectiveFluxReconstructorWCNS56 *const)
      -> /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS56-HLLC-HLL.hpp:(20,17) ConvectiveFluxReconstructorWCNS56::~ConvectiveFluxReconstructorWCNS56(ConvectiveFluxReconstructorWCNS56 *)
    -> DELETED: (343,5) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (343,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (343,54) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (344,31) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: (344,31) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (344,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): (344,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U20_V$807.0.165.1930->__vptr_V$812 + EXPR_CONV.SI32.I64(66(SI32)) * 8(I64))))
    -> DELETED: (345,5) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (345,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (345,54) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (346,31) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: (346,31) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (346,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): (346,47)  EXPR_CONV.SI64.P64(*((SI64*) (__$U21_V$808.0.165.1930->__vptr_V$812 + EXPR_CONV.SI32.I64(66(SI32)) * 8(I64))))
    -> DELETED: (348,5) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (348,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (348,54) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (349,31) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: (349,31) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (349,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): (349,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U23_V$80a.0.165.1930->__vptr_V$812 + EXPR_CONV.SI32.I64(66(SI32)) * 8(I64))))
    -> DELETED: (350,5) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (350,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (350,54) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (351,31) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: (351,31) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (351,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): (351,47)  EXPR_CONV.SI64.P64(*((SI64*) (__$U24_V$80b.0.165.1930->__vptr_V$812 + EXPR_CONV.SI32.I64(66(SI32)) * 8(I64))))
    -> DELETED: (353,5) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (353,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (353,54) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (354,28) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: (354,28) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (354,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): (354,42)  EXPR_CONV.SI64.P64(*((SI64*) (__$U26_V$80d.0.165.1930->__vptr_V$812 + EXPR_CONV.SI32.I64(50(SI32)) * 8(I64))))
    -> DELETED: (355,5) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (355,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (355,54) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (356,28) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: (356,28) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (356,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): (356,44)  EXPR_CONV.SI64.P64(*((SI64*) (__$U27_V$80e.0.165.1930->__vptr_V$812 + EXPR_CONV.SI32.I64(50(SI32)) * 8(I64))))
    -> DELETED: (358,5) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (358,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (358,62) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (359,28) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: (359,28) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (359,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): (359,50)  EXPR_CONV.SI64.P64(*((SI64*) (__$U29_V$810.0.165.1930->__vptr_V$812 + EXPR_CONV.SI32.I64(50(SI32)) * 8(I64))))
    -> INLINE: (360,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: (360,5) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (360,62) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> DELETED: (361,28) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (361,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (361,28) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): (361,52)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2a_V$811.0.165.1930->__vptr_V$812 + EXPR_CONV.SI32.I64(50(SI32)) * 8(I64))))


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(322,47):remark #34051: REGISTER ALLOCATION : [_ZN44ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLLC2ERKSsRKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKiRKN10FLOW_MODEL4TYPEERKS7_I9FlowModelERKS7_INS3_8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp:322

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8-r9 r14-r15 zmm0]
        
    Routine temporaries
        Total         :     360
            Global    :      98
            Local     :     262
        Regenerable   :     117
        Spilled       :       2
        
    Routine stack
        Variables     :      57 bytes*
            Reads     :      17 [8.00e+00 ~ 4.7%]
            Writes    :      20 [4.00e+00 ~ 2.4%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::~ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL(ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::~ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL(ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *)) [24] /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.hpp(18,57)
  -> INLINE: (18,58) ConvectiveFluxReconstructorWCNS56::~ConvectiveFluxReconstructorWCNS56(ConvectiveFluxReconstructorWCNS56 *const)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS56-HLLC-HLL.hpp:(20,17) ConvectiveFluxReconstructorWCNS56::~ConvectiveFluxReconstructorWCNS56(ConvectiveFluxReconstructorWCNS56 *)
      -> INLINE: (20,55) std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::~vector(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (20,55) ConvectiveFluxReconstructor::~ConvectiveFluxReconstructor(ConvectiveFluxReconstructor *const)
        -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/ConvectiveFluxReconstructor.hpp:(44,17) ConvectiveFluxReconstructor::~ConvectiveFluxReconstructor(ConvectiveFluxReconstructor *)
          -> INLINE: (44,49) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
             {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
          -> INLINE: (44,49) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
             {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
          -> INLINE: (44,49) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
             {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
          -> INLINE: (44,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
             {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.hpp(18,57):remark #34051: REGISTER ALLOCATION : [_ZN44ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLLD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.hpp:18

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      65
            Global    :      30
            Local     :      35
        Regenerable   :      14
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::~ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL(ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::~ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL(ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *const)) [25] /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.hpp(18,9)
  -> INLINE: (18,9) ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::~ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL(ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *)
    -> INLINE: (18,58) ConvectiveFluxReconstructorWCNS56::~ConvectiveFluxReconstructorWCNS56(ConvectiveFluxReconstructorWCNS56 *const)
      -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS56-HLLC-HLL.hpp:(20,17) ConvectiveFluxReconstructorWCNS56::~ConvectiveFluxReconstructorWCNS56(ConvectiveFluxReconstructorWCNS56 *)
        -> INLINE: (20,55) std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::~vector(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)
           {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
        -> INLINE: (20,55) ConvectiveFluxReconstructor::~ConvectiveFluxReconstructor(ConvectiveFluxReconstructor *const)
          -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/ConvectiveFluxReconstructor.hpp:(44,17) ConvectiveFluxReconstructor::~ConvectiveFluxReconstructor(ConvectiveFluxReconstructor *)
            -> INLINE: (44,49) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
               {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
            -> INLINE: (44,49) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
               {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
            -> INLINE: (44,49) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
               {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
            -> INLINE: (44,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
               {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.hpp(18,9):remark #34051: REGISTER ALLOCATION : [_ZN44ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLLD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.hpp:18

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      66
            Global    :      30
            Local     :      36
        Regenerable   :      14
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::printClassData(const ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *, std::ostream &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::printClassData(const ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *, std::ostream &) const) [26] /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(371,1)
  -> (372,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (373,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (375,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (377,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (378,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, const void *)
  -> (379,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (380,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (381,8) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (382,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (383,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (385,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (386,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (388,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (389,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (390,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (391,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (392,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (393,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (394,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(371,1):remark #34051: REGISTER ALLOCATION : [_ZNK44ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL14printClassDataERSo] /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp:371

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rsi rdi r14-r15 zmm0]
        
    Routine temporaries
        Total         :      91
            Global    :      35
            Local     :      56
        Regenerable   :      23
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::char_traits<char>::length(const std::char_traits<char>::char_type *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(259,7):remark #34051: REGISTER ALLOCATION : [_ZNSt11char_traitsIcE6lengthEPKc] /usr/include/c++/4.8.5/bits/char_traits.h:259

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       7
            Local     :       5
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::putToRestart(const ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::putToRestart(const ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [36] /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(405,1)
  -> INLINE: (406,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (406,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (406,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (406,28) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (406,44) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (406,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (406,44)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2d_V$835.0.168->__vptr_V$812 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> INLINE: (407,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (407,28) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (407,28) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (407,28) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (407,44) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (407,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (407,44)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2e_V$836.0.168->__vptr_V$812 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> INLINE: (408,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (408,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (408,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (408,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (408,41) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (408,41) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (408,41)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2f_V$837.0.168->__vptr_V$812 + EXPR_CONV.SI32.I64(46(SI32)) * 8(I64))))
  -> INLINE: (409,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (409,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (409,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (409,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (409,49) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (409,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (409,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U30_V$838.0.168->__vptr_V$812 + EXPR_CONV.SI32.I64(46(SI32)) * 8(I64))))


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(405,1):remark #34051: REGISTER ALLOCATION : [_ZNK44ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL12putToRestartERKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp:405

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :     177
            Global    :      47
            Local     :     130
        Regenerable   :      55
        Spilled       :       3
        
    Routine stack
        Variables     :      25 bytes*
            Reads     :      12 [4.00e+00 ~ 4.6%]
            Writes    :       8 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::performWENOInterpolation(ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL::performWENOInterpolation(ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>> &)) [37] /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(421,1)
  -> INLINE: (433,58) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (433,61) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (433,63) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (433,72) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (459,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (465,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (473,32) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (473,32) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (474,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (478,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (478,44) std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::operator[](const std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>> *, std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::size_type) const
  -> INLINE: (478,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (478,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (478,53) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (481,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (481,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (481,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (489,17) performLocalWENOInterpolationMinus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)
    -> INLINE: (148,5) computeLocalSigma(Real &, Real **, const int &)
      -> INLINE: (37,26) std::abs(double)
      -> INLINE: (37,55) std::abs(double)
      -> INLINE: (37,75) std::abs(double)
      -> INLINE: (38,26) std::abs(double)
      -> INLINE: (38,55) std::abs(double)
      -> INLINE: (38,75) std::abs(double)
      -> INLINE: (40,13) std::max<Real>(const Real &, const Real &)
    -> INLINE: (156,5) computeLocalBeta(Real &, Real &, Real &, Real &, Real **, const int &)
    -> INLINE: (164,18) std::abs(double)
    -> INLINE: (166,50) ipow(Real, const int &)
    -> INLINE: (167,49) ipow(Real, const int &)
    -> INLINE: (168,50) ipow(Real, const int &)
    -> INLINE: (183,18) std::abs(double)
    -> INLINE: (185,37) ipow(Real, const int &)
    -> INLINE: (186,38) ipow(Real, const int &)
    -> INLINE: (187,38) ipow(Real, const int &)
    -> INLINE: (188,37) ipow(Real, const int &)
  -> (491,29) std::vector<Real *, std::allocator<Real *>>::data(std::vector<Real *, std::allocator<Real *>> *)
  -> (498,9) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (502,32) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (502,32) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (503,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (507,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (507,44) std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::operator[](const std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>> *, std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::size_type) const
  -> INLINE: (507,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (507,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (507,53) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (510,39) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (510,43) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (510,45) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (518,17) performLocalWENOInterpolationPlus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)
    -> INLINE: (244,5) computeLocalSigma(Real &, Real **, const int &)
      -> INLINE: (37,26) std::abs(double)
      -> INLINE: (37,55) std::abs(double)
      -> INLINE: (37,75) std::abs(double)
      -> INLINE: (38,26) std::abs(double)
      -> INLINE: (38,55) std::abs(double)
      -> INLINE: (38,75) std::abs(double)
      -> INLINE: (40,13) std::max<Real>(const Real &, const Real &)
    -> INLINE: (252,5) computeLocalBetaTilde(Real &, Real &, Real &, Real &, Real **, const int &)
    -> INLINE: (260,24) std::abs(double)
    -> INLINE: (262,56) ipow(Real, const int &)
    -> INLINE: (263,55) ipow(Real, const int &)
    -> INLINE: (264,56) ipow(Real, const int &)
    -> INLINE: (279,24) std::abs(double)
    -> INLINE: (281,43) ipow(Real, const int &)
    -> INLINE: (282,44) ipow(Real, const int &)
    -> INLINE: (283,44) ipow(Real, const int &)
    -> INLINE: (284,43) ipow(Real, const int &)
  -> (520,29) std::vector<Real *, std::allocator<Real *>>::data(std::vector<Real *, std::allocator<Real *>> *)
  -> (527,9) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (530,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (536,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (537,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (545,32) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (545,32) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (546,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (550,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (550,44) std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::operator[](const std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>> *, std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::size_type) const
  -> INLINE: (550,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (550,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (550,53) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (553,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (553,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (553,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (564,21) performLocalWENOInterpolationMinus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)
    -> INLINE: (148,5) computeLocalSigma(Real &, Real **, const int &)
      -> INLINE: (37,26) std::abs(double)
      -> INLINE: (37,55) std::abs(double)
      -> INLINE: (37,75) std::abs(double)
      -> INLINE: (38,26) std::abs(double)
      -> INLINE: (38,55) std::abs(double)
      -> INLINE: (38,75) std::abs(double)
      -> INLINE: (40,13) std::max<Real>(const Real &, const Real &)
    -> INLINE: (156,5) computeLocalBeta(Real &, Real &, Real &, Real &, Real **, const int &)
    -> INLINE: (164,18) std::abs(double)
    -> INLINE: (166,50) ipow(Real, const int &)
    -> INLINE: (167,49) ipow(Real, const int &)
    -> INLINE: (168,50) ipow(Real, const int &)
    -> INLINE: (183,18) std::abs(double)
    -> INLINE: (185,37) ipow(Real, const int &)
    -> INLINE: (186,38) ipow(Real, const int &)
    -> INLINE: (187,38) ipow(Real, const int &)
    -> INLINE: (188,37) ipow(Real, const int &)
  -> (566,33) std::vector<Real *, std::allocator<Real *>>::data(std::vector<Real *, std::allocator<Real *>> *)
  -> (574,9) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (578,32) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (578,32) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (579,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (583,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (583,44) std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::operator[](const std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>> *, std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::size_type) const
  -> INLINE: (583,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (583,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (583,53) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (586,39) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (586,43) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (586,45) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (597,21) performLocalWENOInterpolationPlus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)
    -> INLINE: (244,5) computeLocalSigma(Real &, Real **, const int &)
      -> INLINE: (37,26) std::abs(double)
      -> INLINE: (37,55) std::abs(double)
      -> INLINE: (37,75) std::abs(double)
      -> INLINE: (38,26) std::abs(double)
      -> INLINE: (38,55) std::abs(double)
      -> INLINE: (38,75) std::abs(double)
      -> INLINE: (40,13) std::max<Real>(const Real &, const Real &)
    -> INLINE: (252,5) computeLocalBetaTilde(Real &, Real &, Real &, Real &, Real **, const int &)
    -> INLINE: (260,24) std::abs(double)
    -> INLINE: (262,56) ipow(Real, const int &)
    -> INLINE: (263,55) ipow(Real, const int &)
    -> INLINE: (264,56) ipow(Real, const int &)
    -> INLINE: (279,24) std::abs(double)
    -> INLINE: (281,43) ipow(Real, const int &)
    -> INLINE: (282,44) ipow(Real, const int &)
    -> INLINE: (283,44) ipow(Real, const int &)
    -> INLINE: (284,43) ipow(Real, const int &)
  -> (599,33) std::vector<Real *, std::allocator<Real *>>::data(std::vector<Real *, std::allocator<Real *>> *)
  -> (607,9) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (615,32) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (615,32) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (616,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (620,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (620,44) std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::operator[](const std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>> *, std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::size_type) const
  -> INLINE: (620,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (620,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (620,53) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (623,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (623,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (623,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (634,21) performLocalWENOInterpolationMinus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)
    -> INLINE: (148,5) computeLocalSigma(Real &, Real **, const int &)
      -> INLINE: (37,26) std::abs(double)
      -> INLINE: (37,55) std::abs(double)
      -> INLINE: (37,75) std::abs(double)
      -> INLINE: (38,26) std::abs(double)
      -> INLINE: (38,55) std::abs(double)
      -> INLINE: (38,75) std::abs(double)
      -> INLINE: (40,13) std::max<Real>(const Real &, const Real &)
    -> INLINE: (156,5) computeLocalBeta(Real &, Real &, Real &, Real &, Real **, const int &)
    -> INLINE: (164,18) std::abs(double)
    -> INLINE: (166,50) ipow(Real, const int &)
    -> INLINE: (167,49) ipow(Real, const int &)
    -> INLINE: (168,50) ipow(Real, const int &)
    -> INLINE: (183,18) std::abs(double)
    -> INLINE: (185,37) ipow(Real, const int &)
    -> INLINE: (186,38) ipow(Real, const int &)
    -> INLINE: (187,38) ipow(Real, const int &)
    -> INLINE: (188,37) ipow(Real, const int &)
  -> (636,33) std::vector<Real *, std::allocator<Real *>>::data(std::vector<Real *, std::allocator<Real *>> *)
  -> (644,9) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (648,32) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (648,32) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (649,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (653,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (653,44) std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::operator[](const std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>> *, std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::size_type) const
  -> INLINE: (653,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (653,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (653,53) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (656,39) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (656,43) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (656,45) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (667,21) performLocalWENOInterpolationPlus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)
    -> INLINE: (244,5) computeLocalSigma(Real &, Real **, const int &)
      -> INLINE: (37,26) std::abs(double)
      -> INLINE: (37,55) std::abs(double)
      -> INLINE: (37,75) std::abs(double)
      -> INLINE: (38,26) std::abs(double)
      -> INLINE: (38,55) std::abs(double)
      -> INLINE: (38,75) std::abs(double)
      -> INLINE: (40,13) std::max<Real>(const Real &, const Real &)
    -> INLINE: (252,5) computeLocalBetaTilde(Real &, Real &, Real &, Real &, Real **, const int &)
    -> INLINE: (260,24) std::abs(double)
    -> INLINE: (262,56) ipow(Real, const int &)
    -> INLINE: (263,55) ipow(Real, const int &)
    -> INLINE: (264,56) ipow(Real, const int &)
    -> INLINE: (279,24) std::abs(double)
    -> INLINE: (281,43) ipow(Real, const int &)
    -> INLINE: (282,44) ipow(Real, const int &)
    -> INLINE: (283,44) ipow(Real, const int &)
    -> INLINE: (284,43) ipow(Real, const int &)
  -> (669,33) std::vector<Real *, std::allocator<Real *>>::data(std::vector<Real *, std::allocator<Real *>> *)
  -> (677,9) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (680,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (686,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (687,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (688,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> (696,32) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (696,32) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (697,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (701,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (701,44) std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::operator[](const std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>> *, std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::size_type) const
  -> INLINE: (701,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (701,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (701,53) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (704,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (704,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (704,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (719,25) performLocalWENOInterpolationMinus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)
    -> INLINE: (148,5) computeLocalSigma(Real &, Real **, const int &)
      -> INLINE: (37,26) std::abs(double)
      -> INLINE: (37,55) std::abs(double)
      -> INLINE: (37,75) std::abs(double)
      -> INLINE: (38,26) std::abs(double)
      -> INLINE: (38,55) std::abs(double)
      -> INLINE: (38,75) std::abs(double)
      -> INLINE: (40,13) std::max<Real>(const Real &, const Real &)
    -> INLINE: (156,5) computeLocalBeta(Real &, Real &, Real &, Real &, Real **, const int &)
    -> INLINE: (164,18) std::abs(double)
    -> INLINE: (166,50) ipow(Real, const int &)
    -> INLINE: (167,49) ipow(Real, const int &)
    -> INLINE: (168,50) ipow(Real, const int &)
    -> INLINE: (183,18) std::abs(double)
    -> INLINE: (185,37) ipow(Real, const int &)
    -> INLINE: (186,38) ipow(Real, const int &)
    -> INLINE: (187,38) ipow(Real, const int &)
    -> INLINE: (188,37) ipow(Real, const int &)
  -> (721,37) std::vector<Real *, std::allocator<Real *>>::data(std::vector<Real *, std::allocator<Real *>> *)
  -> (730,9) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (734,32) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (734,32) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (735,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (739,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (739,44) std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::operator[](const std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>> *, std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::size_type) const
  -> INLINE: (739,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (739,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (739,53) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (742,39) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (742,43) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (742,45) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (757,25) performLocalWENOInterpolationPlus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)
    -> INLINE: (244,5) computeLocalSigma(Real &, Real **, const int &)
      -> INLINE: (37,26) std::abs(double)
      -> INLINE: (37,55) std::abs(double)
      -> INLINE: (37,75) std::abs(double)
      -> INLINE: (38,26) std::abs(double)
      -> INLINE: (38,55) std::abs(double)
      -> INLINE: (38,75) std::abs(double)
      -> INLINE: (40,13) std::max<Real>(const Real &, const Real &)
    -> INLINE: (252,5) computeLocalBetaTilde(Real &, Real &, Real &, Real &, Real **, const int &)
    -> INLINE: (260,24) std::abs(double)
    -> INLINE: (262,56) ipow(Real, const int &)
    -> INLINE: (263,55) ipow(Real, const int &)
    -> INLINE: (264,56) ipow(Real, const int &)
    -> INLINE: (279,24) std::abs(double)
    -> INLINE: (281,43) ipow(Real, const int &)
    -> INLINE: (282,44) ipow(Real, const int &)
    -> INLINE: (283,44) ipow(Real, const int &)
    -> INLINE: (284,43) ipow(Real, const int &)
  -> (759,37) std::vector<Real *, std::allocator<Real *>>::data(std::vector<Real *, std::allocator<Real *>> *)
  -> (768,9) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (776,32) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (776,32) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (777,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (781,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (781,44) std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::operator[](const std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>> *, std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::size_type) const
  -> INLINE: (781,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (781,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (781,53) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (784,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (784,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (784,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (799,25) performLocalWENOInterpolationMinus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)
    -> INLINE: (148,5) computeLocalSigma(Real &, Real **, const int &)
      -> INLINE: (37,26) std::abs(double)
      -> INLINE: (37,55) std::abs(double)
      -> INLINE: (37,75) std::abs(double)
      -> INLINE: (38,26) std::abs(double)
      -> INLINE: (38,55) std::abs(double)
      -> INLINE: (38,75) std::abs(double)
      -> INLINE: (40,13) std::max<Real>(const Real &, const Real &)
    -> INLINE: (156,5) computeLocalBeta(Real &, Real &, Real &, Real &, Real **, const int &)
    -> INLINE: (164,18) std::abs(double)
    -> INLINE: (166,50) ipow(Real, const int &)
    -> INLINE: (167,49) ipow(Real, const int &)
    -> INLINE: (168,50) ipow(Real, const int &)
    -> INLINE: (183,18) std::abs(double)
    -> INLINE: (185,37) ipow(Real, const int &)
    -> INLINE: (186,38) ipow(Real, const int &)
    -> INLINE: (187,38) ipow(Real, const int &)
    -> INLINE: (188,37) ipow(Real, const int &)
  -> (801,37) std::vector<Real *, std::allocator<Real *>>::data(std::vector<Real *, std::allocator<Real *>> *)
  -> (810,9) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (814,32) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (814,32) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (815,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (819,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (819,44) std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::operator[](const std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>> *, std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::size_type) const
  -> INLINE: (819,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (819,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (819,53) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (822,39) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (822,43) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (822,45) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (837,25) performLocalWENOInterpolationPlus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)
    -> INLINE: (244,5) computeLocalSigma(Real &, Real **, const int &)
      -> INLINE: (37,26) std::abs(double)
      -> INLINE: (37,55) std::abs(double)
      -> INLINE: (37,75) std::abs(double)
      -> INLINE: (38,26) std::abs(double)
      -> INLINE: (38,55) std::abs(double)
      -> INLINE: (38,75) std::abs(double)
      -> INLINE: (40,13) std::max<Real>(const Real &, const Real &)
    -> INLINE: (252,5) computeLocalBetaTilde(Real &, Real &, Real &, Real &, Real **, const int &)
    -> INLINE: (260,24) std::abs(double)
    -> INLINE: (262,56) ipow(Real, const int &)
    -> INLINE: (263,55) ipow(Real, const int &)
    -> INLINE: (264,56) ipow(Real, const int &)
    -> INLINE: (279,24) std::abs(double)
    -> INLINE: (281,43) ipow(Real, const int &)
    -> INLINE: (282,44) ipow(Real, const int &)
    -> INLINE: (283,44) ipow(Real, const int &)
    -> INLINE: (284,43) ipow(Real, const int &)
  -> (839,37) std::vector<Real *, std::allocator<Real *>>::data(std::vector<Real *, std::allocator<Real *>> *)
  -> (848,9) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (856,32) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (856,32) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (857,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (861,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (861,44) std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::operator[](const std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>> *, std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::size_type) const
  -> INLINE: (861,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (861,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (861,53) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (864,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (864,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (864,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (879,25) performLocalWENOInterpolationMinus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)
    -> INLINE: (148,5) computeLocalSigma(Real &, Real **, const int &)
      -> INLINE: (37,26) std::abs(double)
      -> INLINE: (37,55) std::abs(double)
      -> INLINE: (37,75) std::abs(double)
      -> INLINE: (38,26) std::abs(double)
      -> INLINE: (38,55) std::abs(double)
      -> INLINE: (38,75) std::abs(double)
      -> INLINE: (40,13) std::max<Real>(const Real &, const Real &)
    -> INLINE: (156,5) computeLocalBeta(Real &, Real &, Real &, Real &, Real **, const int &)
    -> INLINE: (164,18) std::abs(double)
    -> INLINE: (166,50) ipow(Real, const int &)
    -> INLINE: (167,49) ipow(Real, const int &)
    -> INLINE: (168,50) ipow(Real, const int &)
    -> INLINE: (183,18) std::abs(double)
    -> INLINE: (185,37) ipow(Real, const int &)
    -> INLINE: (186,38) ipow(Real, const int &)
    -> INLINE: (187,38) ipow(Real, const int &)
    -> INLINE: (188,37) ipow(Real, const int &)
  -> (881,37) std::vector<Real *, std::allocator<Real *>>::data(std::vector<Real *, std::allocator<Real *>> *)
  -> (890,9) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (894,32) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (894,32) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (895,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (899,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (899,44) std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::operator[](const std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>> *, std::vector<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>, std::allocator<std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>>>::size_type) const
  -> INLINE: (899,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (899,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (899,53) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (902,39) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (902,43) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (902,45) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (917,25) performLocalWENOInterpolationPlus(Real *, Real **, const int &, const int &, const int &, const Real &, const Real &)
    -> INLINE: (244,5) computeLocalSigma(Real &, Real **, const int &)
      -> INLINE: (37,26) std::abs(double)
      -> INLINE: (37,55) std::abs(double)
      -> INLINE: (37,75) std::abs(double)
      -> INLINE: (38,26) std::abs(double)
      -> INLINE: (38,55) std::abs(double)
      -> INLINE: (38,75) std::abs(double)
      -> INLINE: (40,13) std::max<Real>(const Real &, const Real &)
    -> INLINE: (252,5) computeLocalBetaTilde(Real &, Real &, Real &, Real &, Real **, const int &)
    -> INLINE: (260,24) std::abs(double)
    -> INLINE: (262,56) ipow(Real, const int &)
    -> INLINE: (263,55) ipow(Real, const int &)
    -> INLINE: (264,56) ipow(Real, const int &)
    -> INLINE: (279,24) std::abs(double)
    -> INLINE: (281,43) ipow(Real, const int &)
    -> INLINE: (282,44) ipow(Real, const int &)
    -> INLINE: (283,44) ipow(Real, const int &)
    -> INLINE: (284,43) ipow(Real, const int &)
  -> (919,37) std::vector<Real *, std::allocator<Real *>>::data(std::vector<Real *, std::allocator<Real *>> *)
  -> (928,9) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(471,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(476,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(484,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(489,17)
         remark #25045: Fused Loops: ( 12 12 12 )

         remark #15301: FUSED LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(489,17)
         remark #25046: Loop lost in Fusion 
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(489,17)
         remark #25046: Loop lost in Fusion 
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(489,17)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(489,17)
      <Remainder loop for vectorization>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(489,17)
         remark #25045: Fused Loops: ( 12 12 12 12 )

         remark #15301: FUSED LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(489,17)
         remark #25046: Loop lost in Fusion 
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(489,17)
         remark #25046: Loop lost in Fusion 
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(489,17)
         remark #25046: Loop lost in Fusion 
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(489,17)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(489,17)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(500,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(505,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(513,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(518,17)
         remark #25045: Fused Loops: ( 12 12 12 )

         remark #15301: FUSED LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(518,17)
         remark #25046: Loop lost in Fusion 
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(518,17)
         remark #25046: Loop lost in Fusion 
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(518,17)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(518,17)
      <Remainder loop for vectorization>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(518,17)
         remark #25045: Fused Loops: ( 12 12 12 12 )

         remark #15301: FUSED LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(518,17)
         remark #25046: Loop lost in Fusion 
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(518,17)
         remark #25046: Loop lost in Fusion 
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(518,17)
         remark #25046: Loop lost in Fusion 
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(518,17)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(518,17)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(543,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(548,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(555,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(558,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(564,21)
            remark #25045: Fused Loops: ( 12 12 12 )

            remark #15301: FUSED LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(564,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(564,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(564,21)
         <Remainder loop for vectorization>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(564,21)
         <Remainder loop for vectorization>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(564,21)
            remark #25045: Fused Loops: ( 12 12 12 12 )

            remark #15301: FUSED LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(564,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(564,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(564,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(564,21)
         <Remainder loop for vectorization>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(564,21)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(576,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(581,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(588,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(591,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(597,21)
            remark #25045: Fused Loops: ( 12 12 12 )

            remark #15301: FUSED LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(597,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(597,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(597,21)
         <Remainder loop for vectorization>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(597,21)
         <Remainder loop for vectorization>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(597,21)
            remark #25045: Fused Loops: ( 12 12 12 12 )

            remark #15301: FUSED LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(597,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(597,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(597,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(597,21)
         <Remainder loop for vectorization>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(597,21)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(613,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(618,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(625,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(628,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(634,21)
            remark #25045: Fused Loops: ( 12 12 12 )

            remark #15301: FUSED LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(634,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(634,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(634,21)
         <Remainder loop for vectorization>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(634,21)
         <Remainder loop for vectorization>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(634,21)
            remark #25045: Fused Loops: ( 12 12 12 12 )

            remark #15301: FUSED LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(634,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(634,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(634,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(634,21)
         <Remainder loop for vectorization>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(634,21)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(646,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(651,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(658,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(661,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(667,21)
            remark #25045: Fused Loops: ( 12 12 12 )

            remark #15301: FUSED LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(667,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(667,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(667,21)
         <Remainder loop for vectorization>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(667,21)
         <Remainder loop for vectorization>
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(667,21)
            remark #25045: Fused Loops: ( 12 12 12 12 )

            remark #15301: FUSED LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(667,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(667,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(667,21)
            remark #25046: Loop lost in Fusion 
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(667,21)
         <Remainder loop for vectorization>
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(667,21)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(694,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(699,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(706,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(708,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(711,21)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(719,25)
               remark #25045: Fused Loops: ( 12 12 12 )

               remark #15301: FUSED LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(719,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(719,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(719,25)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(719,25)
            <Remainder loop for vectorization>
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(719,25)
               remark #25045: Fused Loops: ( 12 12 12 12 )

               remark #15301: FUSED LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(719,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(719,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(719,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(719,25)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(719,25)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(732,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(737,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(744,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(746,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(749,21)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(757,25)
               remark #25045: Fused Loops: ( 12 12 12 )

               remark #15301: FUSED LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(757,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(757,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(757,25)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(757,25)
            <Remainder loop for vectorization>
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(757,25)
               remark #25045: Fused Loops: ( 12 12 12 12 )

               remark #15301: FUSED LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(757,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(757,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(757,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(757,25)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(757,25)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(774,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(779,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(786,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(788,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(791,21)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(799,25)
               remark #25045: Fused Loops: ( 12 12 12 )

               remark #15301: FUSED LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(799,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(799,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(799,25)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(799,25)
            <Remainder loop for vectorization>
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(799,25)
               remark #25045: Fused Loops: ( 12 12 12 12 )

               remark #15301: FUSED LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(799,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(799,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(799,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(799,25)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(799,25)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(812,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(817,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(824,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(826,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(829,21)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(837,25)
               remark #25045: Fused Loops: ( 12 12 12 )

               remark #15301: FUSED LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(837,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(837,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(837,25)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(837,25)
            <Remainder loop for vectorization>
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(837,25)
               remark #25045: Fused Loops: ( 12 12 12 12 )

               remark #15301: FUSED LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(837,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(837,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(837,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(837,25)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(837,25)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(854,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(859,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(866,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(868,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(871,21)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(879,25)
               remark #25045: Fused Loops: ( 12 12 12 )

               remark #15301: FUSED LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(879,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(879,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(879,25)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(879,25)
            <Remainder loop for vectorization>
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(879,25)
               remark #25045: Fused Loops: ( 12 12 12 12 )

               remark #15301: FUSED LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(879,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(879,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(879,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(879,25)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(879,25)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(892,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(897,13)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(904,13)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(906,17)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(909,21)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(917,25)
               remark #25045: Fused Loops: ( 12 12 12 )

               remark #15301: FUSED LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(917,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(917,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(917,25)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(917,25)
            <Remainder loop for vectorization>
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(917,25)
               remark #25045: Fused Loops: ( 12 12 12 12 )

               remark #15301: FUSED LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(917,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(917,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(917,25)
               remark #25046: Loop lost in Fusion 
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(917,25)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(12,5) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(917,25)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp(421,1):remark #34051: REGISTER ALLOCATION : [_ZN44ConvectiveFluxReconstructorWCNS6_LD_HLLC_HLL24performWENOInterpolationERSt6vectorISt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEESaIS6_EES9_RKS0_IS8_SaIS8_EE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/convective_flux_reconstructors/WCNS56/ConvectiveFluxReconstructorWCNS6-LD-HLLC-HLL.cpp:421

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    4888
            Global    :    1333
            Local     :    3555
        Regenerable   :     305
        Spilled       :     419
        
    Routine stack
        Variables     :     452 bytes*
            Reads     :       7 [2.68e+00 ~ 0.0%]
            Writes    :      28 [9.60e+01 ~ 0.0%]
        Spills        :    5712 bytes*
            Reads     :     631 [2.92e+04 ~ 4.4%]
            Writes    :     492 [2.68e+04 ~ 4.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::emplace_back<std::remove_reference<std::_Vector_base<double, std::allocator<double>>::pointer &>::type>(std::vector<Real *, std::allocator<Real *>> *, std::remove_reference<std::_Vector_base<double, std::allocator<double>>::pointer &>::type &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(93,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EE12emplace_backIIS0_EEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      35
            Global    :      17
            Local     :      18
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::_M_deallocate(std::_Vector_base<Real *, std::allocator<Real *>> *, std::_Vector_base<Real *, std::allocator<Real *>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EE13_M_deallocateEPS0_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::_M_get_Tp_allocator(std::_Vector_base<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::size(const std::vector<Real *, std::allocator<Real *>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIPdSaIS0_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(67,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EE7reserveEm] /usr/include/c++/4.8.5/bits/vector.tcc:67

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      34
            Global    :      18
            Local     :      16
        Regenerable   :       3
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::data(std::vector<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(879,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EE4dataEv] /usr/include/c++/4.8.5/bits/stl_vector.h:879

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::~_Vector_base(std::_Vector_base<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const) [52] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(636,4)
  -> INLINE: (637,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (638,17) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (638,36) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (640,32) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (640,39) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(253,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)
      -> INLINE: (239,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (239,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(638,11)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(641,32)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(239,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(641,39)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(636,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier3Box11numberCellsEv] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:636

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rsi rdi r8 r13]
        
    Routine temporaries
        Total         :      79
            Global    :      17
            Local     :      62
        Regenerable   :      13
        Spilled       :       2
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :      13 [3.69e+00 ~ 4.7%]
            Writes    :      12 [2.25e+00 ~ 2.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(73,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(137,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(269,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1132,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(238,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(251,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(265,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(281,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(515,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(724,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(598,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1298,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(84,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(157,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(207,1)

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [166] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [__sti__$E] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       7
            Local     :       6
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
