Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *const)) [4] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp(26,17)
  -> INLINE: (26,17) FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *)
    -> INLINE: (26,60) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (26,60) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (26,60) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (26,60) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp(27,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp(26,17):remark #34051: REGISTER ALLOCATION : [_ZN38FlowModelMonitoringStatisticsUtilitiesD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp:26

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rbp rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      55
            Global    :      22
            Local     :      33
        Regenerable   :      14
        Spilled       :       4
        
    Routine stack
        Variables     :       2 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [9.85e-01 ~ 1.0%]
            Writes    :       1 [9.85e-01 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::string, std::allocator<std::string>>::~_Vector_base(std::_Vector_base<std::string, std::allocator<std::string>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISsSaISsEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *const)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp(26,17)

===========================================================================

Begin optimization report for: FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::FlowModelMonitoringStatisticsUtilitiesFourEqnConservative(FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::FlowModelMonitoringStatisticsUtilitiesFourEqnConservative(FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)) [7] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(20,1)
  -> INLINE: (17,13) FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *const)
    -> /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp:(26,17) FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *)
  -> INLINE: (21,74) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (21,74) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (24,77) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (24,77) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (26,39) std::operator!=<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (27,39) std::operator!=<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (29,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (29,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (29,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (29,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (29,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (29,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (29,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (29,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (29,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (29,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (29,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (29,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (29,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (29,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (29,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (29,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (29,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (29,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (36,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(21,74)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(20,1):remark #34051: REGISTER ALLOCATION : [_ZN57FlowModelMonitoringStatisticsUtilitiesFourEqnConservativeC1ERKSsRKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKiRKS7_INS3_8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp:20

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     383
            Global    :      96
            Local     :     287
        Regenerable   :     142
        Spilled       :      10
        
    Routine stack
        Variables     :     431 bytes*
            Reads     :      24 [2.30e+01 ~ 4.8%]
            Writes    :      53 [7.41e+01 ~ 15.4%]
        Spills        :      32 bytes*
            Reads     :       4 [6.92e-01 ~ 0.1%]
            Writes    :       4 [6.92e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf(std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/iosfwd(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEED1Ev] /usr/include/c++/4.8.5/iosfwd:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *)) [13] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp(26,59)
  -> INLINE: (26,60) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (26,60) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (26,60) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (26,60) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp(27,60)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp(26,59):remark #34051: REGISTER ALLOCATION : [_ZN38FlowModelMonitoringStatisticsUtilitiesD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp:26

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rbp rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      54
            Global    :      22
            Local     :      32
        Regenerable   :      14
        Spilled       :       4
        
    Routine stack
        Variables     :       2 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [9.85e-01 ~ 1.0%]
            Writes    :       1 [9.85e-01 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::FlowModelMonitoringStatisticsUtilitiesFourEqnConservative(FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::FlowModelMonitoringStatisticsUtilitiesFourEqnConservative(FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)) [14] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(6,60)
  -> INLINE: (6,60) FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::FlowModelMonitoringStatisticsUtilitiesFourEqnConservative(FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)
    -> INLINE: (17,13) FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *const)
      -> /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp:(26,17) FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *)
    -> INLINE: (21,74) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
    -> INLINE: (21,74) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
    -> INLINE: (24,77) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
    -> INLINE: (24,77) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (26,39) std::operator!=<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (27,39) std::operator!=<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (29,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (29,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (29,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> (29,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> (29,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> (29,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
    -> (29,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> (29,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> (29,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> (29,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
    -> INLINE: (29,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: (29,13) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (29,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (29,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: (29,13) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: (29,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (29,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (29,13) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (36,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(21,74) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(6,60)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(6,60):remark #34051: REGISTER ALLOCATION : [_ZN57FlowModelMonitoringStatisticsUtilitiesFourEqnConservativeC2ERKSsRKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKiRKS7_INS3_8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp:6

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     383
            Global    :      96
            Local     :     287
        Regenerable   :     142
        Spilled       :      10
        
    Routine stack
        Variables     :     431 bytes*
            Reads     :      24 [2.30e+01 ~ 4.8%]
            Writes    :      53 [7.41e+01 ~ 15.4%]
        Spills        :      32 bytes*
            Reads     :       4 [6.92e-01 ~ 0.1%]
            Writes    :       4 [6.92e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::~FlowModelMonitoringStatisticsUtilitiesFourEqnConservative(FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::~FlowModelMonitoringStatisticsUtilitiesFourEqnConservative(FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *)) [15] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.hpp(16,70)
  -> INLINE: (16,71) FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *const)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp:(26,17) FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *)
      -> INLINE: (26,60) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (26,60) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (26,60) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (26,60) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.hpp(17,71)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.hpp(16,70):remark #34051: REGISTER ALLOCATION : [_ZN57FlowModelMonitoringStatisticsUtilitiesFourEqnConservativeD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.hpp:16

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rbp rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      54
            Global    :      22
            Local     :      32
        Regenerable   :      14
        Spilled       :       4
        
    Routine stack
        Variables     :       2 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [9.85e-01 ~ 1.0%]
            Writes    :       1 [9.85e-01 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::~FlowModelMonitoringStatisticsUtilitiesFourEqnConservative(FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::~FlowModelMonitoringStatisticsUtilitiesFourEqnConservative(FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *const)) [16] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.hpp(16,9)
  -> INLINE: (16,9) FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::~FlowModelMonitoringStatisticsUtilitiesFourEqnConservative(FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *)
    -> INLINE: (16,71) FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *const)
      -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp:(26,17) FlowModelMonitoringStatisticsUtilities::~FlowModelMonitoringStatisticsUtilities(FlowModelMonitoringStatisticsUtilities *)
        -> INLINE: (26,60) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
           {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
        -> INLINE: (26,60) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
           {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
        -> INLINE: (26,60) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
           {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
        -> INLINE: (26,60) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
           {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.hpp(17,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.hpp(16,9):remark #34051: REGISTER ALLOCATION : [_ZN57FlowModelMonitoringStatisticsUtilitiesFourEqnConservativeD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.hpp:16

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rbp rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      55
            Global    :      22
            Local     :      33
        Regenerable   :      14
        Spilled       :       4
        
    Routine stack
        Variables     :       2 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [9.85e-01 ~ 1.0%]
            Writes    :       1 [9.85e-01 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::computeMonitoringStatistics(FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, int, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::computeMonitoringStatistics(FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, int, double)) [17] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(49,1)
  -> INLINE: (53,22) std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic>::expired(const std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (55,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (55,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (55,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (55,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (55,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (55,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (55,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (55,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (55,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (55,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (55,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (55,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (55,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (55,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (55,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (61,64) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (61,64) std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const
  -> INLINE: (63,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (63,31) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (64,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (64,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (64,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (68,9) FlowModelMPIHelperAverage::~FlowModelMPIHelperAverage(FlowModelMPIHelperAverage *)
  -> INLINE: (68,9) FlowModelMPIHelperAverage::FlowModelMPIHelperAverage(FlowModelMPIHelperAverage *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<FlowModel> &, bool)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelperAverage.hpp:(26,21) FlowModelMPIHelper::FlowModelMPIHelper(FlowModelMPIHelper *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<FlowModel> &, const bool)
      -> /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelper.hpp:(18,9) FlowModelMPIHelper::FlowModelMPIHelper(FlowModelMPIHelper *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<FlowModel> &, bool)
  -> INLINE: (70,30) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (70,30) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (71,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (71,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (71,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (75,9) FlowModelMPIHelperMaxMin::FlowModelMPIHelperMaxMin(FlowModelMPIHelperMaxMin *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<FlowModel> &, bool)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelperMaxMin.hpp:(26,21) FlowModelMPIHelper::FlowModelMPIHelper(FlowModelMPIHelper *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<FlowModel> &, const bool)
      -> /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelper.hpp:(18,9) FlowModelMPIHelper::FlowModelMPIHelper(FlowModelMPIHelper *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<FlowModel> &, bool)
  -> (75,9) FlowModelMPIHelperMaxMin::~FlowModelMPIHelperMaxMin(FlowModelMPIHelperMaxMin *)
  -> INLINE: (77,74) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (77,74) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (80,77) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (80,77) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (82,38) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (84,38) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
  -> (84,38) std::vector<std::string, std::allocator<std::string>>::vector(std::vector<std::string, std::allocator<std::string>> *)
  -> (85,30) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (85,30) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> INLINE: (91,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (91,54) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (91,85) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> DELETED: (93,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (93,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (93,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (93,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (93,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (93,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (94,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (95,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (95,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (95,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (95,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (95,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (95,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (96,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (103,32) std::vector<std::string, std::allocator<std::string>>::clear(std::vector<std::string, std::allocator<std::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (104,35) std::vector<int, std::allocator<int>>::clear(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (107,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (107,54) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> DELETED: (109,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (109,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (109,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (109,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (109,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (109,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (110,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (111,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (111,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (111,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (111,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (112,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (119,32) std::vector<std::string, std::allocator<std::string>>::clear(std::vector<std::string, std::allocator<std::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (120,35) std::vector<int, std::allocator<int>>::clear(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (123,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> DELETED: (125,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (125,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (125,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (125,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (125,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (125,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (126,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (127,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (127,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (127,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (127,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (127,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (127,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (128,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (135,32) std::vector<std::string, std::allocator<std::string>>::clear(std::vector<std::string, std::allocator<std::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (136,35) std::vector<int, std::allocator<int>>::clear(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (140,9) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (140,9) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
  -> INLINE: (141,43) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (143,38) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
  -> (143,38) std::vector<std::string, std::allocator<std::string>>::vector(std::vector<std::string, std::allocator<std::string>> *)
  -> (144,30) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
  -> (144,30) std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)
  -> (145,31) std::vector<bool, std::allocator<bool>>::~vector(std::vector<bool, std::allocator<bool>> *)
  -> (145,31) std::vector<bool, std::allocator<bool>>::vector(std::vector<bool, std::allocator<bool>> *)
  -> INLINE: (151,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (151,54) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (151,85) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> DELETED: (153,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (153,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (153,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (153,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (153,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (153,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (154,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (155,32) std::vector<bool, std::allocator<bool>>::push_back(std::vector<bool, std::allocator<bool>> *, bool)
  -> DELETED: (156,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (156,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (156,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (156,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (156,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (156,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (157,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (158,32) std::vector<bool, std::allocator<bool>>::push_back(std::vector<bool, std::allocator<bool>> *, bool)
  -> DELETED: (159,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (159,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (159,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (159,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (159,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (159,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (160,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (161,32) std::vector<bool, std::allocator<bool>>::push_back(std::vector<bool, std::allocator<bool>> *, bool)
  -> DELETED: (162,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (162,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (162,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (162,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (162,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (162,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (163,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (164,32) std::vector<bool, std::allocator<bool>>::push_back(std::vector<bool, std::allocator<bool>> *, bool)
  -> INLINE: (172,32) std::vector<std::string, std::allocator<std::string>>::clear(std::vector<std::string, std::allocator<std::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (173,35) std::vector<int, std::allocator<int>>::clear(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (174,32) std::vector<bool, std::allocator<bool>>::clear(std::vector<bool, std::allocator<bool>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (177,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (177,54) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> DELETED: (179,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (179,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (179,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (179,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (179,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (179,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (180,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (181,32) std::vector<bool, std::allocator<bool>>::push_back(std::vector<bool, std::allocator<bool>> *, bool)
  -> DELETED: (182,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (182,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (182,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (182,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (182,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (182,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (183,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (184,32) std::vector<bool, std::allocator<bool>>::push_back(std::vector<bool, std::allocator<bool>> *, bool)
  -> DELETED: (185,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (185,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (185,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (185,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (185,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (185,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (186,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (187,32) std::vector<bool, std::allocator<bool>>::push_back(std::vector<bool, std::allocator<bool>> *, bool)
  -> DELETED: (188,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (188,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (188,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (188,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (188,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (188,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (189,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (190,32) std::vector<bool, std::allocator<bool>>::push_back(std::vector<bool, std::allocator<bool>> *, bool)
  -> INLINE: (198,32) std::vector<std::string, std::allocator<std::string>>::clear(std::vector<std::string, std::allocator<std::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (199,35) std::vector<int, std::allocator<int>>::clear(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (200,32) std::vector<bool, std::allocator<bool>>::clear(std::vector<bool, std::allocator<bool>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (203,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> DELETED: (205,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (205,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (205,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (205,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (205,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (205,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (206,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (207,32) std::vector<bool, std::allocator<bool>>::push_back(std::vector<bool, std::allocator<bool>> *, bool)
  -> DELETED: (208,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (208,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (208,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (208,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (208,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (208,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (209,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (210,32) std::vector<bool, std::allocator<bool>>::push_back(std::vector<bool, std::allocator<bool>> *, bool)
  -> DELETED: (211,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (211,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (211,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (211,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (211,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (211,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (212,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (213,32) std::vector<bool, std::allocator<bool>>::push_back(std::vector<bool, std::allocator<bool>> *, bool)
  -> DELETED: (214,32) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (214,32) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (214,32) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (214,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (214,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (214,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (215,35) std::vector<int, std::allocator<int>>::push_back(std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (216,32) std::vector<bool, std::allocator<bool>>::push_back(std::vector<bool, std::allocator<bool>> *, bool)
  -> INLINE: (224,32) std::vector<std::string, std::allocator<std::string>>::clear(std::vector<std::string, std::allocator<std::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (225,35) std::vector<int, std::allocator<int>>::clear(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (226,32) std::vector<bool, std::allocator<bool>>::clear(std::vector<bool, std::allocator<bool>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (229,40) std::max<Real>(const Real &, const Real &)
  -> INLINE: (229,49) std::max<Real>(const Real &, const Real &)
  -> (230,9) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
  -> INLINE: (230,9) std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (230,9) std::vector<bool, std::allocator<bool>>::~vector(std::vector<bool, std::allocator<bool>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (231,5) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (231,5) FlowModelMPIHelperAverage::~FlowModelMPIHelperAverage(FlowModelMPIHelperAverage *)
  -> (231,5) FlowModelMPIHelperMaxMin::~FlowModelMPIHelperMaxMin(FlowModelMPIHelperMaxMin *)
  -> INLINE: (231,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(103,32)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(119,32)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(135,32)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(172,32)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(198,32)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(224,32)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(77,74)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(80,77) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(942,7):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(1126,33):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(942,7):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(1126,33):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(942,7):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(1126,33):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(49,1):remark #34051: REGISTER ALLOCATION : [_ZN57FlowModelMonitoringStatisticsUtilitiesFourEqnConservative27computeMonitoringStatisticsERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEERKS0_INS2_15VariableContextEEid] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp:49

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :    1444
            Global    :     342
            Local     :    1102
        Regenerable   :     608
        Spilled       :      15
        
    Routine stack
        Variables     :    1387 bytes*
            Reads     :     179 [1.63e+02 ~ 9.1%]
            Writes    :     169 [1.04e+02 ~ 5.8%]
        Spills        :      72 bytes*
            Reads     :      24 [4.11e+01 ~ 2.3%]
            Writes    :      30 [5.09e+01 ~ 2.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::_M_emplace_back_aux<std::remove_reference<std::vector<std::string, std::allocator<std::string>>::value_type &>::type>(std::vector<std::string, std::allocator<std::string>> *, std::remove_reference<std::vector<std::string, std::allocator<std::string>>::value_type &>::type &&)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(414,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(414,10)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(429,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/vector.tcc(401,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISsSaISsEE19_M_emplace_back_auxIISsEEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:401

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :      69
            Global    :      35
            Local     :      34
        Regenerable   :       9
        Spilled       :       8
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 2.1%]
            Writes    :       4 [3.94e+00 ~ 2.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorISsSaISsEE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::string, std::allocator<std::string>>::_M_get_Tp_allocator(std::_Vector_base<std::string, std::allocator<std::string>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISsSaISsEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::string, std::allocator<std::string>>::pointer>(std::_Vector_base<std::string, std::allocator<std::string>>::pointer, std::_Vector_base<std::string, std::allocator<std::string>>::pointer)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_construct.h(101,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Destroy_auxILb0EE9__destroyIPSsEEvT_S3_] /usr/include/c++/4.8.5/bits/stl_construct.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8 r12-r14]
        
    Routine temporaries
        Total         :      21
            Global    :      12
            Local     :       9
        Regenerable   :       5
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.96e+00 ~ 4.3%]
            Writes    :       3 [2.96e+00 ~ 4.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::string, std::allocator<std::string>>::_M_deallocate(std::_Vector_base<std::string, std::allocator<std::string>> *, std::_Vector_base<std::string, std::allocator<std::string>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISsSaISsEE13_M_deallocateEPSsm] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::allocator_traits<std::allocator<std::string>>::_S_destroy<std::string>(std::allocator<std::string> &, std::string *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/alloc_traits.h(281,2):remark #34051: REGISTER ALLOCATION : [_ZNSt16allocator_traitsISaISsEE10_S_destroyISsEENSt9enable_ifIXsrNS1_16__destroy_helperIT_EE5valueEvE4typeERS0_PS5_] /usr/include/c++/4.8.5/bits/alloc_traits.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      20
            Global    :      10
            Local     :      10
        Regenerable   :       5
        Spilled       :       0
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::emplace_back<std::remove_reference<std::vector<std::string, std::allocator<std::string>>::value_type &>::type>(std::vector<std::string, std::allocator<std::string>> *, std::remove_reference<std::vector<std::string, std::allocator<std::string>>::value_type &>::type &&)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(102,4)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/vector.tcc(93,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISsSaISsEE12emplace_backIISsEEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :      71
            Global    :      35
            Local     :      36
        Regenerable   :       9
        Spilled       :       8
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [2.84e+00 ~ 2.0%]
            Writes    :       4 [2.84e+00 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::_M_emplace_back_aux<std::remove_reference<std::vector<int, std::allocator<int>>::value_type &>::type>(std::vector<int, std::allocator<int>> *, std::remove_reference<std::vector<int, std::allocator<int>>::value_type &>::type &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(401,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIIiEEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:401

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      33
            Global    :      16
            Local     :      17
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::size(const std::vector<int, std::allocator<int>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIiSaIiEE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<int, std::allocator<int>>::_M_get_Tp_allocator(std::_Vector_base<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<int, std::allocator<int>>::_M_deallocate(std::_Vector_base<int, std::allocator<int>> *, std::_Vector_base<int, std::allocator<int>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<int, std::allocator<int>>::~_Vector_base(std::_Vector_base<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIiSaIiEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word *, int)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/ext/atomicity.h(79,3):remark #34051: REGISTER ALLOCATION : [_ZN17_INTERNAL5768b4c09__gnu_cxx27__exchange_and_add_dispatchEPii] /usr/include/c++/4.8.5/ext/atomicity.h:79

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      16
            Global    :       8
            Local     :       8
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<bool, std::allocator<bool>>::push_back(std::vector<bool, std::allocator<bool>> *, bool)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(333,4) inlined into /usr/include/c++/4.8.5/bits/stl_bvector.h(832,9)
   remark #25084: Preprocess Loopnests: Moving Out Store    [ /usr/include/c++/4.8.5/bits/stl_bvector.h(151,6) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between *__result.__result.__result (87:3) and *__result.__result.__result (89:3)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(333,4) inlined into /usr/include/c++/4.8.5/bits/stl_bvector.h(832,9)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(333,4) inlined into /usr/include/c++/4.8.5/bits/stl_bvector.h(832,9)
   remark #25084: Preprocess Loopnests: Moving Out Store    [ /usr/include/c++/4.8.5/bits/stl_bvector.h(151,6) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between *__result.__result.__result (87:3) and *__result.__result.__result (89:3)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(333,4) inlined into /usr/include/c++/4.8.5/bits/stl_bvector.h(832,9)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_bvector.h(239,25):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(829,33):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(829,33):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(697,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,32):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,32):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,32):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,32):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,32):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,32):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,32):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(739,32):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(783,35):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(783,35):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(784,7):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(390,62):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(390,62):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(784,7):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(239,25):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(785,8):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(785,8):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(697,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(786,59):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(390,62):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(390,62):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(786,59):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(786,59):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(789,29):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_bvector.h(827,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIbSaIbEE9push_backEb] /usr/include/c++/4.8.5/bits/stl_bvector.h:827

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     250
            Global    :      89
            Local     :     161
        Regenerable   :      10
        Spilled       :      10
        
    Routine stack
        Variables     :     448 bytes*
            Reads     :      51 [2.16e+00 ~ 4.6%]
            Writes    :      52 [1.40e+00 ~ 3.0%]
        Spills        :      32 bytes*
            Reads     :       6 [5.02e-03 ~ 0.0%]
            Writes    :       6 [5.02e-03 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_S_construct<char *>(char *, char *, const std::allocator<char> &, std::forward_iterator_tag)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/basic_string.tcc(126,7):remark #34051: REGISTER ALLOCATION : [_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag] /usr/include/c++/4.8.5/bits/basic_string.tcc:126

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      13
            Local     :      17
        Regenerable   :       7
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::vector(std::vector<std::string, std::allocator<std::string>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISsSaISsEEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<bool, std::allocator<bool>>::vector(std::vector<bool, std::allocator<bool>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_bvector.h(551,15):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIbSaIbEEC1Ev] /usr/include/c++/4.8.5/bits/stl_bvector.h:551

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector(std::vector<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISsSaISsEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r8-r9 r14-r15]
        
    Routine temporaries
        Total         :      22
            Global    :      13
            Local     :       9
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 5.0%]
            Writes    :       4 [3.94e+00 ~ 5.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/shared_ptr_base.h(236,30) inlined into /usr/include/c++/4.8.5/bits/shared_ptr.h(503,30)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(246,8):remark #34028: __atomic_compare_exchange_4: non constant memory order specified. Defaulting to "success" memory order.
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr.h(495,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt8weak_ptrI9FlowModelE4lockEv] /usr/include/c++/4.8.5/bits/shared_ptr.h:495

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      49
            Global    :      19
            Local     :      30
        Regenerable   :       9
        Spilled       :       1
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       5 [3.52e+00 ~ 5.0%]
            Writes    :       3 [6.34e-01 ~ 0.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<FlowModel>::shared_ptr(std::shared_ptr<FlowModel> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr.h(101,29):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI9FlowModelEC1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       6
            Local     :       3
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI9FlowModelED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<bool, std::allocator<bool>>::~vector(std::vector<bool, std::allocator<bool>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_bvector.h(621,33):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIbSaIbEED1Ev] /usr/include/c++/4.8.5/bits/stl_bvector.h:621

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::~vector(std::vector<int, std::allocator<int>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelMPIHelperMaxMin::~FlowModelMPIHelperMaxMin(FlowModelMPIHelperMaxMin *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelMPIHelperMaxMin::~FlowModelMPIHelperMaxMin(FlowModelMPIHelperMaxMin *)) [55] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelperMaxMin.hpp(10,7)
  -> INLINE: (10,7) FlowModelMPIHelper::~FlowModelMPIHelper(FlowModelMPIHelper *const)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelper.hpp:(15,7) FlowModelMPIHelper::~FlowModelMPIHelper(FlowModelMPIHelper *)
      -> INLINE: (15,7) std::shared_ptr<FlowModelDiffusiveFluxUtilities>::~shared_ptr(std::shared_ptr<FlowModelDiffusiveFluxUtilities> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (15,7) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (15,7) MPIHelper::~MPIHelper(MPIHelper *const)
        -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/MPI_helpers/MPIHelper.hpp:(16,7) MPIHelper::~MPIHelper(MPIHelper *)
          -> INLINE: (16,7) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
             {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
          -> INLINE: (16,7) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
             {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
          -> INLINE: (16,7) std::shared_ptr<SAMRAI::hier::PatchHierarchy>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchHierarchy> *)
             {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
          -> INLINE: (16,7) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
             {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
          -> INLINE: (16,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
             {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelperMaxMin.hpp(10,7):remark #34051: REGISTER ALLOCATION : [_ZN24FlowModelMPIHelperMaxMinD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelperMaxMin.hpp:10

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      85
            Global    :      37
            Local     :      48
        Regenerable   :      17
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::~_Vector_base(std::_Vector_base<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelMPIHelperAverage::~FlowModelMPIHelperAverage(FlowModelMPIHelperAverage *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelMPIHelperAverage::~FlowModelMPIHelperAverage(FlowModelMPIHelperAverage *)) [58] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelperAverage.hpp(10,7)
  -> INLINE: (10,7) FlowModelMPIHelper::~FlowModelMPIHelper(FlowModelMPIHelper *const)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelper.hpp:(15,7) FlowModelMPIHelper::~FlowModelMPIHelper(FlowModelMPIHelper *)
      -> INLINE: (15,7) std::shared_ptr<FlowModelDiffusiveFluxUtilities>::~shared_ptr(std::shared_ptr<FlowModelDiffusiveFluxUtilities> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (15,7) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (15,7) MPIHelper::~MPIHelper(MPIHelper *const)
        -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/util/MPI_helpers/MPIHelper.hpp:(16,7) MPIHelper::~MPIHelper(MPIHelper *)
          -> INLINE: (16,7) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
             {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
          -> INLINE: (16,7) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
             {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
          -> INLINE: (16,7) std::shared_ptr<SAMRAI::hier::PatchHierarchy>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchHierarchy> *)
             {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
          -> INLINE: (16,7) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
             {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
          -> INLINE: (16,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
             {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelperAverage.hpp(10,7):remark #34051: REGISTER ALLOCATION : [_ZN25FlowModelMPIHelperAverageD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelperAverage.hpp:10

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      85
            Global    :      37
            Local     :      48
        Regenerable   :      17
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelMPIHelper::FlowModelMPIHelper(FlowModelMPIHelper *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<FlowModel> &, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelMPIHelper::FlowModelMPIHelper(FlowModelMPIHelper *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<FlowModel> &, bool)) [59] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelper.hpp(32,9)
  -> INLINE: (18,9) std::shared_ptr<FlowModelDiffusiveFluxUtilities>::shared_ptr(std::shared_ptr<FlowModelDiffusiveFluxUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (30,30) std::shared_ptr<FlowModel>::shared_ptr(std::shared_ptr<FlowModel> *, const std::shared_ptr<FlowModel> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelper.hpp(32,9):remark #34051: REGISTER ALLOCATION : [_ZN18FlowModelMPIHelperC1ERKSsRKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKS7_INS2_4hier14PatchHierarchyEERKS7_I9FlowModelEb] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelper.hpp:32

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rbp rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      30
            Global    :      10
            Local     :      20
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::_M_release(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(138,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:138

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r13-r14]
        
    Routine temporaries
        Total         :      23
            Global    :      12
            Local     :      11
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::outputMonitoringStatisticalQuantitiesNames(const FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *, const std::string &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::outputMonitoringStatisticalQuantitiesNames(const FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *, const std::string &) const) [61] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(241,1)
  -> INLINE: (242,33) SAMRAI::tbox::SAMRAI_MPI::getSAMRAIWorld()
  -> INLINE: (244,13) SAMRAI::tbox::SAMRAI_MPI::getRank(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> INLINE: (246,23) std::basic_ofstream<char, std::char_traits<char>>::~basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (246,23) std::basic_ofstream<char, std::char_traits<char>>::basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (247,15) std::basic_ofstream<char, std::char_traits<char>>::open(std::basic_ofstream<char, std::char_traits<char>> *, const char *, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (247,50) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::c_str(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (249,20) std::basic_ofstream<char, std::char_traits<char>>::is_open(std::basic_ofstream<char, std::char_traits<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (251,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (251,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (251,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (251,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (251,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (251,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (251,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (251,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (251,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (251,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (251,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (251,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (251,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (251,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (251,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (257,78) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (257,78) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (260,81) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (260,81) std::vector<std::string, std::allocator<std::string>>::operator[](const std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type) const
  -> INLINE: (262,42) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (264,23) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (264,31) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (266,47) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (268,23) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (268,31) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (270,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (272,15) std::basic_ofstream<char, std::char_traits<char>>::close(std::basic_ofstream<char, std::char_traits<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (273,5) std::basic_ofstream<char, std::char_traits<char>>::~basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(257,78)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(241,1):remark #34051: REGISTER ALLOCATION : [_ZNK57FlowModelMonitoringStatisticsUtilitiesFourEqnConservative42outputMonitoringStatisticalQuantitiesNamesERKSs] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp:241

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     539
            Global    :     100
            Local     :     439
        Regenerable   :     213
        Spilled       :       8
        
    Routine stack
        Variables     :     951 bytes*
            Reads     :      42 [6.13e+00 ~ 3.6%]
            Writes    :      97 [1.86e+01 ~ 11.0%]
        Spills        :      16 bytes*
            Reads     :       2 [5.07e-02 ~ 0.0%]
            Writes    :       2 [5.07e-02 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::char_traits<char>::length(const std::char_traits<char>::char_type *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(259,7):remark #34051: REGISTER ALLOCATION : [_ZNSt11char_traitsIcE6lengthEPKc] /usr/include/c++/4.8.5/bits/char_traits.h:259

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       7
            Local     :       5
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::outputMonitoringStatistics(FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *, std::ostream &, const std::string &, int, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::outputMonitoringStatistics(FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *, std::ostream &, const std::string &, int, double)) [65] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(286,1)
  -> INLINE: (289,33) SAMRAI::tbox::SAMRAI_MPI::getSAMRAIWorld()
  -> INLINE: (291,19) std::basic_ofstream<char, std::char_traits<char>>::~basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (291,19) std::basic_ofstream<char, std::char_traits<char>>::basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (293,13) SAMRAI::tbox::SAMRAI_MPI::getRank(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> INLINE: (295,15) std::basic_ofstream<char, std::char_traits<char>>::open(std::basic_ofstream<char, std::char_traits<char>> *, const char *, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (295,50) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::c_str(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (296,20) std::basic_ofstream<char, std::char_traits<char>>::is_open(std::basic_ofstream<char, std::char_traits<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (298,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (298,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (298,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (298,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (298,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (298,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (298,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (298,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (298,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (298,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (298,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (298,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (298,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (298,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (298,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (304,15) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::ios_base &(*)(std::ios_base &))
  -> (304,34) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setprecision)
  -> INLINE: (304,55) std::setprecision(int)
  -> (304,94) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (307,74) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (307,74) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (310,77) std::vector<std::string, std::allocator<std::string>>::operator[](std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
  -> INLINE: (310,77) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (312,38) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (314,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (314,42) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (314,66) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (315,21) SAMRAI::tbox::SAMRAI_MPI::getRank(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> (317,23) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::ios_base &(*)(std::ios_base &))
  -> (317,42) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setprecision)
  -> INLINE: (317,63) std::setprecision(int)
  -> (318,19) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (318,27) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (321,43) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (323,16) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (323,39) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> (323,57) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (324,21) SAMRAI::tbox::SAMRAI_MPI::getRank(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> (326,23) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::ios_base &(*)(std::ios_base &))
  -> (326,42) std::operator<<<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, std::_Setprecision)
  -> INLINE: (326,63) std::setprecision(int)
  -> (327,19) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (327,27) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, double)
  -> INLINE: (330,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,5) std::basic_ofstream<char, std::char_traits<char>>::~basic_ofstream(std::basic_ofstream<char, std::char_traits<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,13) SAMRAI::tbox::SAMRAI_MPI::getRank(const SAMRAI::tbox::SAMRAI_MPI *) const
  -> (334,15) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (335,15) std::basic_ofstream<char, std::char_traits<char>>::close(std::basic_ofstream<char, std::char_traits<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(307,74)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(286,1):remark #34051: REGISTER ALLOCATION : [_ZN57FlowModelMonitoringStatisticsUtilitiesFourEqnConservative26outputMonitoringStatisticsERSoRKSsid] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp:286

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     605
            Global    :     121
            Local     :     484
        Regenerable   :     233
        Spilled       :       9
        
    Routine stack
        Variables     :     951 bytes*
            Reads     :      42 [9.09e+00 ~ 2.9%]
            Writes    :      97 [2.46e+01 ~ 7.9%]
        Spills        :      24 bytes*
            Reads     :       3 [2.49e-01 ~ 0.1%]
            Writes    :       3 [2.49e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::ios_base::precision(std::ios_base *, std::streamsize)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/ios_base.h(631,5):remark #34051: REGISTER ALLOCATION : [_ZNSt8ios_base9precisionEl] /usr/include/c++/4.8.5/bits/ios_base.h:631

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::getMonitoringStatistics(const FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *, std::string *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::getMonitoringStatistics(const FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *, std::string *) const) [71] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(346,1)
  -> INLINE: (349,74) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (349,74) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (352,77) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (352,77) std::vector<std::string, std::allocator<std::string>>::operator[](const std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type) const
  -> INLINE: (354,29) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (357,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (359,34) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (362,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (364,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(349,74)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(346,1):remark #34051: REGISTER ALLOCATION : [_ZNK57FlowModelMonitoringStatisticsUtilitiesFourEqnConservative23getMonitoringStatisticsESs] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp:346

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbp rsi rdi r12-r14 zmm0]
        
    Routine temporaries
        Total         :      87
            Global    :      29
            Local     :      58
        Regenerable   :      25
        Spilled       :       5
        
    Routine stack
        Variables     :      20 bytes*
            Reads     :       5 [2.02e+00 ~ 2.3%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [1.00e+00 ~ 1.2%]
            Writes    :       3 [1.73e+00 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::getMonitoringStatisticsMap(std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>> *, const FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelMonitoringStatisticsUtilitiesFourEqnConservative::getMonitoringStatisticsMap(std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>> *, const FlowModelMonitoringStatisticsUtilitiesFourEqnConservative *) const) [72] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(375,1)
  -> (376,43) std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>>::~unordered_map(std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>> *)
  -> DELETED: (376,43) std::allocator<std::pair<const std::string, Real>>::~allocator(std::allocator<std::pair<const std::string, Real>> *)
  -> DELETED: (376,43) std::allocator<std::pair<const std::string, Real>>::~allocator(std::allocator<std::pair<const std::string, Real>> *)
  -> INLINE: (376,43) std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>>::unordered_map(std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>> *, std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>>::size_type, const std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>>::hasher &, const std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>>::key_equal &, const std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>>::allocator_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (376,43) std::allocator<std::pair<const std::string, Real>>::allocator(std::allocator<std::pair<const std::string, Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (378,38) std::pair<std::string, Real>::~pair(std::pair<std::string, Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (378,38) std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>>::insert<std::pair<std::string, Real>, void>(std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>> *, std::pair<std::string, Real> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (378,89) std::pair<std::string, Real>::~pair(std::pair<std::string, Real> *)
  -> INLINE: (378,89) std::pair<std::string, Real>::pair<const char (&)[19], void>(std::pair<std::string, Real> *, const char (&)[19], const Real &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (379,38) std::pair<std::string, Real>::~pair(std::pair<std::string, Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (379,38) std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>>::insert<std::pair<std::string, Real>, void>(std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>> *, std::pair<std::string, Real> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (379,83) std::pair<std::string, Real>::~pair(std::pair<std::string, Real> *)
  -> INLINE: (379,83) std::pair<std::string, Real>::pair<const char (&)[13], void>(std::pair<std::string, Real> *, const char (&)[13], const Real &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/hashtable.h(1163,15) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(378,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/hashtable.h(1705,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(378,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/hashtable.h(1163,15) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(379,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/hashtable.h(1705,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(379,38)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/hashtable.h(780,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(255,16):remark #34026: call to memcmp implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/hashtable.h(780,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/hashtable_policy.h(769,43):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/char_traits.h(255,16):remark #34026: call to memcmp implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/hashtable.h(780,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/hashtable_policy.h(769,43):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp(375,1):remark #34051: REGISTER ALLOCATION : [_ZNK57FlowModelMonitoringStatisticsUtilitiesFourEqnConservative26getMonitoringStatisticsMapEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/four-eqn_conservative/FlowModelMonitoringStatisticsUtilitiesFourEqnConservative.cpp:375

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     386
            Global    :     102
            Local     :     284
        Regenerable   :      61
        Spilled       :       9
        
    Routine stack
        Variables     :      62 bytes*
            Reads     :      22 [4.98e+00 ~ 2.2%]
            Writes    :      25 [3.83e+00 ~ 1.7%]
        Spills        :      24 bytes*
            Reads     :      10 [2.85e+00 ~ 1.3%]
            Writes    :       4 [2.97e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::pair<std::string, Real>::~pair(std::pair<std::string, Real> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_pair.h(96,12):remark #34051: REGISTER ALLOCATION : [_ZNSt4pairISsdED1Ev] /usr/include/c++/4.8.5/bits/stl_pair.h:96

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      19
            Global    :      10
            Local     :       9
        Regenerable   :       5
        Spilled       :       0
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>>::~unordered_map(std::unordered_map<std::string, Real, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, Real>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/hashtable.h(759,7) inlined into /usr/include/c++/4.8.5/bits/unordered_map.h(98,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/hashtable.h(1642,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/unordered_map.h(97,11):remark #34051: REGISTER ALLOCATION : [_ZNSt13unordered_mapISsdSt4hashISsESt8equal_toISsESaISt4pairIKSsdEEED1Ev] /usr/include/c++/4.8.5/bits/unordered_map.h:97

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r8 r14-r15]
        
    Routine temporaries
        Total         :      31
            Global    :      13
            Local     :      18
        Regenerable   :       7
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.33e+00 ~ 2.8%]
            Writes    :       3 [2.33e+00 ~ 2.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MPIHelper::~MPIHelper(MPIHelper *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (MPIHelper::~MPIHelper(MPIHelper *)) /home/akula/HAMeRS_IB/HAMeRS/include/util/MPI_helpers/MPIHelper.hpp(16,7)

===========================================================================

Begin optimization report for: MPIHelper::~MPIHelper(MPIHelper *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (MPIHelper::~MPIHelper(MPIHelper *const)) /home/akula/HAMeRS_IB/HAMeRS/include/util/MPI_helpers/MPIHelper.hpp(16,7)

===========================================================================

Begin optimization report for: FlowModelMPIHelper::FlowModelMPIHelper(FlowModelMPIHelper *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<FlowModel> &, const bool)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelMPIHelper::FlowModelMPIHelper(FlowModelMPIHelper *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<FlowModel> &, const bool)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelper.hpp(18,9)

===========================================================================

Begin optimization report for: FlowModelMPIHelper::~FlowModelMPIHelper(FlowModelMPIHelper *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelMPIHelper::~FlowModelMPIHelper(FlowModelMPIHelper *)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelper.hpp(15,7)

===========================================================================

Begin optimization report for: FlowModelMPIHelper::~FlowModelMPIHelper(FlowModelMPIHelper *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelMPIHelper::~FlowModelMPIHelper(FlowModelMPIHelper *const)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelper.hpp(15,7)

===========================================================================

Begin optimization report for: FlowModelMPIHelperAverage::FlowModelMPIHelperAverage(FlowModelMPIHelperAverage *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<FlowModel> &, bool)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelMPIHelperAverage::FlowModelMPIHelperAverage(FlowModelMPIHelperAverage *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<FlowModel> &, bool)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelperAverage.hpp(27,9)

===========================================================================

Begin optimization report for: FlowModelMPIHelperMaxMin::FlowModelMPIHelperMaxMin(FlowModelMPIHelperMaxMin *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<FlowModel> &, bool)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelMPIHelperMaxMin::FlowModelMPIHelperMaxMin(FlowModelMPIHelperMaxMin *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<FlowModel> &, bool)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/MPI_helpers/FlowModelMPIHelperMaxMin.hpp(27,9)

===========================================================================

Begin optimization report for: SAMRAI::tbox::SAMRAI_MPI::getSAMRAIWorld()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::SAMRAI_MPI::getSAMRAIWorld()) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/SAMRAI_MPI.h(169,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::SAMRAI_MPI::getRank(const SAMRAI::tbox::SAMRAI_MPI *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::SAMRAI_MPI::getRank(const SAMRAI::tbox::SAMRAI_MPI *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/SAMRAI_MPI.h(217,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(73,4)

===========================================================================

Begin optimization report for: std::scientific(std::ios_base &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/ios_base.h(967,3):remark #34051: REGISTER ALLOCATION : [_ZSt10scientificRSt8ios_base] /usr/include/c++/4.8.5/bits/ios_base.h:967

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [438] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [__sti__$E] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       7
            Local     :       6
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Hashtable<std::string, std::pair<const std::string, Real>, std::allocator<std::pair<const std::string, Real>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>>::_M_deallocate_node(std::_Hashtable<std::string, std::pair<const std::string, Real>, std::allocator<std::pair<const std::string, Real>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>> *, std::_Hashtable<std::string, std::pair<const std::string, Real>, std::allocator<std::pair<const std::string, Real>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>>::__node_type *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/hashtable.h(745,5):remark #34051: REGISTER ALLOCATION : [_ZNSt10_HashtableISsSt4pairIKSsdESaIS2_ENSt8__detail10_Select1stESt8equal_toISsESt4hashISsENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb1ELb0ELb1EEEE18_M_deallocate_nodeEPNS4_10_Hash_nodeIS2_Lb1EEE] /usr/include/c++/4.8.5/bits/hashtable.h:745

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Hashtable<std::string, std::pair<const std::string, Real>, std::allocator<std::pair<const std::string, Real>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>>::_M_node_allocator(std::_Hashtable<std::string, std::pair<const std::string, Real>, std::allocator<std::pair<const std::string, Real>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/hashtable.h(331,7):remark #34051: REGISTER ALLOCATION : [_ZNSt10_HashtableISsSt4pairIKSsdESaIS2_ENSt8__detail10_Select1stESt8equal_toISsESt4hashISsENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb1ELb0ELb1EEEE17_M_node_allocatorEv] /usr/include/c++/4.8.5/bits/hashtable.h:331

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
