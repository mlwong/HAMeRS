Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *)) [3] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp(42,44)
  -> INLINE: (42,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (42,45) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (42,45) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp(42,44):remark #34051: REGISTER ALLOCATION : [_ZN23FlowModelBasicUtilitiesD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp:42

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r12-r14]
        
    Routine temporaries
        Total         :      41
            Global    :      20
            Local     :      21
        Regenerable   :      10
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *const)) [4] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp(42,17)
  -> INLINE: (42,17) FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *)
    -> INLINE: (42,45) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (42,45) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (42,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp(42,17):remark #34051: REGISTER ALLOCATION : [_ZN23FlowModelBasicUtilitiesD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp:42

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      42
            Global    :      20
            Local     :      22
        Regenerable   :      10
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *const)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp(42,17)

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::~FlowModelBasicUtilitiesSingleSpecies(FlowModelBasicUtilitiesSingleSpecies *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::~FlowModelBasicUtilitiesSingleSpecies(FlowModelBasicUtilitiesSingleSpecies *)) [6] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.hpp(24,49)
  -> INLINE: (24,50) FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *const)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp:(42,17) FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *)
      -> INLINE: (42,45) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (42,45) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (42,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (24,50) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.hpp(24,49):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpeciesD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.hpp:24

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      55
            Global    :      26
            Local     :      29
        Regenerable   :      13
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::~FlowModelBasicUtilitiesSingleSpecies(FlowModelBasicUtilitiesSingleSpecies *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::~FlowModelBasicUtilitiesSingleSpecies(FlowModelBasicUtilitiesSingleSpecies *const)) [7] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.hpp(24,9)
  -> INLINE: (24,9) FlowModelBasicUtilitiesSingleSpecies::~FlowModelBasicUtilitiesSingleSpecies(FlowModelBasicUtilitiesSingleSpecies *)
    -> INLINE: (24,50) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (24,50) FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *const)
      -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp:(42,17) FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *)
        -> INLINE: (42,45) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
           {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
        -> INLINE: (42,45) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
           {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
        -> INLINE: (42,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
           {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.hpp(24,9):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpeciesD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.hpp:24

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbp rsi rdi r12-r13]
        
    Routine temporaries
        Total         :      56
            Global    :      26
            Local     :      30
        Regenerable   :      13
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::convertPrimitiveVariablesToConservativeVariables(FlowModelBasicUtilitiesSingleSpecies *, const std::vector<const Real *, std::allocator<const Real *>> &, const std::vector<Real *, std::allocator<Real *>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::convertPrimitiveVariablesToConservativeVariables(FlowModelBasicUtilitiesSingleSpecies *, const std::vector<const Real *, std::allocator<const Real *>> &, const std::vector<Real *, std::allocator<Real *>> &)) [8] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1223,1)
  -> INDIRECT- (VIRTUAL): (1251,71)  EXPR_CONV.SI64.P64(*((SI64*) (__$U128_V$eb0.0.787->__vptr_V$11c + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
  -> INLINE: (1251,71) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> (1254,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (1254,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (1255,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1255,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1256,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (1256,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (1258,23) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1259,27) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1260,33) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1264,31) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1264,59) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1265,37) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1265,65) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1268,37) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1270,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U129_V$eb1.0.787->__vptr_V$11c + EXPR_CONV.SI32.I64(48(SI32)) * 8(I64))))
  -> INLINE: (1273,58) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1273,58)  EXPR_CONV.SI64.P64(*((SI64*) (__$U12a_V$eb2.0.787->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (1273,80) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1275,14) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1276,14) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1276,25) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INDIRECT- (VIRTUAL): (1277,13)  EXPR_CONV.SI64.P64(*((SI64*) (__$U12b_V$eb3.0.787->__vptr_V$111 + EXPR_CONV.SI32.I64(13(SI32)) * 8(I64))))
  -> INLINE: (1280,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1282,16) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1282,51) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1282,59) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1284,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1286,16) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1286,52) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1286,60) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1286,70) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1286,78) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1288,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1290,16) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1290,52) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1290,60) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1290,70) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1290,78) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1290,88) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1290,96) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1294,7) std::vector<Real *, std::allocator<Real *>>::operator[](const std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type) const
  -> INLINE: (1294,15) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1295,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1295,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1297,11) std::vector<Real *, std::allocator<Real *>>::operator[](const std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type) const
  -> INLINE: (1297,25) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1297,33) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (1299,7) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1299,7) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1299,7) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1299,7) std::vector<Real *, std::allocator<Real *>>::operator[](const std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type) const
  -> INLINE: (1299,18) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1258,23)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1258,23)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1258,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1258,23)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1258,23)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1258,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1262,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1295,33)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between conservative_variables->_M_start[di+1][0] (1297:11) and **primitive_variables->_M_start (1297:11)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1295,33)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1223,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies48convertPrimitiveVariablesToConservativeVariablesERKSt6vectorIPKdSaIS2_EERKS0_IPdSaIS7_EE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:1223

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :     275
            Global    :      90
            Local     :     185
        Regenerable   :      50
        Spilled       :      17
        
    Routine stack
        Variables     :      92 bytes*
            Reads     :      42 [5.38e+01 ~ 9.8%]
            Writes    :      23 [2.87e+01 ~ 5.2%]
        Spills        :      96 bytes*
            Reads     :      27 [1.26e+01 ~ 2.3%]
            Writes    :      21 [9.78e+00 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::_M_get_Tp_allocator(std::_Vector_base<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::size(const std::vector<Real *, std::allocator<Real *>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIPdSaIS0_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::_M_deallocate(std::_Vector_base<Real *, std::allocator<Real *>> *, std::_Vector_base<Real *, std::allocator<Real *>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EE13_M_deallocateEPS0_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::~_Vector_base(std::_Vector_base<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::convertPrimitiveVariablesToConservativeVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::convertPrimitiveVariablesToConservativeVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)) [18] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1310,1)
  -> (1311,22) std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic>::expired(const std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1313,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1313,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1313,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1313,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1313,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1313,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1313,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1313,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1313,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1313,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1313,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1313,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1313,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1313,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1313,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1319,64) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (1319,64) std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const
  -> INLINE: (1320,46) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1326,42) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> (1327,56) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (1333,79) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1333,82) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1334,9) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1336,73) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1336,76) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1337,9) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1343,83) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1343,86) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1344,9) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (1344,23) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (1346,77) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1346,80) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1347,9) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (1347,23) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (1360,67) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1360,67) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1362,61) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1362,65) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1362,67) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (1365,64) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1365,64) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1367,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1367,59) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1367,61) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (1372,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1372,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1372,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1372,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1372,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1372,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1372,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1372,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1372,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1372,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1372,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1372,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1372,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1372,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1372,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1372,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1381,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1381,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1381,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1381,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1381,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1381,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1381,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1381,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1381,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1381,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1381,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1381,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1381,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1381,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1381,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1381,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1392,67) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1392,67) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1395,35) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1395,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1395,41) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (1395,50) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (1397,44) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1399,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1399,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1399,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1399,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1399,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1399,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1399,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1399,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1399,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1399,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1399,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1399,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1399,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1399,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1399,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (1399,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1407,64) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1407,64) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1410,32) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1410,36) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1410,38) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (1410,47) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (1412,41) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1414,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1414,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1414,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1414,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1414,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1414,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1414,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1414,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1414,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1414,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1414,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1414,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1414,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1414,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1414,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (1414,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1422,67) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1422,67) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> (1424,41) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1424,66) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1424,70) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1424,72) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1426,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1426,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1426,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1426,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1426,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1426,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1426,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1426,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1426,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1426,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1426,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1426,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1426,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1426,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1426,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1426,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1434,64) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1434,64) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> (1436,38) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1436,60) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1436,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1436,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1438,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1438,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1438,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1438,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1438,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1438,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1438,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1438,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1438,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1438,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1438,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1438,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1438,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1438,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1438,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1438,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1446,37) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1448,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1448,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1448,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1448,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1448,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1448,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1448,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1448,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1448,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1448,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1448,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1448,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1448,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1448,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1448,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1448,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1459,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1459,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1460,7) std::vector<Real *, std::allocator<Real *>>::resize(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (1462,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1462,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1463,7) std::vector<Real *, std::allocator<Real *>>::resize(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (1473,51) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1473,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<SAMRAI::pdat::SideData<Real>>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, SAMRAI::pdat::SideData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1473,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (1476,51) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1476,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<SAMRAI::pdat::SideData<Real>>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, SAMRAI::pdat::SideData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1476,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (1479,51) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1479,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<SAMRAI::pdat::SideData<Real>>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, SAMRAI::pdat::SideData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1479,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (1489,71) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1489,71)  EXPR_CONV.SI64.P64(*((SI64*) (__$U13a_V$ecf.0.788->__vptr_V$11c + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
  -> (1492,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (1492,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (1493,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1493,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1494,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (1494,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (1496,23) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (1497,27) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (1498,33) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
  -> (1502,31) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
  -> INLINE: (1502,59) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (1503,37) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
  -> INLINE: (1503,65) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1506,37) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1508,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U13b_V$ed0.0.788->__vptr_V$11c + EXPR_CONV.SI32.I64(48(SI32)) * 8(I64))))
  -> (1510,5) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (1510,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1510,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1510,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (1510,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (1510,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (1510,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (1510,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (1510,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (1510,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1512,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1514,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1515,75) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1522,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1522,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1524,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1524,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1524,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (1528,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1528,54) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1528,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1528,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1534,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1534,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1536,44) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1536,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1536,50) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (1540,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1540,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1540,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1540,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1545,31) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1545,33) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1546,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1546,41) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1547,32) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1547,34) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1558,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1570,37) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1570,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1574,41) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1574,41)  EXPR_CONV.SI64.P64(*((SI64*) (__$U158_V$f17.0.788->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (1574,63) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (1574,65) EquationOfState::computeInternalEnergy(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (1591,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1591,43) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1604,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1604,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1617,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1619,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1619,42) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1622,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1624,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1625,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1627,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1628,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1629,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1631,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1632,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1633,79) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1640,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1640,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1642,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1642,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1642,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (1646,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1646,54) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1646,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1646,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1652,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1652,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1654,44) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1654,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1654,50) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (1658,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1658,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1658,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1658,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1663,31) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1663,33) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1664,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1664,41) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1665,32) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1665,34) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1679,43) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1695,41) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1695,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1700,41) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1700,41)  EXPR_CONV.SI64.P64(*((SI64*) (__$U15b_V$f30.0.788->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (1700,63) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (1700,65) EquationOfState::computeInternalEnergy(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (1722,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1722,47) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1741,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1741,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1742,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1742,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1761,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1763,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1763,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1764,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1764,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1773,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1773,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1775,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1775,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1775,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (1779,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1779,54) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1779,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1779,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1785,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1785,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1787,44) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1787,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1787,50) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (1791,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1791,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1791,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1791,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1796,31) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1796,33) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1797,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1797,41) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1798,32) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1798,34) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1812,43) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1828,41) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1828,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1833,41) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1833,41)  EXPR_CONV.SI64.P64(*((SI64*) (__$U15c_V$f31.0.788->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (1833,63) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (1833,65) EquationOfState::computeInternalEnergy(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (1855,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1855,47) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1874,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1874,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1875,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1875,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1894,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1896,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1896,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1897,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1897,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1901,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1903,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1904,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1905,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1907,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1908,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1909,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1910,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1911,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1913,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1914,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1915,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1916,79) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1917,79) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1924,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1924,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1926,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1926,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1926,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (1930,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1930,54) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1930,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1930,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1936,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1936,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1938,44) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1938,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1938,50) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (1942,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1942,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1942,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1942,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1947,31) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1947,33) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1948,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1948,41) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1949,32) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1949,34) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1967,47) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1988,45) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1988,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1994,41) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1994,41)  EXPR_CONV.SI64.P64(*((SI64*) (__$U15f_V$f6c.0.788->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (1994,63) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (1994,65) EquationOfState::computeInternalEnergy(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (2022,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2022,51) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2048,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2048,74) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2049,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2049,74) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2050,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2050,74) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2076,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2078,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2078,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2079,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2079,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2080,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2080,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2090,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (2090,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (2092,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (2092,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2092,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (2096,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2096,54) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (2096,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2096,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2102,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (2102,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (2104,44) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2104,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2104,50) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (2108,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2108,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2108,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2108,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2113,31) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2113,33) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2114,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2114,41) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2115,32) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2115,34) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2133,47) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2154,45) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2154,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2160,41) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2160,41)  EXPR_CONV.SI64.P64(*((SI64*) (__$U160_V$f6d.0.788->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (2160,63) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (2160,65) EquationOfState::computeInternalEnergy(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (2188,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2188,51) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2214,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2214,74) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2215,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2215,74) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2216,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2216,74) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2242,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2244,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2244,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2245,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2245,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2246,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2246,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2256,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (2256,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (2258,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (2258,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2258,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (2262,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2262,54) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (2262,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2262,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2268,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (2268,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (2270,44) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2270,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2270,50) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (2274,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2274,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2274,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2274,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2279,31) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2279,33) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2280,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2280,41) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2281,32) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2281,34) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2301,51) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2323,45) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2323,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2329,41) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2329,41)  EXPR_CONV.SI64.P64(*((SI64*) (__$U161_V$f6e.0.788->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (2329,63) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (2329,65) EquationOfState::computeInternalEnergy(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (2357,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2357,51) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2383,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2383,74) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2384,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2384,74) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2385,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2385,74) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2411,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2413,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2413,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2414,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2414,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2415,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2415,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1360,67)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   remark #25457: Number of partial sums replaced: 1
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1360,67)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1365,64)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   remark #25457: Number of partial sums replaced: 1
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1365,64)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1392,67)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1407,64)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1422,67)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1434,64)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1500,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1502,31) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1522,71)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1526,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[count_eqn] (1528:18) and Q.Q.Q.Q (1528:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1526,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1534,68)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1538,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[count_eqn] (1540:18) and V.V.V.V (1540:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1538,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1551,9)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1551,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1551,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1563,9)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1563,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1563,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1583,9)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1583,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1583,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1596,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[1][i+num_ghosts_0_conservative_var] (1604:14) and rho[i+num_ghosts_0_primitive_var] (1604:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1596,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1609,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[2][i+num_ghosts_0_conservative_var] (1617:14) and rho[i+num_ghosts_0_primitive_var] (1617:14)
   remark #25439: unrolled with remainder by 4  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1609,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1640,71)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1644,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[count_eqn] (1646:18) and Q.Q.Q.Q (1646:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1644,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1652,68)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1656,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[count_eqn] (1658:18) and V.V.V.V (1658:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1656,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1668,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (1671:13) and rho[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)* (1679:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1671,13)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1671,13)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1671,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1684,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (1687:13) and p[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)*(g (1695:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1687,13)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1687,13)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1687,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1708,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (1711:13) and Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (1722:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1711,13)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1711,13)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1711,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1727,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[1][idx_conservative_var] (1741:18) and Q.Q.Q.Q[2][idx_conservative_var] (1742:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1730,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[1][idx_conservative_var] (1741:18) and Q.Q.Q.Q[2][idx_conservative_var] (1742:18)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1730,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1747,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[3][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (1761:18) and Q.Q.Q.Q[3][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (1761:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1750,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[3][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (1761:18) and rho[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)* (1761:18)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1773,71)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1777,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[count_eqn] (1779:18) and Q.Q.Q.Q (1779:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1777,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1785,68)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1789,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[count_eqn] (1791:18) and V.V.V.V (1791:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1789,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1801,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (1806:13) and rho[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)* (1812:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1806,13)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1806,13)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1806,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1817,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (1822:13) and p[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)*gh (1828:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1822,13)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1822,13)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1822,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1841,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (1846:13) and Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (1855:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1846,13)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1846,13)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1846,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1860,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[1][idx_conservative_var] (1874:18) and Q.Q.Q.Q[2][idx_conservative_var] (1875:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1865,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[1][idx_conservative_var] (1874:18) and Q.Q.Q.Q[2][idx_conservative_var] (1875:18)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1865,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1880,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[3][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (1894:18) and Q.Q.Q.Q[3][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (1894:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1885,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[3][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (1894:18) and rho[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)* (1894:18)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1924,71)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1928,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[count_eqn] (1930:18) and Q.Q.Q.Q (1930:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1928,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1936,68)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1940,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[count_eqn] (1942:18) and V.V.V.V (1942:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1940,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1952,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (1957:17) and rho[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)* (1967:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1954,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (1957:17) and rho[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)* (1967:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1957,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1957,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1957,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1973,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (1978:17) and p[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)*(g (1988:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1975,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (1978:17) and p[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)*(g (1988:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1978,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1978,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1978,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2002,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (2007:17) and Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2022:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2004,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (2007:17) and Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2022:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2007,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2007,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2007,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2028,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[1][idx_conservative_var] (2048:22) and Q.Q.Q.Q[3][idx_conservative_var] (2050:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2030,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[1][idx_conservative_var] (2048:22) and Q.Q.Q.Q[3][idx_conservative_var] (2050:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2033,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[1][idx_conservative_var] (2048:22) and Q.Q.Q.Q[3][idx_conservative_var] (2050:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2056,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2076:22) and Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2076:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2058,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2076:22) and Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2076:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2061,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2076:22) and rho[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)* (2076:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2090,71)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2094,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[count_eqn] (2096:18) and Q.Q.Q.Q (2096:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2094,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2102,68)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2106,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[count_eqn] (2108:18) and V.V.V.V (2108:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2106,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2118,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (2125:17) and rho[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)* (2133:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2120,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (2125:17) and rho[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)* (2133:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2125,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2125,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2125,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2139,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (2146:17) and p[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)*gh (2154:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2141,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (2146:17) and p[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)*gh (2154:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2146,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2146,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2146,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2168,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (2175:17) and Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2188:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2170,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (2175:17) and Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2188:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2175,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2175,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2175,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2194,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[1][idx_conservative_var] (2214:22) and Q.Q.Q.Q[3][idx_conservative_var] (2216:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2196,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[1][idx_conservative_var] (2214:22) and Q.Q.Q.Q[3][idx_conservative_var] (2216:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2201,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[1][idx_conservative_var] (2214:22) and Q.Q.Q.Q[3][idx_conservative_var] (2216:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2222,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2242:22) and Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2242:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2224,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2242:22) and Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2242:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2229,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2242:22) and rho[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)* (2242:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2256,71)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2260,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[count_eqn] (2262:18) and Q.Q.Q.Q (2262:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2260,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2268,68)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2272,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[count_eqn] (2274:18) and V.V.V.V (2274:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2272,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2284,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (2293:21) and rho[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)* (2301:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2286,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (2293:21) and rho[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)* (2301:25)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2290,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (2293:21) and rho[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)* (2301:25)

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2293,21)
            remark #25401: memcopy(with guard) generated
            remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2293,21)
            <Multiversioned v2>
               remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
               remark #25439: unrolled with remainder by 2  
            LOOP END

            LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2293,21)
            <Remainder, Multiversioned v2>
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2308,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (2315:17) and p[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)*gh (2323:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2312,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (2315:17) and p[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)*gh (2323:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2315,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2315,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2315,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2337,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (2344:17) and Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2357:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2341,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (2344:17) and Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2357:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2344,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2344,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2344,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2363,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[1][idx_conservative_var] (2383:22) and Q.Q.Q.Q[3][idx_conservative_var] (2385:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2367,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[1][idx_conservative_var] (2383:22) and Q.Q.Q.Q[3][idx_conservative_var] (2385:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2370,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[1][idx_conservative_var] (2383:22) and Q.Q.Q.Q[3][idx_conservative_var] (2385:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2391,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2411:22) and Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2411:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2395,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2411:22) and Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2411:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2398,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[4][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (2411:22) and rho[i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitive_var)* (2411:22)
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1551,9):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1563,9):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1583,9):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1671,13):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1687,13):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1711,13):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1957,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1978,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2007,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2125,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2146,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2175,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2293,21):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2315,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2344,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1806,13):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1822,13):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1846,13):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1310,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies48convertPrimitiveVariablesToConservativeVariablesERSt6vectorISt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEESaIS6_EERKS8_] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:1310

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   28[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :    4621
            Global    :    1316
            Local     :    3305
        Regenerable   :     967
        Spilled       :     273
        
    Routine stack
        Variables     :    3884 bytes*
            Reads     :     294 [2.65e+02 ~ 2.4%]
            Writes    :     423 [6.64e+02 ~ 6.0%]
        Spills        :    2136 bytes*
            Reads     :    1016 [7.62e+02 ~ 6.9%]
            Writes    :     465 [1.40e+02 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_vector.h(920,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EE9push_backEOS1_] /usr/include/c++/4.8.5/bits/stl_vector.h:920

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      35
            Global    :      17
            Local     :      18
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_vector.h(920,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EE9push_backEOS0_] /usr/include/c++/4.8.5/bits/stl_vector.h:920

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      35
            Global    :      17
            Local     :      18
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfState::computeInternalEnergy(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfState::computeInternalEnergy(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const) [22] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(354,9)
  -> INDIRECT- (VIRTUAL): (362,17)  EXPR_CONV.SI64.P64(*((SI64*) (this_79926_V$48b.0.6->__vptr_V$111 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(354,9):remark #34051: REGISTER ALLOCATION : [_ZNK15EquationOfState21computeInternalEnergyERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_RKSt6vectorIPKdSaISB_EEi] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp:354

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :      38
            Global    :      13
            Local     :      25
        Regenerable   :       5
        Spilled       :       6
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::resize(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_vector.h(665,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EE6resizeEm] /usr/include/c++/4.8.5/bits/stl_vector.h:665

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rsi rdi r12-r15 zmm0]
        
    Routine temporaries
        Total         :      54
            Global    :      25
            Local     :      29
        Regenerable   :       7
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       3 [5.75e-02 ~ 0.2%]
            Writes    :       3 [1.88e-02 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic>::expired(const std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(1277,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt10__weak_ptrI9FlowModelLN9__gnu_cxx12_Lock_policyE2EE7expiredEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:1277

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      17
            Global    :       9
            Local     :       8
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/shared_ptr_base.h(236,30) inlined into /usr/include/c++/4.8.5/bits/shared_ptr.h(503,30)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(246,8):remark #34028: __atomic_compare_exchange_4: non constant memory order specified. Defaulting to "success" memory order.
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr.h(495,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt8weak_ptrI9FlowModelE4lockEv] /usr/include/c++/4.8.5/bits/shared_ptr.h:495

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      49
            Global    :      19
            Local     :      30
        Regenerable   :       9
        Spilled       :       1
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       5 [3.52e+00 ~ 5.0%]
            Writes    :       3 [6.34e-01 ~ 0.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<FlowModel>::shared_ptr(std::shared_ptr<FlowModel> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr.h(101,29):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI9FlowModelEC1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       6
            Local     :       3
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(67,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EE7reserveEm] /usr/include/c++/4.8.5/bits/vector.tcc:67

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      34
            Global    :      18
            Local     :      16
        Regenerable   :       3
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(67,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EE7reserveEm] /usr/include/c++/4.8.5/bits/vector.tcc:67

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      34
            Global    :      18
            Local     :      16
        Regenerable   :       3
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_vector.h(665,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEE6resizeEm] /usr/include/c++/4.8.5/bits/stl_vector.h:665

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      58
            Global    :      29
            Local     :      29
        Regenerable   :      11
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       4 [6.76e-02 ~ 0.2%]
            Writes    :       4 [2.89e-02 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI9FlowModelED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::checkCellDataOfConservativeVariablesBounded(FlowModelBasicUtilitiesSingleSpecies *, std::shared_ptr<SAMRAI::pdat::CellData<int>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::checkCellDataOfConservativeVariablesBounded(FlowModelBasicUtilitiesSingleSpecies *, std::shared_ptr<SAMRAI::pdat::CellData<int>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> &)) [35] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2430,1)
  -> INLINE: (2434,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2434,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2434,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2434,5) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2434,5) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2434,5) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2434,5) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2434,5) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2434,5) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2434,5) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2434,5) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2434,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2434,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2434,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2434,5) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2434,5) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (2434,5) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2430,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies43checkCellDataOfConservativeVariablesBoundedERSt10shared_ptrIN6SAMRAI4pdat8CellDataIiEEERKSt6vectorIS0_INS3_IdEEESaIS9_EE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:2430

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     311
            Global    :      79
            Local     :     232
        Regenerable   :     123
        Spilled       :       6
        
    Routine stack
        Variables     :     421 bytes*
            Reads     :      24 [6.84e+00 ~ 5.2%]
            Writes    :      51 [2.33e+01 ~ 17.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::checkSideDataOfConservativeVariablesBounded(FlowModelBasicUtilitiesSingleSpecies *, std::shared_ptr<SAMRAI::pdat::SideData<int>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::checkSideDataOfConservativeVariablesBounded(FlowModelBasicUtilitiesSingleSpecies *, std::shared_ptr<SAMRAI::pdat::SideData<int>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)) [36] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2450,1)
  -> INLINE: (2451,22) std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic>::expired(const std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2453,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2453,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2453,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2453,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2453,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2453,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2453,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2453,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2453,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2453,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2453,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2453,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2453,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2453,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2453,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2459,64) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (2459,64) std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const
  -> INLINE: (2460,46) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2466,42) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> (2467,56) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2473,57) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2473,59) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2475,79) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2475,82) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2476,9) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2482,83) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2482,86) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2483,9) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (2483,23) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2489,49) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (2491,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2491,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2491,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2491,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2491,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2491,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2491,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2491,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2491,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2491,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2491,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2491,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2491,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2491,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2491,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2491,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2505,35) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2505,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2505,41) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (2505,50) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2507,44) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2509,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2509,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2509,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2509,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2509,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2509,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2509,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2509,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2509,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2509,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2509,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2509,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2509,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2509,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2509,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2509,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2516,60) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2516,62) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (2516,71) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2517,28) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2519,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2519,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2519,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2519,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2519,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2519,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2519,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2519,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2519,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2519,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2519,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2519,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2519,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2519,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2519,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2519,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2528,41) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2528,66) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2528,70) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2528,72) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2530,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2530,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2530,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2530,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2530,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2530,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2530,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2530,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2530,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2530,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2530,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2530,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2530,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2530,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2530,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2530,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2538,25) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2540,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2540,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2540,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2540,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2540,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2540,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2540,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2540,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2540,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2540,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2540,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2540,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2540,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2540,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2540,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2540,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2547,17) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> (2547,19) SAMRAI::pdat::SideData<int>::fillAll(SAMRAI::pdat::SideData<int> *, const int &)
  -> (2553,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (2553,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (2554,7) std::vector<Real *, std::allocator<Real *>>::resize(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2558,5) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2558,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (2558,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2560,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2562,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2568,35) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2568,37) SAMRAI::pdat::SideData<int>::getPointer(SAMRAI::pdat::SideData<int> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2572,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2572,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2572,47) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2572,49) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2584,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2593,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2603,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2605,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2606,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2608,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2609,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2610,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2616,35) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2616,37) SAMRAI::pdat::SideData<int>::getPointer(SAMRAI::pdat::SideData<int> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2620,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2620,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2620,47) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2620,49) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2635,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2644,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2659,35) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2659,37) SAMRAI::pdat::SideData<int>::getPointer(SAMRAI::pdat::SideData<int> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2663,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2663,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2663,47) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2663,49) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2678,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2687,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2698,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2700,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2701,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2702,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2704,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2705,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2706,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2707,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2708,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2714,35) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2714,37) SAMRAI::pdat::SideData<int>::getPointer(SAMRAI::pdat::SideData<int> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2718,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2718,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2718,47) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2718,49) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2737,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2746,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2762,35) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2762,37) SAMRAI::pdat::SideData<int>::getPointer(SAMRAI::pdat::SideData<int> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2766,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2766,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2766,47) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2766,49) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2785,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2794,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2810,35) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2810,37) SAMRAI::pdat::SideData<int>::getPointer(SAMRAI::pdat::SideData<int> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2814,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2814,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2814,47) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2814,49) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2833,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2842,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2502,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2526,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2570,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[ei] (2572:14) and Q.Q.Q.Q (2572:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2570,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2577,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between are_bounded[idx_face] (2586:17) and this->d_num_eqn (2593:13)
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2618,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[ei] (2620:14) and Q.Q.Q.Q (2620:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2618,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2624,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (2637:21) and are_bounded[idx_face] (2650:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2627,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between are_bounded[idx_face] (2637:21) and this->d_num_eqn (2644:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2661,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[ei] (2663:14) and Q.Q.Q.Q (2663:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2661,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2667,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (2680:21) and are_bounded[idx_face] (2693:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2672,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between are_bounded[idx_face] (2680:21) and this->d_num_eqn (2687:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2716,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[ei] (2718:14) and Q.Q.Q.Q (2718:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2716,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2722,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (2739:25) and are_bounded[idx_face] (2752:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2724,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (2739:25) and are_bounded[idx_face] (2752:25)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2727,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between are_bounded[idx_face] (2739:25) and this->d_num_eqn (2746:21)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2764,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[ei] (2766:14) and Q.Q.Q.Q (2766:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2764,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2770,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (2787:25) and are_bounded[idx_face] (2800:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2772,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (2787:25) and are_bounded[idx_face] (2800:25)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2777,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between are_bounded[idx_face] (2787:25) and this->d_num_eqn (2794:21)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2812,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[ei] (2814:14) and Q.Q.Q.Q (2814:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2812,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2818,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (2835:25) and are_bounded[idx_face] (2848:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2822,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (2835:25) and are_bounded[idx_face] (2848:25)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2825,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between are_bounded[idx_face] (2835:25) and this->d_num_eqn (2842:21)
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2450,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies43checkSideDataOfConservativeVariablesBoundedERSt10shared_ptrIN6SAMRAI4pdat8SideDataIiEEERKSt6vectorIS0_INS3_IdEEESaIS9_EE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:2450

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :    2173
            Global    :     529
            Local     :    1644
        Regenerable   :     750
        Spilled       :      42
        
    Routine stack
        Variables     :    2874 bytes*
            Reads     :     179 [1.13e+02 ~ 3.6%]
            Writes    :     319 [3.99e+02 ~ 12.8%]
        Spills        :     272 bytes*
            Reads     :      67 [3.15e+01 ~ 1.0%]
            Writes    :      51 [2.01e+01 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__weak_count<__gnu_cxx::_S_atomic>::_M_get_use_count(const std::__weak_count<__gnu_cxx::_S_atomic> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(672,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt12__weak_countILN9__gnu_cxx12_Lock_policyE2EE16_M_get_use_countEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:672

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       9
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<int>::fillAll(SAMRAI::pdat::SideData<int> *, const int &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<int>::fillAll(SAMRAI::pdat::SideData<int> *, const int &)) [38] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(741,1)
  -> INLINE: (742,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (742,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (742,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (742,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (743,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (744,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (744,21) SAMRAI::pdat::ArrayData<int>::fillAll(SAMRAI::pdat::ArrayData<int> *, const int &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1008,15) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1009,27) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(742,33)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1025,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(745,21)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(741,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIiE7fillAllERKi] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:741

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rsi rdi r8-r13 zmm0]
        
    Routine temporaries
        Total         :      47
            Global    :      25
            Local     :      22
        Regenerable   :       1
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [1.01e+00 ~ 1.0%]
            Writes    :       2 [1.01e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::checkCellDataOfPrimitiveVariablesBounded(FlowModelBasicUtilitiesSingleSpecies *, std::shared_ptr<SAMRAI::pdat::CellData<int>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::checkCellDataOfPrimitiveVariablesBounded(FlowModelBasicUtilitiesSingleSpecies *, std::shared_ptr<SAMRAI::pdat::CellData<int>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> &)) [39] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2864,1)
  -> INLINE: (2868,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2868,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2868,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2868,5) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2868,5) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2868,5) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2868,5) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2868,5) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2868,5) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2868,5) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2868,5) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2868,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2868,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2868,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2868,5) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2868,5) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (2868,5) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2864,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies40checkCellDataOfPrimitiveVariablesBoundedERSt10shared_ptrIN6SAMRAI4pdat8CellDataIiEEERKSt6vectorIS0_INS3_IdEEESaIS9_EE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:2864

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     311
            Global    :      79
            Local     :     232
        Regenerable   :     123
        Spilled       :       6
        
    Routine stack
        Variables     :     421 bytes*
            Reads     :      24 [6.84e+00 ~ 5.2%]
            Writes    :      51 [2.33e+01 ~ 17.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::checkSideDataOfPrimitiveVariablesBounded(FlowModelBasicUtilitiesSingleSpecies *, std::shared_ptr<SAMRAI::pdat::SideData<int>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::checkSideDataOfPrimitiveVariablesBounded(FlowModelBasicUtilitiesSingleSpecies *, std::shared_ptr<SAMRAI::pdat::SideData<int>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)) [40] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2884,1)
  -> INLINE: (2885,22) std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic>::expired(const std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2887,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2887,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2887,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2887,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2887,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2887,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2887,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2887,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2887,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2887,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2887,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2887,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2887,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2887,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2887,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2893,64) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (2893,64) std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const
  -> INLINE: (2894,46) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2900,42) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> (2901,56) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2907,57) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2907,59) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2909,73) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2909,76) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2910,9) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2916,77) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2916,80) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2917,9) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (2917,23) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2923,46) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (2925,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2925,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2925,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2925,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2925,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2925,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2925,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2925,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2925,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2925,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2925,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2925,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2925,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2925,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2925,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2925,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2939,32) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2939,36) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2939,38) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (2939,47) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2941,41) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2943,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2943,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2943,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2943,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2943,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2943,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2943,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2943,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2943,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2943,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2943,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2943,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2943,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2943,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2943,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2943,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2950,60) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2950,62) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (2950,71) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2951,28) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2953,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2953,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2953,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2953,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2953,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2953,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2953,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2953,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2953,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2953,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2953,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2953,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2953,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2953,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2953,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2953,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2962,38) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2962,60) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (2962,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2962,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (2964,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2964,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2964,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2964,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2964,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2964,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2964,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2964,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2964,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2964,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2964,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2964,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2964,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2964,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2964,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2964,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2972,25) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2974,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2974,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2974,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2974,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2974,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2974,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2974,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2974,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2974,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2974,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2974,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2974,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2974,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2974,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2974,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2974,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2981,17) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> (2981,19) SAMRAI::pdat::SideData<int>::fillAll(SAMRAI::pdat::SideData<int> *, const int &)
  -> (2987,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (2987,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (2988,7) std::vector<Real *, std::allocator<Real *>>::resize(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (2992,5) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2992,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (2992,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2994,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2996,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3002,35) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3002,37) SAMRAI::pdat::SideData<int>::getPointer(SAMRAI::pdat::SideData<int> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3006,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3006,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (3006,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3006,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3018,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3027,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3037,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3039,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3040,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3042,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3043,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3044,79) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3050,35) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3050,37) SAMRAI::pdat::SideData<int>::getPointer(SAMRAI::pdat::SideData<int> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3054,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3054,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (3054,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3054,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3069,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3078,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3093,35) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3093,37) SAMRAI::pdat::SideData<int>::getPointer(SAMRAI::pdat::SideData<int> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3097,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3097,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (3097,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3097,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3112,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3121,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3132,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3134,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3135,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3136,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3138,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3139,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3140,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3141,79) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3142,79) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3148,35) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3148,37) SAMRAI::pdat::SideData<int>::getPointer(SAMRAI::pdat::SideData<int> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3152,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3152,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (3152,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3152,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3171,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3180,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3196,35) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3196,37) SAMRAI::pdat::SideData<int>::getPointer(SAMRAI::pdat::SideData<int> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3200,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3200,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (3200,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3200,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3219,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3228,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3244,35) std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3244,37) SAMRAI::pdat::SideData<int>::getPointer(SAMRAI::pdat::SideData<int> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3248,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3248,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (3248,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3248,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3267,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3276,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2936,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2960,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3004,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[ei] (3006:14) and V.V.V.V (3006:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3004,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3011,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between are_bounded[idx_face] (3020:17) and this->d_num_eqn (3027:13)
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3052,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[ei] (3054:14) and V.V.V.V (3054:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3052,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3058,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (3071:21) and are_bounded[idx_face] (3084:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3061,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between are_bounded[idx_face] (3071:21) and this->d_num_eqn (3078:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3095,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[ei] (3097:14) and V.V.V.V (3097:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3095,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3101,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (3114:21) and are_bounded[idx_face] (3127:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3106,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between are_bounded[idx_face] (3114:21) and this->d_num_eqn (3121:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3150,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[ei] (3152:14) and V.V.V.V (3152:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3150,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3156,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (3173:25) and are_bounded[idx_face] (3186:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3158,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (3173:25) and are_bounded[idx_face] (3186:25)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3161,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between are_bounded[idx_face] (3173:25) and this->d_num_eqn (3180:21)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3198,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[ei] (3200:14) and V.V.V.V (3200:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3198,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3204,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (3221:25) and are_bounded[idx_face] (3234:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3206,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (3221:25) and are_bounded[idx_face] (3234:25)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3211,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between are_bounded[idx_face] (3221:25) and this->d_num_eqn (3228:21)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3246,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[ei] (3248:14) and V.V.V.V (3248:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3246,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3252,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (3269:25) and are_bounded[idx_face] (3282:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3256,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between are_bounded[idx_face] (3269:25) and are_bounded[idx_face] (3282:25)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3259,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between are_bounded[idx_face] (3269:25) and this->d_num_eqn (3276:21)
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(2884,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies40checkSideDataOfPrimitiveVariablesBoundedERSt10shared_ptrIN6SAMRAI4pdat8SideDataIiEEERKSt6vectorIS0_INS3_IdEEESaIS9_EE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:2884

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :    2173
            Global    :     529
            Local     :    1644
        Regenerable   :     750
        Spilled       :      42
        
    Routine stack
        Variables     :    2874 bytes*
            Reads     :     179 [1.13e+02 ~ 3.6%]
            Writes    :     319 [3.99e+02 ~ 12.8%]
        Spills        :     272 bytes*
            Reads     :      67 [3.15e+01 ~ 1.0%]
            Writes    :      51 [2.01e+01 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::registerDerivedVariablesForCharacteristicProjectionOfConservativeVariables(FlowModelBasicUtilitiesSingleSpecies *, const SAMRAI::hier::IntVector &, const AVERAGING::TYPE &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::registerDerivedVariablesForCharacteristicProjectionOfConservativeVariables(FlowModelBasicUtilitiesSingleSpecies *, const SAMRAI::hier::IntVector &, const AVERAGING::TYPE &)) [41] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3299,1)
  -> INLINE: (3302,22) std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic>::expired(const std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3304,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3304,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3304,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3304,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3304,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3304,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3304,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3304,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3304,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3304,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3304,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3304,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3304,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3304,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3304,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3310,64) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> INLINE: (3310,64) std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3313,24) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3315,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3315,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3315,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3315,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3315,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3315,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3315,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3315,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3315,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3315,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3315,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3315,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3315,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3315,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3315,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3315,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3322,5) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/shared_ptr_base.h(236,30) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3310,64)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(246,8):remark #34028: __atomic_compare_exchange_4: non constant memory order specified. Defaulting to "success" memory order.
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3299,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies74registerDerivedVariablesForCharacteristicProjectionOfConservativeVariablesERKN6SAMRAI4hier9IntVectorERKN9AVERAGING4TYPEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:3299

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     663
            Global    :     157
            Local     :     506
        Regenerable   :     255
        Spilled       :       9
        
    Routine stack
        Variables     :     850 bytes*
            Reads     :      54 [1.82e+01 ~ 5.9%]
            Writes    :     129 [5.89e+01 ~ 19.2%]
        Spills        :      32 bytes*
            Reads     :       4 [2.62e-01 ~ 0.1%]
            Writes    :       4 [2.62e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::registerDerivedVariablesForCharacteristicProjectionOfPrimitiveVariables(FlowModelBasicUtilitiesSingleSpecies *, const SAMRAI::hier::IntVector &, const AVERAGING::TYPE &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::registerDerivedVariablesForCharacteristicProjectionOfPrimitiveVariables(FlowModelBasicUtilitiesSingleSpecies *, const SAMRAI::hier::IntVector &, const AVERAGING::TYPE &)) [42] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3334,1)
  -> INLINE: (3335,22) std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic>::expired(const std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3337,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3337,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3337,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3337,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3337,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3337,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3337,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3337,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3337,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3337,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3337,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3337,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3337,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3337,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3337,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3343,64) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> INLINE: (3343,64) std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3346,24) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3348,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3348,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3348,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3348,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3348,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3348,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3348,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3348,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3348,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3348,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3348,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3348,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3348,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3348,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3348,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3348,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3357,54) std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>::~allocator(std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>> *)
  -> INLINE: (3357,54) std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>::allocator(std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3357,54) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::unordered_map(std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::size_type, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::hasher &, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_equal &, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::allocator_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3357,54) std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>::~allocator(std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>> *)
  -> (3357,54) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::~unordered_map(std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *)
  -> INLINE: (3360,9) std::pair<std::string, SAMRAI::hier::IntVector>::~pair(std::pair<std::string, SAMRAI::hier::IntVector> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3360,9) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::insert<std::pair<std::string, SAMRAI::hier::IntVector>, void>(std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, std::pair<std::string, SAMRAI::hier::IntVector> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3360,64) std::pair<std::string, SAMRAI::hier::IntVector>::~pair(std::pair<std::string, SAMRAI::hier::IntVector> *)
  -> INLINE: (3360,64) std::pair<std::string, SAMRAI::hier::IntVector>::pair<const char (&)[12], void>(std::pair<std::string, SAMRAI::hier::IntVector> *, const char (&)[12], const SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3362,19) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3362,46) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3362,46) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::~unordered_map(std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3362,46)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1a4_V$10b3.0.794->__vptr_V$1f9_2.41 + EXPR_CONV.SI32.I64(14(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/shared_ptr_base.h(236,30) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3343,64)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/hashtable.h(1163,15) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3360,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/hashtable.h(1705,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3360,9)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/hashtable.h(759,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3362,46)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(246,8):remark #34028: __atomic_compare_exchange_4: non constant memory order specified. Defaulting to "success" memory order.
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/hashtable.h(780,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(255,16):remark #34026: call to memcmp implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/hashtable.h(780,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/hashtable_policy.h(769,43):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/usr/include/c++/4.8.5/bits/hashtable.h(1642,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/hashtable_policy.h(769,43):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3334,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies71registerDerivedVariablesForCharacteristicProjectionOfPrimitiveVariablesERKN6SAMRAI4hier9IntVectorERKN9AVERAGING4TYPEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:3334

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :    1008
            Global    :     239
            Local     :     769
        Regenerable   :     331
        Spilled       :      15
        
    Routine stack
        Variables     :     976 bytes*
            Reads     :      89 [2.76e+01 ~ 5.6%]
            Writes    :     181 [6.87e+01 ~ 13.9%]
        Spills        :      80 bytes*
            Reads     :      24 [2.40e+00 ~ 0.5%]
            Writes    :      12 [2.37e+00 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::~unordered_map(std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/hashtable.h(759,7) inlined into /usr/include/c++/4.8.5/bits/unordered_map.h(98,11)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/hashtable.h(1642,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/unordered_map.h(97,11):remark #34051: REGISTER ALLOCATION : [_ZNSt13unordered_mapISsN6SAMRAI4hier9IntVectorESt4hashISsESt8equal_toISsESaISt4pairIKSsS2_EEED1Ev] /usr/include/c++/4.8.5/bits/unordered_map.h:97

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r8 r14-r15]
        
    Routine temporaries
        Total         :      33
            Global    :      13
            Local     :      20
        Regenerable   :       7
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.33e+00 ~ 2.5%]
            Writes    :       3 [2.33e+00 ~ 2.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::pair<std::string, SAMRAI::hier::IntVector>::~pair(std::pair<std::string, SAMRAI::hier::IntVector> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_pair.h(96,12):remark #34051: REGISTER ALLOCATION : [_ZNSt4pairISsN6SAMRAI4hier9IntVectorEED1Ev] /usr/include/c++/4.8.5/bits/stl_pair.h:96

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rsi rdi r13]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::getNumberOfProjectionVariablesForConservativeVariables(const FlowModelBasicUtilitiesSingleSpecies *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::getNumberOfProjectionVariablesForConservativeVariables(const FlowModelBasicUtilitiesSingleSpecies *) const) [47] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3372,1)
  -> INLINE: (3373,18) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3372,1):remark #34051: REGISTER ALLOCATION : [_ZNK36FlowModelBasicUtilitiesSingleSpecies54getNumberOfProjectionVariablesForConservativeVariablesEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:3372

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::getNumberOfProjectionVariablesForPrimitiveVariables(const FlowModelBasicUtilitiesSingleSpecies *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::getNumberOfProjectionVariablesForPrimitiveVariables(const FlowModelBasicUtilitiesSingleSpecies *) const) [48] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3383,1)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3383,1):remark #34051: REGISTER ALLOCATION : [_ZNK36FlowModelBasicUtilitiesSingleSpecies51getNumberOfProjectionVariablesForPrimitiveVariablesEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:3383

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::computeSideDataOfProjectionVariablesForConservativeVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::computeSideDataOfProjectionVariablesForConservativeVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)) [49] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3395,1)
  -> (3396,22) std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic>::expired(const std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3398,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3398,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3398,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3398,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3398,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3398,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3398,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3398,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3398,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3398,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3398,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3398,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3398,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3398,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3398,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3404,64) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (3404,64) std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const
  -> INLINE: (3405,55) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (3405,57) FlowModel::getNumberOfGhostCells(const FlowModel *) const
  -> INLINE: (3406,46) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3412,42) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> (3413,56) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (3416,15) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> (3417,54) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3423,75) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3423,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3423,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3425,29) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3425,32) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3425,34) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (3425,48) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (3431,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (3431,64) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3433,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3433,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3433,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3433,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3433,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3433,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3433,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3433,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3433,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3433,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3433,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3433,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3433,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3433,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3433,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3433,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3444,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3444,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3447,33) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3447,37) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3447,39) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (3447,48) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (3448,42) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (3450,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3450,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3450,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3450,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3450,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3450,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3450,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3450,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3450,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3450,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3450,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3450,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3450,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3450,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3450,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (3450,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3458,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3458,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (3460,39) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (3460,62) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3460,66) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3460,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (3462,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3462,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3462,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3462,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3462,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3462,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3462,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3462,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3462,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3462,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3462,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3462,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3462,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3462,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3462,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3462,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3470,35) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (3472,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3472,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3472,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3472,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3472,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3472,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3472,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3472,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3472,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3472,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3472,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3472,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3472,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3472,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3472,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3472,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3481,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3481,46) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3482,23) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3482,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3482,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3482,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3482,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1ad_V$10c8.0.797->__vptr_V$1f9_2.41 + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> (3482,37) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (3484,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3484,46) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3485,23) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3485,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3485,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3485,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3485,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1b0_V$10cb.0.797->__vptr_V$1f9_2.41 + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> (3485,37) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (3487,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3487,46) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3488,23) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3488,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3488,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3488,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (3488,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1b3_V$10ce.0.797->__vptr_V$1f9_2.41 + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> (3488,37) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (3492,29) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3492,31) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3493,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3493,36) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (3500,51) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (3500,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<SAMRAI::pdat::SideData<Real>>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, SAMRAI::pdat::SideData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3500,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (3503,54) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (3503,66) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (3503,66) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<SAMRAI::pdat::SideData<Real>>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, SAMRAI::pdat::SideData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3503,66) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (3506,51) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (3506,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<SAMRAI::pdat::SideData<Real>>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, SAMRAI::pdat::SideData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3506,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (3513,51) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (3513,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<SAMRAI::pdat::SideData<Real>>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, SAMRAI::pdat::SideData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3513,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (3516,51) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (3516,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<SAMRAI::pdat::SideData<Real>>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, SAMRAI::pdat::SideData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3516,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (3533,71) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3533,71)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1be_V$10d9.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
  -> (3536,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (3536,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (3537,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3537,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3538,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (3538,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (3540,23) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (3541,27) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (3542,33) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
  -> (3546,31) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
  -> INLINE: (3546,59) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (3547,37) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
  -> INLINE: (3547,65) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3550,37) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3552,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1bf_V$10da.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(48(SI32)) * 8(I64))))
  -> (3554,5) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (3554,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (3554,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (3554,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (3554,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (3554,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (3554,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (3554,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (3554,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (3554,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (3554,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3554,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (3554,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3556,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3558,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3559,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3563,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3563,38) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3578,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3578,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3579,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3579,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3580,59) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3580,61) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3601,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3601,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3601,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3602,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3602,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3602,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3603,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3603,66) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3604,57) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3604,59) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3605,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3605,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3605,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3627,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3627,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1d3_V$1126.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3627,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (3627,73) EquationOfState::computePressure(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (3634,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3634,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1d4_V$1127.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3634,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (3634,73) EquationOfState::computeSoundSpeed(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (3635,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3641,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3641,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1d5_V$1128.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3641,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (3641,73) EquationOfState::computePressureDerivativeWithDensity(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (3642,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3648,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3648,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1d6_V$1129.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3648,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (3648,73) EquationOfState::computeGruneisenParameter(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (3649,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3673,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3673,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3673,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3673,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3673,17) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3673,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3673,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3673,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3673,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3673,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3673,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3673,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3673,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3673,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3673,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3673,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3683,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3683,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3683,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3683,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3683,17) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3683,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3683,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3683,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3683,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3683,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3683,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3683,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3683,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3683,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3683,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3683,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3692,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3694,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3695,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3697,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3698,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3699,51) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3701,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3702,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3703,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3707,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3707,38) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3708,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3708,38) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3725,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3725,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3726,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3726,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3727,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3727,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3728,59) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3728,61) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3758,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3758,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3758,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3759,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3759,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3759,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3760,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3760,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3760,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3761,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3761,66) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3762,57) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3762,59) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3763,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3763,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3763,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3791,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3791,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1df_V$114d.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3791,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (3791,73) EquationOfState::computePressure(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (3798,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3798,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1e0_V$114e.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3798,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (3798,73) EquationOfState::computeSoundSpeed(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (3799,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3805,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3805,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1e1_V$114f.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3805,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (3805,73) EquationOfState::computePressureDerivativeWithDensity(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (3806,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3812,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3812,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1e2_V$1150.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3812,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (3812,73) EquationOfState::computeGruneisenParameter(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (3813,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3841,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3841,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3842,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3842,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3843,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3843,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3844,59) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3844,61) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3874,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3874,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3874,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3875,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3875,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3875,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3876,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3876,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3876,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3877,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3877,66) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3878,57) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3878,59) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3879,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3879,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3879,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3907,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3907,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1e3_V$1151.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3907,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (3907,73) EquationOfState::computePressure(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (3914,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3914,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1e4_V$1152.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3914,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (3914,73) EquationOfState::computeSoundSpeed(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (3915,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3921,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3921,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1e5_V$1153.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3921,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (3921,73) EquationOfState::computePressureDerivativeWithDensity(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (3922,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3928,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3928,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1e6_V$1154.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3928,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (3928,73) EquationOfState::computeGruneisenParameter(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (3929,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (3957,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3957,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3957,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3957,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3957,17) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3957,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3957,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3957,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3957,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3957,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3957,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3957,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3957,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3957,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3957,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3957,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3967,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3967,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3967,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3967,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3967,17) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3967,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3967,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3967,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3967,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3967,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3967,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3967,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3967,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3967,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3967,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3967,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3975,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3977,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3978,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3979,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3981,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3982,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3983,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3984,51) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3985,51) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3987,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3988,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3989,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3990,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3991,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3995,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3995,38) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3996,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3996,38) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3997,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3997,38) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4016,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4016,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4017,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4017,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4018,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4018,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4019,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4019,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4020,59) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4020,61) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4060,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4060,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4060,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4061,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4061,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4061,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4062,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4062,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4062,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4063,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4063,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4063,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4064,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4064,66) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4065,57) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4065,59) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4066,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4066,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4066,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4101,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4101,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1ef_V$118b.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4101,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (4101,73) EquationOfState::computePressure(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (4108,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4108,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f0_V$118c.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4108,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (4108,73) EquationOfState::computeSoundSpeed(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (4109,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4115,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4115,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f1_V$118d.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4115,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (4115,73) EquationOfState::computePressureDerivativeWithDensity(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (4116,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4122,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4122,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f2_V$118e.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4122,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (4122,73) EquationOfState::computeGruneisenParameter(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (4123,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4156,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4156,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4157,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4157,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4158,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4158,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4159,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4159,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4160,59) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4160,61) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4200,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4200,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4200,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4201,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4201,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4201,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4202,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4202,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4202,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4203,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4203,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4203,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4204,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4204,66) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4205,57) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4205,59) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4206,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4206,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4206,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4239,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4239,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f3_V$118f.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4239,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (4239,73) EquationOfState::computePressure(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (4246,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4246,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f4_V$1190.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4246,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (4246,73) EquationOfState::computeSoundSpeed(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (4247,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4253,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4253,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f5_V$1191.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4253,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (4253,73) EquationOfState::computePressureDerivativeWithDensity(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (4254,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4260,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4260,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f6_V$1192.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4260,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (4260,73) EquationOfState::computeGruneisenParameter(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (4261,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4294,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4294,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4295,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4295,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4296,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4296,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4297,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4297,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4298,59) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4298,61) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4338,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4338,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4338,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4339,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4339,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4339,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4340,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4340,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4340,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4341,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4341,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4341,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4342,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4342,66) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4343,57) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4343,59) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4344,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4344,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4344,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4377,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4377,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f7_V$1193.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4377,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (4377,73) EquationOfState::computePressure(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (4384,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4384,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f8_V$1194.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4384,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (4384,73) EquationOfState::computeSoundSpeed(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (4385,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4391,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4391,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1f9_V$1195.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4391,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (4391,73) EquationOfState::computePressureDerivativeWithDensity(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (4392,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4398,49) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4398,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U1fa_V$1196.0.797->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4398,71) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (4398,73) EquationOfState::computeGruneisenParameter(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (4399,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4432,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4432,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4432,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4432,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4432,17) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4432,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4432,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4432,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4432,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4432,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4432,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4432,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4432,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4432,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4432,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4432,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4442,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4442,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4442,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4442,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4442,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4442,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4442,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4442,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4442,17) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4442,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4442,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4442,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4442,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4442,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4442,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4442,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Offload optimizations [offload]

OpenMP Construct at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3395,1)
remark #16219: Some OpenMP processing was skipped to constrain compile time. Consider overriding limits (-qoverride-limits).

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3444,46)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3458,46)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3544,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3546,31) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3583,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_x] (3592:21) and E_average[idx_face_x] (3594:21)
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3610,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between u_average[idx_face_x] (3617:21) and epsilon_average[idx_face_x] (3621:21)
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3658,17)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3658,17)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3658,17)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3658,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3658,17)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3658,17)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3730,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_x] (3747:25) and E_average[idx_face_x] (3750:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3733,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_x] (3747:25) and E_average[idx_face_x] (3750:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3767,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between u_average[idx_face_x] (3778:25) and epsilon_average[idx_face_x] (3783:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3770,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between u_average[idx_face_x] (3778:25) and epsilon_average[idx_face_x] (3783:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3821,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3824,21)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3824,21)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3824,21)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3824,21)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3824,21)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3824,21)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3846,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_y] (3863:25) and E_average[idx_face_y] (3866:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3851,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_y] (3863:25) and E_average[idx_face_y] (3866:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3883,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between u_average[idx_face_y] (3894:25) and epsilon_average[idx_face_y] (3899:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3888,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between u_average[idx_face_y] (3894:25) and epsilon_average[idx_face_y] (3899:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3937,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3942,21)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3942,21)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3942,21)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3942,21)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3942,21)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3942,21)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4022,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_x] (4047:29) and E_average[idx_face_x] (4051:29)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4024,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_x] (4047:29) and E_average[idx_face_x] (4051:29)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4027,25)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_x] (4047:29) and E_average[idx_face_x] (4051:29)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4070,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between u_average[idx_face_x] (4085:29) and epsilon_average[idx_face_x] (4091:29)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4072,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between u_average[idx_face_x] (4085:29) and epsilon_average[idx_face_x] (4091:29)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4075,25)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between u_average[idx_face_x] (4085:29) and epsilon_average[idx_face_x] (4091:29)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4131,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4133,21)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4136,25)
      <Peeled loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4136,25)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4136,25)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4136,25)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4136,25)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4136,25)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4162,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_y] (4187:29) and E_average[idx_face_y] (4191:29)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4164,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_y] (4187:29) and E_average[idx_face_y] (4191:29)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4169,25)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_y] (4187:29) and E_average[idx_face_y] (4191:29)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4208,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between u_average[idx_face_y] (4223:29) and epsilon_average[idx_face_y] (4229:29)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4210,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between u_average[idx_face_y] (4223:29) and epsilon_average[idx_face_y] (4229:29)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4215,25)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between u_average[idx_face_y] (4223:29) and epsilon_average[idx_face_y] (4229:29)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4269,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4271,21)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4276,25)
      <Peeled loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4276,25)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4276,25)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4276,25)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4276,25)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4276,25)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4300,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_z] (4325:29) and E_average[idx_face_z] (4329:29)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4304,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_z] (4325:29) and E_average[idx_face_z] (4329:29)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4307,25)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_z] (4325:29) and E_average[idx_face_z] (4329:29)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4346,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between u_average[idx_face_z] (4361:29) and epsilon_average[idx_face_z] (4367:29)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4350,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between u_average[idx_face_z] (4361:29) and epsilon_average[idx_face_z] (4367:29)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4353,25)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between u_average[idx_face_z] (4361:29) and epsilon_average[idx_face_z] (4367:29)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4407,17)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4411,21)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4414,25)
      <Peeled loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4414,25)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4414,25)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4414,25)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4414,25)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4414,25)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(3395,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies60computeSideDataOfProjectionVariablesForConservativeVariablesERSt6vectorISt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEESaIS6_EE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:3395

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    4996
            Global    :    1349
            Local     :    3647
        Regenerable   :    1398
        Spilled       :     268
        
    Routine stack
        Variables     :    5143 bytes*
            Reads     :     307 [1.11e+02 ~ 2.8%]
            Writes    :     581 [3.13e+02 ~ 7.9%]
        Spills        :    2056 bytes*
            Reads     :     676 [2.70e+02 ~ 6.8%]
            Writes    :     356 [6.37e+01 ~ 1.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::SideData<Real>>(std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::SideData<Real> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(740,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrIN6SAMRAI4pdat8SideDataIdEELN9__gnu_cxx12_Lock_policyE2EEC1IS3_EEPT_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:740

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      28
            Global    :      10
            Local     :      18
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)) [51] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(122,1)
  -> (114,17) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
  -> INLINE: (114,17) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (121,17) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (121,45) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (128,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (128,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (128,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (128,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (129,54) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (130,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::ArrayData<Real>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::ArrayData<Real>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::ArrayData<Real> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
        -> (456,8) SAMRAI::pdat::ArrayData<Real>::~ArrayData(SAMRAI::pdat::ArrayData<Real> *)
  -> INLINE: (130,49) SAMRAI::pdat::ArrayData<Real>::ArrayData(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Box &, unsigned int)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(91,18) std::allocator<double>::~allocator(std::allocator<double> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(94,40) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::allocator(std::allocator<double> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::~allocator(std::allocator<double> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(114,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between U83_V->_M_ptr (733:17) and call:?1memset (733:17)
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(128,52)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(131,49)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(131,49)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(131,49)
      remark #25408: memset generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(131,49)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(131,49)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(131,49)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(114,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(122,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdEC1ERKNS_4hier3BoxEiRKNS3_9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:122

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     236
            Global    :      48
            Local     :     188
        Regenerable   :      18
        Spilled       :      12
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      38 [4.52e+01 ~ 4.8%]
            Writes    :       9 [3.57e+00 ~ 0.4%]
        Spills        :      56 bytes*
            Reads     :      14 [2.74e+01 ~ 2.9%]
            Writes    :       7 [9.29e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::~ArrayData(SAMRAI::pdat::ArrayData<Real> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::~ArrayData(SAMRAI::pdat::ArrayData<Real> *)) [53] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(155,1)
  -> INLINE: (159,1) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(155,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:155

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rdi r13]
        
    Routine temporaries
        Total         :      12
            Global    :       8
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__enable_shared_from_this_helper<__gnu_cxx::_S_atomic>(const std::__shared_count<__gnu_cxx::_S_atomic> &, ...)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(724,5):remark #34051: REGISTER ALLOCATION : [_ZSt32__enable_shared_from_this_helperILN9__gnu_cxx12_Lock_policyE2EEvRKSt14__shared_countIXT_EEz] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:724

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat9ArrayDataIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfState::computeGruneisenParameter(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfState::computeGruneisenParameter(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const) [61] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(1168,9)
  -> INDIRECT- (VIRTUAL): (1176,17)  EXPR_CONV.SI64.P64(*((SI64*) (this_80010_V$492.0.7->__vptr_V$111 + EXPR_CONV.SI32.I64(45(SI32)) * 8(I64))))


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(1168,9):remark #34051: REGISTER ALLOCATION : [_ZNK15EquationOfState25computeGruneisenParameterERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_RKSt6vectorIPKdSaISB_EEi] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp:1168

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :      38
            Global    :      13
            Local     :      25
        Regenerable   :       5
        Spilled       :       6
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfState::computePressureDerivativeWithDensity(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfState::computePressureDerivativeWithDensity(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const) [62] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(1308,9)
  -> INDIRECT- (VIRTUAL): (1316,17)  EXPR_CONV.SI64.P64(*((SI64*) (this_80024_V$499.0.8->__vptr_V$111 + EXPR_CONV.SI32.I64(50(SI32)) * 8(I64))))


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(1308,9):remark #34051: REGISTER ALLOCATION : [_ZNK15EquationOfState36computePressureDerivativeWithDensityERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_RKSt6vectorIPKdSaISB_EEi] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp:1308

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :      38
            Global    :      13
            Local     :      25
        Regenerable   :       5
        Spilled       :       6
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfState::computeSoundSpeed(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfState::computeSoundSpeed(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const) [63] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(219,9)
  -> INDIRECT- (VIRTUAL): (227,17)  EXPR_CONV.SI64.P64(*((SI64*) (this_79912_V$484.0.5->__vptr_V$111 + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(219,9):remark #34051: REGISTER ALLOCATION : [_ZNK15EquationOfState17computeSoundSpeedERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_RKSt6vectorIPKdSaISB_EEi] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp:219

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :      38
            Global    :      13
            Local     :      25
        Regenerable   :       5
        Spilled       :       6
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfState::computePressure(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfState::computePressure(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const) [64] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(84,9)
  -> INDIRECT- (VIRTUAL): (92,17)  EXPR_CONV.SI64.P64(*((SI64*) (this_79898_V$47d.0.4->__vptr_V$111 + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp(84,9):remark #34051: REGISTER ALLOCATION : [_ZNK15EquationOfState15computePressureERSt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEERKS5_S8_RKSt6vectorIPKdSaISB_EEi] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfState.hpp:84

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :      38
            Global    :      13
            Local     :      25
        Regenerable   :       5
        Spilled       :       6
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::getNumberOfGhostCells(const FlowModel *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::getNumberOfGhostCells(const FlowModel *) const) [65] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(123,9)
  -> INLINE: (127,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (127,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (127,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (127,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (127,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (127,17) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (127,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (127,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (127,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (127,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (127,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (127,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (127,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (127,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (127,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(123,9):remark #34051: REGISTER ALLOCATION : [_ZNK9FlowModel21getNumberOfGhostCellsEv] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp:123

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     301
            Global    :      75
            Local     :     226
        Regenerable   :     119
        Spilled       :       6
        
    Routine stack
        Variables     :     421 bytes*
            Reads     :      24 [5.19e+00 ~ 4.9%]
            Writes    :      51 [1.77e+01 ~ 16.5%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)) [66] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(901,4)
  -> INLINE: (903,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (904,21) SAMRAI::hier::IntVector::getNumBlocks(const SAMRAI::hier::IntVector *) const
  -> INLINE: (905,45) SAMRAI::hier::BlockId::getBlockValue(const SAMRAI::hier::BlockId *) const
  -> INLINE: (906,42) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (906,42) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (906,51) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (906,51) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (907,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (907,33) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,31) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (908,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (908,33) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,31) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (911,18) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (912,18) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(904,12)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(906,51)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(912,18)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(912,18)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(913,18)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(913,18)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(901,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier3Box4growERKNS0_9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:901

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8-r11]
        
    Routine temporaries
        Total         :     101
            Global    :      25
            Local     :      76
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::computeSideDataOfProjectionVariablesForPrimitiveVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::computeSideDataOfProjectionVariablesForPrimitiveVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)) [67] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4460,1)
  -> INLINE: (4461,22) std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic>::expired(const std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4463,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4463,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4463,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4463,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4463,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4463,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4463,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4463,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4463,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4463,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4463,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4463,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4463,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4463,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4463,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4469,64) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (4469,64) std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const
  -> INLINE: (4470,55) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> (4470,57) FlowModel::getNumberOfGhostCells(const FlowModel *) const
  -> INLINE: (4471,46) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4477,42) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> (4478,56) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (4481,15) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> (4482,54) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4488,75) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4488,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4488,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4490,29) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4490,32) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4490,34) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (4490,48) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4496,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (4498,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4498,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4498,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4498,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4498,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4498,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4498,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4498,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4498,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4498,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4498,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4498,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4498,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4498,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4498,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4498,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4512,33) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4512,37) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4512,39) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (4512,48) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (4513,42) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (4515,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4515,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4515,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4515,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4515,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4515,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4515,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4515,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4515,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4515,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4515,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4515,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4515,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4515,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4515,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (4515,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4523,35) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (4523,58) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4523,61) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4523,63) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4525,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4525,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4525,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4525,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4525,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4525,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4525,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4525,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4525,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4525,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4525,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4525,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4525,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4525,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4525,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4525,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4532,35) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (4534,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4534,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4534,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4534,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4534,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4534,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4534,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4534,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4534,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4534,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4534,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4534,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4534,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4534,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4534,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4534,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4542,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4542,46) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4543,23) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4543,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4543,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4543,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4543,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U203_V$11cd.0.798->__vptr_V$1f9_2.41 + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> (4543,37) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (4546,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4546,46) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4547,23) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4547,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4547,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4547,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (4547,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U206_V$11d0.0.798->__vptr_V$1f9_2.41 + EXPR_CONV.SI32.I64(18(SI32)) * 8(I64))))
  -> (4547,37) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (4550,72) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4550,74) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4551,75) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4551,77) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (4551,91) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (4553,35) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (4555,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4555,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4555,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4555,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4555,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4555,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4555,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4555,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4555,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4555,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4555,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4555,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4555,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4555,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4555,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4555,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4563,29) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4563,31) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4564,31) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4564,33) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4573,5) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4573,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4573,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4573,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4575,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4577,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4578,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4579,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4589,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4589,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4589,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4590,49) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4590,52) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4590,54) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4612,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4612,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4612,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4612,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4612,17) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4612,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4612,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4612,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4612,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4612,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4612,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4612,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4612,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4612,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4612,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4612,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4622,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4622,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4622,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4622,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4622,17) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4622,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4622,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4622,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4622,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4622,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4622,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4622,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4622,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4622,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4622,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4622,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4630,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4632,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4633,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4635,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4636,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4637,51) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4639,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4640,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4641,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4643,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4644,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4645,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4655,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4655,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4655,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4656,49) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4656,52) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4656,54) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4689,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4689,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4689,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4690,49) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4690,52) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4690,54) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4724,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4724,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4724,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4724,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4724,17) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4724,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4724,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4724,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4724,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4724,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4724,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4724,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4724,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4724,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4724,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4724,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4734,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4734,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4734,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4734,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4734,17) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4734,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4734,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4734,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4734,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4734,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4734,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4734,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4734,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4734,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4734,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4734,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4742,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4744,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4745,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4746,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4748,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4749,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4750,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4751,51) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4752,51) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4754,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4755,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4756,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4757,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4758,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4760,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4761,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4762,74) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4763,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4764,81) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (4774,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4774,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4774,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4775,49) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4775,52) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4775,54) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4822,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4822,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4822,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4823,49) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4823,52) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4823,54) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4870,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4870,54) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4870,56) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4871,49) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4871,52) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4871,54) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4918,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4918,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4918,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4918,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4918,17) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4918,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4918,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4918,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4918,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4918,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4918,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4918,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4918,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4918,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4918,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4918,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4928,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4928,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4928,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4928,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4928,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4928,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4928,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4928,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4928,17) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4928,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4928,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4928,17) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4928,17) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4928,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4928,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4928,17) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Offload optimizations [offload]

OpenMP Construct at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4460,1)
remark #16219: Some OpenMP processing was skipped to constrain compile time. Consider overriding limits (-qoverride-limits).

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4509,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4512,48) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4593,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_x] (4604:21) and c_average[idx_face_x] (4605:21)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4593,17)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4658,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_x] (4681:25) and c_average[idx_face_x] (4682:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4661,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_x] (4681:25) and c_average[idx_face_x] (4682:25)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4661,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4692,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_y] (4715:25) and c_average[idx_face_y] (4716:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4697,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_y] (4715:25) and c_average[idx_face_y] (4716:25)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4697,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4777,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_x] (4812:29) and c_average[idx_face_x] (4813:29)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4779,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_x] (4812:29) and c_average[idx_face_x] (4813:29)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4782,25)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_x] (4812:29) and c_average[idx_face_x] (4813:29)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4782,25)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4825,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_y] (4860:29) and c_average[idx_face_y] (4861:29)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4827,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_y] (4860:29) and c_average[idx_face_y] (4861:29)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4832,25)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_y] (4860:29) and c_average[idx_face_y] (4861:29)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4832,25)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4873,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_z] (4908:29) and c_average[idx_face_z] (4909:29)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4877,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_z] (4908:29) and c_average[idx_face_z] (4909:29)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4880,25)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between rho_average[idx_face_z] (4908:29) and c_average[idx_face_z] (4909:29)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4880,25)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4460,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies57computeSideDataOfProjectionVariablesForPrimitiveVariablesERSt6vectorISt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEESaIS6_EE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:4460

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   28[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :    4103
            Global    :     996
            Local     :    3107
        Regenerable   :    1350
        Spilled       :     159
        
    Routine stack
        Variables     :    5414 bytes*
            Reads     :     309 [6.91e+01 ~ 4.3%]
            Writes    :     629 [1.73e+02 ~ 10.8%]
        Spills        :    1200 bytes*
            Reads     :     276 [1.25e+02 ~ 7.8%]
            Writes    :     179 [4.45e+01 ~ 2.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_S_construct<char *>(char *, char *, const std::allocator<char> &, std::forward_iterator_tag)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/basic_string.tcc(126,7):remark #34051: REGISTER ALLOCATION : [_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag] /usr/include/c++/4.8.5/bits/basic_string.tcc:126

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      13
            Local     :      17
        Regenerable   :       7
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::_M_release(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(138,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:138

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r13-r14]
        
    Routine temporaries
        Total         :      23
            Global    :      12
            Local     :      11
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::computeSideDataOfCharacteristicVariablesFromConservativeVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const int &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::computeSideDataOfCharacteristicVariablesFromConservativeVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const int &)) [75] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4948,1)
  -> (4949,22) std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic>::expired(const std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4951,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4951,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4951,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4951,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4951,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4951,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4951,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4951,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4951,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4951,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4951,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4951,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4951,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4951,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4951,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4957,64) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (4957,64) std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const
  -> INLINE: (4958,46) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4964,49) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> (4964,58) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (4970,83) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4970,86) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4971,9) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> (4973,34) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::~vector(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)
  -> (4973,34) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::vector(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)
  -> (4974,33) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::reserve(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (4974,81) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (4975,67) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (4975,67) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> (4977,37) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::push_back(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
  -> INLINE: (4977,69) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (4977,73) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4978,13) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4981,75) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (4981,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4981,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (4987,87) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (4987,90) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4988,9) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (4988,23) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (4990,34) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::~vector(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)
  -> (4990,34) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::vector(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)
  -> (4991,37) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::reserve(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (4991,85) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (4992,67) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (4992,67) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> (4994,41) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::push_back(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &&)
  -> INLINE: (4994,73) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (4994,77) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4995,13) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (4995,27) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (5002,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (5004,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5004,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5004,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5004,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5004,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5004,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5004,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5004,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5004,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5004,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5004,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5004,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5004,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5004,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5004,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5004,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5010,49) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5012,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5012,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5012,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5012,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5012,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5012,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5012,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5012,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5012,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5012,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5012,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5012,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5012,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5012,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5012,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5012,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5018,31) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (5018,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5018,36) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> INLINE: (5019,31) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (5019,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5019,36) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> INLINE: (5019,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5020,31) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (5020,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5020,36) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> INLINE: (5022,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5022,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5022,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5022,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5022,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5022,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5022,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5022,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5022,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5022,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5022,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5022,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5022,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5022,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5022,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5022,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5028,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (5028,64) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5030,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5030,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5030,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5030,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5030,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5030,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5030,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5030,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5030,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5030,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5030,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5030,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5030,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5030,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5030,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5030,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5044,37) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (5044,41) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5044,43) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (5044,52) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (5046,46) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5048,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5048,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5048,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5048,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5048,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5048,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5048,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5048,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5048,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5048,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5048,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5048,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5048,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5048,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5048,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (5048,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5055,67) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5055,67) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5058,35) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (5058,39) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5058,41) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (5058,50) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (5060,44) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5062,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5062,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5062,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5062,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5062,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5062,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5062,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5062,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5062,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5062,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5062,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5062,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5062,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5062,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5062,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (5062,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5069,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5069,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5071,82) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5071,86) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5071,88) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (5071,97) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (5072,42) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5074,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5074,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5074,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5074,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5074,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5074,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5074,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5074,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5074,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5074,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5074,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5074,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5074,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5074,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5074,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (5074,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5084,43) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5084,70) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (5084,74) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5084,76) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5086,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5086,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5086,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5086,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5086,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5086,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5086,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5086,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5086,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5086,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5086,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5086,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5086,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5086,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5086,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5086,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5094,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5094,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (5096,39) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5096,62) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5096,66) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5096,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5098,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5098,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5098,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5098,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5098,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5098,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5098,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5098,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5098,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5098,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5098,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5098,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5098,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5098,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5098,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5098,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5106,35) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5108,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5108,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5108,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5108,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5108,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5108,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5108,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5108,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5108,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5108,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5108,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5108,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5108,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5108,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5108,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5108,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5108,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5116,67) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5116,67) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5118,40) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> (5118,45) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (5119,17) SAMRAI::hier::IntVector::operator+(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (5119,20) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (5119,51) SAMRAI::hier::IntVector::operator*(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, int) const
  -> (5119,63) SAMRAI::hier::IntVector::operator<(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (5119,65) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (5120,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5120,72) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> (5121,17) SAMRAI::hier::IntVector::operator+(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (5121,20) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (5121,51) SAMRAI::hier::IntVector::operator*(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, int) const
  -> (5121,69) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (5121,71) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> INLINE: (5123,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5123,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5123,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5123,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5123,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5123,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5123,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5123,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5123,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5123,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5123,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5123,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5123,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5123,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5123,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5123,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5123,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5136,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (5136,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (5137,7) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5139,67) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5139,67) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5141,43) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (5141,47) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5141,49) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> (5145,15) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
  -> INLINE: (5145,47) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (5145,51) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5145,53) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (5149,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (5149,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (5150,7) std::vector<Real *, std::allocator<Real *>>::resize(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (5157,5) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (5157,5) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::~vector(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)
  -> (5157,5) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::~vector(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)
  -> (5157,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (5157,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (5157,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (5159,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5161,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5162,65) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5162,68) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5163,65) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5163,68) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5164,63) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5164,66) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5180,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5180,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (5180,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5180,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5183,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5183,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5183,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5184,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5184,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5184,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5185,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5185,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5185,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5186,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5186,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5186,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5187,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5187,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5187,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5200,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5202,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5203,86) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5204,42) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5207,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5209,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5210,62) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5210,102) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5213,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5215,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5216,86) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5217,42) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5221,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (5223,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5224,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5226,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5227,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5228,89) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5230,65) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5230,68) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5231,65) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5231,68) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5232,72) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5232,75) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5234,65) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5234,68) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5235,65) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5235,68) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5236,72) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5236,75) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5238,63) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5238,66) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5239,63) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5239,66) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5240,70) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5240,73) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5257,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5257,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (5257,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5257,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5260,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5260,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5260,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5261,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5261,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5261,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5262,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5262,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5262,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5263,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5263,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5263,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5264,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5264,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5264,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5265,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5265,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5265,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5287,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5289,63) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5290,90) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5291,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5292,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5295,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5297,63) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5298,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5299,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5300,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5303,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5303,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5303,52) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5305,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5307,63) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5308,90) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5309,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5310,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5321,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5321,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (5321,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5321,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5324,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5324,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5324,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5325,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5325,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5325,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5326,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5326,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5326,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5327,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5327,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5327,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5328,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5328,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5328,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5329,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5329,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5329,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5351,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5353,63) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5354,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5355,90) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5356,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5359,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5359,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5359,52) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5361,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5363,63) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5364,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5365,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5366,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5369,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5371,63) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5372,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5373,90) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5374,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5379,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (5381,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5382,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5383,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5385,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5386,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5387,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5388,89) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5389,89) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5391,65) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5391,68) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5392,65) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5392,68) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5393,65) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5393,68) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5394,72) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5394,75) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5395,72) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5395,75) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5397,65) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5397,68) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5398,65) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5398,68) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5399,65) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5399,68) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5400,72) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5400,75) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5401,72) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5401,75) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5403,63) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5403,66) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5404,63) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5404,66) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5405,63) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5405,66) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5406,70) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5406,73) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5407,70) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5407,73) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5425,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5425,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (5425,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5425,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5428,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5428,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5428,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5429,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5429,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5429,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5430,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5430,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5430,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5431,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5431,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5431,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5432,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5432,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5432,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5433,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5433,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5433,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5434,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5434,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5434,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5466,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5469,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5470,94) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5471,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5472,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5473,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5476,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5479,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5480,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5481,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5482,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5483,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5486,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5486,40) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5486,56) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5488,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5488,40) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5488,56) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5490,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5493,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5494,94) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5495,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5496,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5497,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5509,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5509,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (5509,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5509,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5512,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5512,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5512,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5513,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5513,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5513,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5514,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5514,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5514,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5515,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5515,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5515,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5516,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5516,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5516,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5517,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5517,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5517,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5518,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5518,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5518,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5550,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5553,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5554,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5555,94) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5556,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5557,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5560,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5560,40) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5560,56) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5562,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5565,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5566,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5567,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5568,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5569,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5572,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5572,40) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5572,56) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5574,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5577,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5578,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5579,94) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5580,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5581,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5593,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5593,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (5593,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5593,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5596,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5596,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5596,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5597,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5597,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5597,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5598,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5598,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5598,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5599,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5599,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5599,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5600,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5600,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5600,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5601,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5601,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5601,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5602,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5602,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5602,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5634,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5637,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5638,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5639,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5640,94) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5641,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5644,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5644,40) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5644,56) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5646,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5646,40) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5646,56) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5648,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5651,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5652,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5653,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5654,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5655,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5658,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5661,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5662,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5663,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5664,94) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5665,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)


    Report from: Offload optimizations [offload]

OpenMP Construct at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4948,1)
remark #16219: Some OpenMP processing was skipped to constrain compile time. Consider overriding limits (-qoverride-limits).

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4975,67)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4992,67)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5041,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5055,67)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5069,46)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5082,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5094,46)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5116,67)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5139,67)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5143,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5145,15) ]
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5178,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (5180:14) and W.W.W.W (5180:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5178,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5190,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5200:14) and W.W.W.W[2][idx_face] (5213:14)
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5255,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (5257:14) and W.W.W.W (5257:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5255,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5267,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5287:18) and W.W.W.W[3][idx_face] (5305:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5270,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5287:18) and W.W.W.W[3][idx_face] (5305:18)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5319,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (5321:14) and W.W.W.W (5321:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5319,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5331,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5351:18) and W.W.W.W[3][idx_face] (5369:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5336,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5351:18) and W.W.W.W[3][idx_face] (5369:18)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5423,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (5425:14) and W.W.W.W (5425:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5423,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5436,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5466:22) and W.W.W.W[4][idx_face] (5490:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5438,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5466:22) and W.W.W.W[4][idx_face] (5490:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5441,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5466:22) and W.W.W.W[4][idx_face] (5490:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5507,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (5509:14) and W.W.W.W (5509:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5507,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5520,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5550:22) and W.W.W.W[4][idx_face] (5574:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5522,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5550:22) and W.W.W.W[4][idx_face] (5574:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5527,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5550:22) and W.W.W.W[4][idx_face] (5574:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5591,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (5593:14) and W.W.W.W (5593:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5591,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5604,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5634:22) and W.W.W.W[4][idx_face] (5658:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5608,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5634:22) and W.W.W.W[4][idx_face] (5658:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5611,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5634:22) and W.W.W.W[4][idx_face] (5658:22)
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(4948,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies65computeSideDataOfCharacteristicVariablesFromConservativeVariablesERSt6vectorISt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEESaIS6_EERKS0_IS1_INS3_8CellDataIdEEESaISC_EERKS8_RKi] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:4948

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    4555
            Global    :    1187
            Local     :    3368
        Regenerable   :    1345
        Spilled       :     283
        
    Routine stack
        Variables     :    5692 bytes*
            Reads     :     317 [2.39e+02 ~ 2.0%]
            Writes    :     616 [8.15e+02 ~ 6.9%]
        Spills        :    2216 bytes*
            Reads     :     491 [1.60e+03 ~ 13.5%]
            Writes    :     325 [3.44e+02 ~ 2.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::char_traits<char>::length(const std::char_traits<char>::char_type *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(259,7):remark #34051: REGISTER ALLOCATION : [_ZNSt11char_traitsIcE6lengthEPKc] /usr/include/c++/4.8.5/bits/char_traits.h:259

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       7
            Local     :       5
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator+(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator+(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const) [79] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(402,4)
  -> INLINE: (405,11) SAMRAI::hier::IntVector::operator+=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: (380,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (381,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (381,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (382,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
    -> INLINE: (382,52) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: (386,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (388,21) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
    -> INLINE: (388,40) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(379,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(406,11)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(381,48) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(406,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between this (382:24) and *(this+(offset+i)*4) (382:24)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(381,48) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(406,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(387,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(406,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between this (388:21) and *(this+i*4) (388:21)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(387,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(406,11)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(402,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier9IntVectorplERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:402

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8-r11 r15]
        
    Routine temporaries
        Total         :      65
            Global    :      22
            Local     :      43
        Regenerable   :       1
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [3.51e-01 ~ 0.2%]
            Writes    :       1 [3.51e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator*(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, int) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator*(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, int) const) [80] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(569,4)
  -> INLINE: (571,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
    -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(572,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between this (558:18) and *(this+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(572,11)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(569,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier9IntVectormlEi] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:569

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbp rsi rdi r8-r12]
        
    Routine temporaries
        Total         :      35
            Global    :      13
            Local     :      22
        Regenerable   :       0
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const) [81] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(472,4)
  -> INLINE: (475,11) SAMRAI::hier::IntVector::operator-=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: (450,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (451,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (451,48) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (452,24) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
    -> INLINE: (452,52) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: (456,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (458,21) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
    -> INLINE: (458,40) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(449,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(476,11)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(451,48) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(476,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between this (452:24) and *(this+(offset+i)*4) (452:24)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(451,48) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(476,11)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(457,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(476,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between this (458:21) and *(this+i*4) (458:21)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(457,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(476,11)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(472,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier9IntVectormiERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:472

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8-r11 r15]
        
    Routine temporaries
        Total         :      65
            Global    :      22
            Local     :      43
        Regenerable   :       1
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [3.51e-01 ~ 0.2%]
            Writes    :       1 [3.51e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const) [82] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(636,4)
  -> INLINE: (637,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (638,17) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (638,36) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (640,32) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (640,39) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(253,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)
      -> INLINE: (239,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (239,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(638,11)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(641,32)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(239,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(641,39)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(636,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier3Box11numberCellsEv] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:636

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rsi rdi r8 r13]
        
    Routine temporaries
        Total         :      79
            Global    :      17
            Local     :      62
        Regenerable   :      13
        Spilled       :       2
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :      13 [3.69e+00 ~ 4.7%]
            Writes    :      12 [2.25e+00 ~ 2.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::push_back(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(912,4)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(912,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(902,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIN6SAMRAI4hier9IntVectorESaIS2_EE9push_backERKS2_] /usr/include/c++/4.8.5/bits/stl_vector.h:902

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     105
            Global    :      20
            Local     :      85
        Regenerable   :       7
        Spilled       :       6
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       5 [0.00e+00 ~ 0.0%]
            Writes    :       5 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __gnu_cxx::new_allocator<SAMRAI::hier::IntVector>::destroy<SAMRAI::hier::IntVector>(__gnu_cxx::new_allocator<SAMRAI::hier::IntVector> *, SAMRAI::hier::IntVector *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/ext/new_allocator.h(124,27):remark #34051: REGISTER ALLOCATION : [_ZN9__gnu_cxx13new_allocatorIN6SAMRAI4hier9IntVectorEE7destroyIS3_EEvPT_] /usr/include/c++/4.8.5/ext/new_allocator.h:124

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::_M_deallocate(std::_Vector_base<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::_Vector_base<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIN6SAMRAI4hier9IntVectorESaIS2_EE13_M_deallocateEPS2_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::pointer>(std::_Vector_base<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::pointer, std::_Vector_base<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::pointer)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_construct.h(101,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Destroy_auxILb0EE9__destroyIPN6SAMRAI4hier9IntVectorEEEvT_S6_] /usr/include/c++/4.8.5/bits/stl_construct.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rsi rdi r12-r13]
        
    Routine temporaries
        Total         :      12
            Global    :       8
            Local     :       4
        Regenerable   :       0
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [1.97e+00 ~ 3.5%]
            Writes    :       2 [1.97e+00 ~ 3.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::_M_get_Tp_allocator(std::_Vector_base<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIN6SAMRAI4hier9IntVectorESaIS2_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size(const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIN6SAMRAI4hier9IntVectorESaIS2_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rcx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       0
            Local     :      19
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::push_back(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &&)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(921,9)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(921,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(920,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIN6SAMRAI4hier9IntVectorESaIS2_EE9push_backEOS2_] /usr/include/c++/4.8.5/bits/stl_vector.h:920

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     105
            Global    :      20
            Local     :      85
        Regenerable   :       7
        Spilled       :       6
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       5 [0.00e+00 ~ 0.0%]
            Writes    :       5 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const) [93] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(860,4)
  -> INLINE: (866,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (867,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (868,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (868,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (872,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (874,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (874,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(865,10)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(867,38)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(873,10)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(860,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier9IntVectorgtERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:860

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rsi rdi r8-r14]
        
    Routine temporaries
        Total         :      37
            Global    :      20
            Local     :      17
        Regenerable   :       1
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       6 [1.04e+00 ~ 2.0%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator<(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator<(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const) [94] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(800,4)
  -> INLINE: (806,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (807,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (808,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (808,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (812,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (814,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (814,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(805,10)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(807,38)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(813,10)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(800,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier9IntVectorltERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:800

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rsi rdi r8-r14]
        
    Routine temporaries
        Total         :      37
            Global    :      20
            Local     :      17
        Regenerable   :       1
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       6 [1.04e+00 ~ 2.0%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)) [95] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1132,4)
  -> INLINE: (1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1132,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVector7getZeroERKNS_4tbox9DimensionE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:1132

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)) [96] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1145,4)
  -> INLINE: (1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1145,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVector6getOneERKNS_4tbox9DimensionE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:1145

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf(std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/iosfwd(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEED1Ev] /usr/include/c++/4.8.5/iosfwd:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word *, int)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/ext/atomicity.h(79,3):remark #34051: REGISTER ALLOCATION : [_ZN17_INTERNAL2058abbc9__gnu_cxx27__exchange_and_add_dispatchEPii] /usr/include/c++/4.8.5/ext/atomicity.h:79

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      16
            Global    :       8
            Local     :       8
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::~vector(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIN6SAMRAI4hier9IntVectorESaIS2_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rdi r15]
        
    Routine temporaries
        Total         :      13
            Global    :       9
            Local     :       4
        Regenerable   :       0
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.96e+00 ~ 4.4%]
            Writes    :       3 [2.96e+00 ~ 4.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::~_Vector_base(std::_Vector_base<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIN6SAMRAI4hier9IntVectorESaIS2_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::vector(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIN6SAMRAI4hier9IntVectorESaIS2_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::reserve(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,8) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(74,20)
   remark #15523: loop was not vectorized: loop control variable __cur was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(77,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/vector.tcc(67,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIN6SAMRAI4hier9IntVectorESaIS2_EE7reserveEm] /usr/include/c++/4.8.5/bits/vector.tcc:67

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      76
            Global    :      18
            Local     :      58
        Regenerable   :       6
        Spilled       :       8
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       3 [0.00e+00 ~ 0.0%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       7 [1.97e-01 ~ 0.4%]
            Writes    :       5 [1.97e-01 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::computeSideDataOfCharacteristicVariablesFromPrimitiveVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const int &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::computeSideDataOfCharacteristicVariablesFromPrimitiveVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const int &)) [104] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5683,1)
  -> (5684,22) std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic>::expired(const std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5686,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5686,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5686,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5686,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5686,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5686,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5686,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5686,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5686,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5686,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5686,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5686,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5686,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5686,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5686,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5692,64) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (5692,64) std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const
  -> INLINE: (5693,46) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5699,49) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> (5699,58) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (5705,83) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (5705,86) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5706,9) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> (5708,34) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::~vector(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)
  -> (5708,34) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::vector(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)
  -> (5709,30) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::reserve(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5709,75) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5710,64) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5710,64) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> (5712,34) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::push_back(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
  -> INLINE: (5712,63) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (5712,67) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5713,13) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5716,75) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5716,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5716,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5722,87) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (5722,90) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5723,9) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (5723,23) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (5725,34) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::~vector(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)
  -> (5725,34) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::vector(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)
  -> (5726,34) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::reserve(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5726,79) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5727,64) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5727,64) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> (5729,38) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::push_back(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &&)
  -> INLINE: (5729,67) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (5729,71) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5730,13) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (5730,27) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (5737,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (5739,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5739,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5739,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5739,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5739,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5739,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5739,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5739,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5739,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5739,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5739,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5739,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5739,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5739,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5739,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5739,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5745,46) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5747,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5747,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5747,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5747,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5747,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5747,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5747,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5747,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5747,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5747,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5747,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5747,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5747,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5747,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5747,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5747,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5753,28) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (5753,31) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5753,33) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> INLINE: (5754,28) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (5754,31) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5754,33) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> INLINE: (5754,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (5755,28) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (5755,31) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5755,33) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> INLINE: (5757,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5757,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5757,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5757,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5757,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5757,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5757,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5757,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5757,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5757,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5757,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5757,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5757,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5757,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5757,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5757,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5763,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (5765,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5765,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5765,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5765,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5765,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5765,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5765,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5765,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5765,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5765,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5765,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5765,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5765,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5765,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5765,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5765,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5779,37) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (5779,41) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5779,43) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (5779,52) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (5781,46) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5783,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5783,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5783,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5783,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5783,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5783,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5783,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5783,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5783,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5783,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5783,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5783,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5783,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5783,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5783,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (5783,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5790,64) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5790,64) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5793,32) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (5793,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5793,38) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (5793,47) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (5795,41) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5797,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5797,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5797,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5797,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5797,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5797,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5797,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5797,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5797,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5797,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5797,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5797,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5797,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5797,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5797,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (5797,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5806,82) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5806,86) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5806,88) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (5806,97) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (5807,42) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5809,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5809,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5809,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5809,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5809,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5809,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5809,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5809,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5809,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5809,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5809,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5809,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5809,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5809,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5809,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (5809,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5819,43) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5819,70) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (5819,74) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5819,76) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5821,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5821,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5821,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5821,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5821,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5821,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5821,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5821,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5821,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5821,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5821,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5821,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5821,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5821,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5821,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5821,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5828,35) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5828,58) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5828,61) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5828,63) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (5830,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5830,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5830,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5830,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5830,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5830,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5830,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5830,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5830,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5830,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5830,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5830,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5830,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5830,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5830,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5830,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5837,35) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5839,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5839,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5839,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5839,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5839,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5839,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5839,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5839,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5839,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5839,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5839,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5839,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5839,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5839,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5839,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5839,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5839,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5847,64) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5847,64) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5849,37) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> (5849,42) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (5850,17) SAMRAI::hier::IntVector::operator+(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (5850,20) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (5850,51) SAMRAI::hier::IntVector::operator*(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, int) const
  -> (5850,63) SAMRAI::hier::IntVector::operator<(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (5850,65) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (5851,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (5851,69) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> (5852,17) SAMRAI::hier::IntVector::operator+(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (5852,20) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (5852,51) SAMRAI::hier::IntVector::operator*(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *, int) const
  -> (5852,69) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (5852,71) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> INLINE: (5854,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5854,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5854,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5854,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5854,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (5854,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5854,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5854,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5854,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (5854,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (5854,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5854,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5854,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (5854,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (5854,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5854,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (5854,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (5867,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (5867,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (5868,7) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5870,64) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5870,64) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const
  -> INLINE: (5872,40) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (5872,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5872,46) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> (5876,15) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
  -> INLINE: (5876,44) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type) const
  -> INLINE: (5876,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5876,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (5880,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (5880,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (5881,7) std::vector<Real *, std::allocator<Real *>>::resize(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (5886,5) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (5886,5) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::~vector(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)
  -> (5886,5) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::~vector(std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *)
  -> (5886,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (5886,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (5886,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (5888,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5890,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5891,62) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5891,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5892,62) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5892,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5893,60) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5893,63) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5905,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5905,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (5905,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5905,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5908,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5908,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5908,48) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5909,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5909,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5909,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5922,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5922,90) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5923,34) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5924,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5924,31) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5924,97) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5925,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5925,89) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5926,34) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5929,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (5931,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5932,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5934,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5935,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5936,89) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (5938,62) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5938,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5939,62) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5939,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5940,69) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5940,72) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5942,62) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5942,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5943,62) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5943,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5944,69) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5944,72) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5946,60) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5946,63) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5947,60) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5947,63) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5948,67) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (5948,70) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (5960,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5960,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (5960,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5960,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5963,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5963,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5963,48) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5964,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (5964,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (5964,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (5986,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5986,94) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5987,38) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5988,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5988,35) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5988,101) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5989,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5989,35) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5990,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5990,93) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (5991,38) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6001,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6001,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6001,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6001,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6004,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6004,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6004,48) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6005,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6005,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6005,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6027,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6027,94) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6028,38) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6029,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6029,35) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6029,101) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6030,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6030,35) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6031,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6031,93) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6032,38) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6036,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6038,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6039,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6040,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6042,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6043,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6044,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6045,89) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6046,89) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6048,62) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6048,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6049,62) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6049,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6050,62) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6050,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6051,69) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6051,72) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6052,69) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6052,72) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6054,62) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6054,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6055,62) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6055,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6056,62) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6056,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6057,69) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6057,72) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6058,69) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6058,72) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6060,60) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6060,63) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6061,60) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6061,63) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6062,60) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6062,63) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6063,67) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6063,70) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6064,67) std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::operator[](std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>> *, std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::size_type)
  -> INLINE: (6064,70) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (6076,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6076,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6076,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6076,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6079,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6079,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6079,48) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6080,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6080,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6080,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6112,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6112,98) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6113,42) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6114,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6114,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6114,105) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6115,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6115,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6116,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6116,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6117,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6117,97) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6118,42) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6129,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6129,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6129,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6129,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6132,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6132,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6132,48) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6133,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6133,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6133,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6165,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6165,98) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6166,42) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6167,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6167,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6167,105) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6168,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6168,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6169,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6169,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6170,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6170,97) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6171,42) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6182,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6182,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6182,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6182,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6185,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6185,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6185,48) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6186,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6186,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6186,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6218,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6218,98) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6219,42) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6220,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6220,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6220,105) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6221,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6221,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6222,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6222,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6223,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6223,97) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6224,42) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)


    Report from: Offload optimizations [offload]

OpenMP Construct at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5683,1)
remark #16219: Some OpenMP processing was skipped to constrain compile time. Consider overriding limits (-qoverride-limits).

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5710,64)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5727,64)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5776,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5790,64)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5804,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5806,97) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5817,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5847,64)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5870,64)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5874,9)
      remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5876,15) ]
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5903,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (5905:14) and W.W.W.W (5905:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5903,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5912,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5922:14) and W.W.W.W[2][idx_face] (5925:14)
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5958,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (5960:14) and W.W.W.W (5960:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5958,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5966,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5986:18) and W.W.W.W[3][idx_face] (5990:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5969,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (5986:18) and W.W.W.W[3][idx_face] (5990:18)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5999,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (6001:14) and W.W.W.W (6001:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5999,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6007,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (6027:18) and W.W.W.W[3][idx_face] (6031:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6012,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (6027:18) and W.W.W.W[3][idx_face] (6031:18)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6074,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (6076:14) and W.W.W.W (6076:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6074,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6082,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (6112:22) and W.W.W.W[4][idx_face] (6117:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6084,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (6112:22) and W.W.W.W[4][idx_face] (6117:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6087,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (6112:22) and W.W.W.W[4][idx_face] (6117:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6127,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (6129:14) and W.W.W.W (6129:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6127,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6135,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (6165:22) and W.W.W.W[4][idx_face] (6170:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6137,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (6165:22) and W.W.W.W[4][idx_face] (6170:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6142,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (6165:22) and W.W.W.W[4][idx_face] (6170:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6180,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (6182:14) and W.W.W.W (6182:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6180,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6188,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (6218:22) and W.W.W.W[4][idx_face] (6223:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6192,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (6218:22) and W.W.W.W[4][idx_face] (6223:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6195,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between W.W.W.W[0][idx_face] (6218:22) and W.W.W.W[4][idx_face] (6223:22)
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(5683,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies62computeSideDataOfCharacteristicVariablesFromPrimitiveVariablesERSt6vectorISt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEESaIS6_EERKS0_IS1_INS3_8CellDataIdEEESaISC_EERKS8_RKi] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:5683

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm14]
        
    Routine temporaries
        Total         :    4223
            Global    :    1137
            Local     :    3086
        Regenerable   :    1341
        Spilled       :     218
        
    Routine stack
        Variables     :    5692 bytes*
            Reads     :     317 [1.98e+02 ~ 2.8%]
            Writes    :     616 [6.65e+02 ~ 9.5%]
        Spills        :    1696 bytes*
            Reads     :     398 [5.87e+02 ~ 8.4%]
            Writes    :     265 [1.88e+02 ~ 2.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::computeSideDataOfConservativeVariablesFromCharacteristicVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::computeSideDataOfConservativeVariablesFromCharacteristicVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)) [105] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6240,1)
  -> (6241,22) std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic>::expired(const std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6243,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6243,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6243,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6243,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6243,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6243,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6243,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6243,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6243,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6243,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6243,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6243,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6243,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6243,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6243,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6249,64) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (6249,64) std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const
  -> INLINE: (6250,46) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6256,49) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> (6256,58) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (6262,79) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6262,82) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6263,9) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (6265,83) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6265,86) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6266,9) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (6268,75) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6268,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6268,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (6274,87) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6274,90) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6275,9) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (6275,23) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (6281,49) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (6283,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6283,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6283,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6283,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6283,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6283,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6283,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6283,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6283,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6283,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6283,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6283,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6283,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6283,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6283,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6283,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6289,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (6291,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6291,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6291,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6291,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6291,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6291,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6291,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6291,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6291,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6291,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6291,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6291,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6291,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6291,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6291,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6291,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6297,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (6297,64) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (6299,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6299,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6299,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6299,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6299,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6299,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6299,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6299,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6299,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6299,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6299,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6299,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6299,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6299,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6299,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6299,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6313,35) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6313,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6313,41) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (6313,50) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (6315,44) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6317,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6317,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6317,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6317,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6317,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6317,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6317,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6317,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6317,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6317,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6317,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6317,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6317,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6317,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6317,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (6317,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6327,37) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6327,41) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6327,43) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (6327,52) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (6329,46) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6331,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6331,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6331,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6331,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6331,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6331,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6331,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6331,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6331,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6331,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6331,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6331,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6331,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6331,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6331,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (6331,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6338,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (6338,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (6340,82) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6340,86) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6340,88) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (6340,97) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (6341,42) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6343,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6343,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6343,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6343,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6343,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6343,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6343,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6343,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6343,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6343,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6343,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6343,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6343,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6343,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6343,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (6343,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6353,41) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6353,66) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6353,70) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6353,72) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (6355,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6355,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6355,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6355,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6355,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6355,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6355,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6355,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6355,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6355,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6355,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6355,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6355,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6355,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6355,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6355,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6364,43) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6364,70) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6364,74) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6364,76) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (6366,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6366,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6366,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6366,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6366,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6366,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6366,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6366,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6366,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6366,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6366,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6366,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6366,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6366,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6366,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6366,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6373,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (6373,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (6375,39) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6375,62) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6375,66) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6375,68) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (6377,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6377,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6377,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6377,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6377,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6377,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6377,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6377,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6377,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6377,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6377,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6377,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6377,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6377,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6377,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6377,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6385,35) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6387,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6387,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6387,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6387,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6387,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6387,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6387,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6387,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6387,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6387,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6387,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6387,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6387,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6387,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6387,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6387,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6387,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6394,35) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6396,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6396,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6396,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6396,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6396,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6396,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6396,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6396,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6396,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6396,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6396,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6396,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6396,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6396,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6396,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6396,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6396,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6408,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (6408,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (6409,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (6409,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (6410,7) std::vector<Real *, std::allocator<Real *>>::resize(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (6411,7) std::vector<Real *, std::allocator<Real *>>::resize(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (6419,5) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (6419,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (6419,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (6419,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6421,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6423,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6435,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6435,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6435,47) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6435,49) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6440,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6440,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6440,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6440,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6443,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6443,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6443,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6444,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6444,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6444,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6445,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6445,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6445,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6446,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6446,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6446,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6447,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6447,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6447,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6448,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6448,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6448,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6458,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6458,31) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6458,48) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6458,65) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6460,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6460,75) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6461,38) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6462,62) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6464,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6465,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6466,88) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6468,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6471,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6473,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6474,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6476,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6477,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6478,89) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6491,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6491,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6491,47) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6491,49) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6496,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6496,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6496,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6496,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6499,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6499,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6499,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6500,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6500,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6500,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6501,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6501,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6501,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6502,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6502,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6502,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6503,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6503,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6503,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6504,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6504,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6504,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6505,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6505,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6505,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6518,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6518,35) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6518,52) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6518,69) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6520,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6520,79) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6521,42) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6522,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6524,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6524,56) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6524,73) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6524,90) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6525,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6527,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6528,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6529,92) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6530,62) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6532,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6542,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6542,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6542,47) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6542,49) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6547,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6547,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6547,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6547,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6550,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6550,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6550,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6551,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6551,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6551,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6552,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6552,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6552,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6553,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6553,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6553,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6554,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6554,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6554,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6555,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6555,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6555,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6556,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6556,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6556,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6569,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6569,35) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6569,52) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6569,69) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6571,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6571,56) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6571,73) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6571,90) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6572,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6574,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6574,79) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6575,42) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6576,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6578,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6579,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6580,62) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6581,92) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6583,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6587,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6589,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6590,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6591,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6593,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6594,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6595,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6596,89) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6597,89) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6611,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6611,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6611,47) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6611,49) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6616,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6616,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6616,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6616,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6619,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6619,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6619,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6620,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6620,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6620,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6621,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6621,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6621,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6622,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6622,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6622,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6623,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6623,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6623,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6624,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6624,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6624,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6625,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6625,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6625,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6626,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6626,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6626,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6643,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6643,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6643,56) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6643,73) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6645,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6645,83) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6646,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6647,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6649,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6649,60) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6649,77) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6649,94) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6650,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6652,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6652,60) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6652,77) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6652,94) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6653,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6655,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6656,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6657,96) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6658,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6659,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6661,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6672,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6672,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6672,47) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6672,49) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6677,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6677,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6677,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6677,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6680,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6680,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6680,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6681,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6681,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6681,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6682,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6682,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6682,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6683,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6683,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6683,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6684,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6684,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6684,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6685,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6685,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6685,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6686,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6686,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6686,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6687,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6687,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6687,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6704,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6704,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6704,56) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6704,73) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6706,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6706,60) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6706,77) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6706,94) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6707,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6709,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6709,83) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6710,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6711,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6713,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6713,60) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6713,77) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6713,94) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6714,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6716,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6717,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6718,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6719,96) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6720,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6722,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6733,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6733,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6733,47) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6733,49) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6738,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6738,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6738,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6738,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6741,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6741,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6741,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6742,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6742,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6742,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6743,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6743,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6743,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6744,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6744,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6744,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6745,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6745,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6745,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6746,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6746,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6746,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6747,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6747,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6747,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6748,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6748,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6748,50) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6765,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6765,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6765,56) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6765,73) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6767,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6767,60) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6767,77) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6767,94) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6768,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6770,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6770,60) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6770,77) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6770,94) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6771,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6773,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6773,83) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6774,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6775,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6777,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6778,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6779,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6780,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6781,96) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6783,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)


    Report from: Offload optimizations [offload]

OpenMP Construct at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6240,1)
remark #16219: Some OpenMP processing was skipped to constrain compile time. Consider overriding limits (-qoverride-limits).

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6310,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6324,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6338,46)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6351,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6362,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6373,46)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6433,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[ei] (6435:14) and Q.Q.Q.Q (6435:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6433,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6438,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (6440:14) and W.W.W.W (6440:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6438,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6451,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[0][idx_face] (6458:14) and Q.Q.Q.Q[2][idx_face] (6464:14)
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6489,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[ei] (6491:14) and Q.Q.Q.Q (6491:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6489,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6494,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (6496:14) and W.W.W.W (6496:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6494,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6507,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[0][idx_face] (6518:18) and Q.Q.Q.Q[3][idx_face] (6527:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6510,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[0][idx_face] (6518:18) and Q.Q.Q.Q[3][idx_face] (6527:18)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6540,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[ei] (6542:14) and Q.Q.Q.Q (6542:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6540,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6545,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (6547:14) and W.W.W.W (6547:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6545,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6558,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[0][idx_face] (6569:18) and Q.Q.Q.Q[3][idx_face] (6578:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6563,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[0][idx_face] (6569:18) and Q.Q.Q.Q[3][idx_face] (6578:18)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6609,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[ei] (6611:14) and Q.Q.Q.Q (6611:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6609,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6614,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (6616:14) and W.W.W.W (6616:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6614,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6628,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[0][idx_face] (6643:22) and Q.Q.Q.Q[4][idx_face] (6655:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6630,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[0][idx_face] (6643:22) and Q.Q.Q.Q[4][idx_face] (6655:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6633,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[0][idx_face] (6643:22) and Q.Q.Q.Q[4][idx_face] (6655:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6670,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[ei] (6672:14) and Q.Q.Q.Q (6672:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6670,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6675,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (6677:14) and W.W.W.W (6677:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6675,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6689,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[0][idx_face] (6704:22) and Q.Q.Q.Q[4][idx_face] (6716:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6691,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[0][idx_face] (6704:22) and Q.Q.Q.Q[4][idx_face] (6716:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6696,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[0][idx_face] (6704:22) and Q.Q.Q.Q[4][idx_face] (6716:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6731,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[ei] (6733:14) and Q.Q.Q.Q (6733:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6731,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6736,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (6738:14) and W.W.W.W (6738:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6736,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6750,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[0][idx_face] (6765:22) and Q.Q.Q.Q[4][idx_face] (6777:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6754,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[0][idx_face] (6765:22) and Q.Q.Q.Q[4][idx_face] (6777:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6757,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between Q.Q.Q.Q[0][idx_face] (6765:22) and Q.Q.Q.Q[4][idx_face] (6777:22)
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6240,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies65computeSideDataOfConservativeVariablesFromCharacteristicVariablesERSt6vectorISt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEESaIS6_EERKS8_SB_] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:6240

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    4164
            Global    :    1050
            Local     :    3114
        Regenerable   :    1274
        Spilled       :     180
        
    Routine stack
        Variables     :    5348 bytes*
            Reads     :     328 [2.35e+02 ~ 3.1%]
            Writes    :     613 [7.70e+02 ~ 10.0%]
        Spills        :    1392 bytes*
            Reads     :     286 [6.23e+02 ~ 8.1%]
            Writes    :     197 [9.37e+01 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const) [106] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(785,4)
  -> INLINE: (787,22) SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: (762,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (763,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (764,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: (764,72) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: (768,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (770,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: (770,60) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(761,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(788,22)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(763,38) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(788,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(769,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(788,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(785,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier9IntVectorneERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:785

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rsi rdi r8-r14]
        
    Routine temporaries
        Total         :      38
            Global    :      20
            Local     :      18
        Regenerable   :       1
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       6 [1.04e+00 ~ 1.9%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::computeSideDataOfPrimitiveVariablesFromCharacteristicVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::computeSideDataOfPrimitiveVariablesFromCharacteristicVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)) [107] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6799,1)
  -> (6800,22) std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic>::expired(const std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6802,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6802,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6802,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6802,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6802,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6802,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6802,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6802,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6802,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6802,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6802,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6802,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6802,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6802,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6802,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6808,64) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (6808,64) std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const
  -> INLINE: (6809,46) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6815,49) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> (6815,58) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (6821,73) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6821,76) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6822,9) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (6824,83) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6824,86) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6825,9) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (6827,75) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6827,78) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6827,80) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (6833,87) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6833,90) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6834,9) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (6834,23) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (6840,46) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (6842,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6842,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6842,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6842,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6842,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6842,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6842,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6842,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6842,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6842,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6842,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6842,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6842,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6842,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6842,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6842,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6848,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (6850,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6850,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6850,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6850,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6850,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6850,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6850,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6850,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6850,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6850,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6850,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6850,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6850,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6850,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6850,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6850,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6856,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (6858,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6858,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6858,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6858,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6858,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6858,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6858,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6858,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6858,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6858,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6858,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6858,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6858,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6858,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6858,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6858,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6872,32) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6872,36) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6872,38) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (6872,47) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (6874,41) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6876,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6876,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6876,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6876,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6876,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6876,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6876,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6876,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6876,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6876,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6876,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6876,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6876,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6876,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6876,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (6876,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6886,37) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6886,41) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6886,43) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (6886,52) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (6888,46) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6890,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6890,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6890,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6890,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6890,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6890,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6890,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6890,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6890,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6890,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6890,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6890,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6890,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6890,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6890,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (6890,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6899,82) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6899,86) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6899,88) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (6899,97) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (6900,42) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6902,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6902,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6902,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6902,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6902,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6902,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6902,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6902,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6902,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6902,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6902,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6902,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6902,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6902,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6902,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (6902,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6912,38) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6912,60) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6912,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6912,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (6914,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6914,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6914,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6914,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6914,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6914,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6914,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6914,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6914,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6914,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6914,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6914,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6914,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6914,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6914,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6914,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6923,43) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6923,70) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6923,74) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6923,76) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (6925,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6925,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6925,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6925,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6925,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6925,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6925,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6925,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6925,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6925,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6925,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6925,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6925,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6925,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6925,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6925,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6932,35) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6932,58) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6932,61) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6932,63) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (6934,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6934,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6934,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6934,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6934,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6934,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6934,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6934,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6934,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6934,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6934,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6934,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6934,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6934,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6934,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6934,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6941,35) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6943,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6943,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6943,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6943,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6943,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6943,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6943,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6943,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6943,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6943,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6943,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6943,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6943,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6943,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6943,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6943,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6943,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6950,35) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (6952,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6952,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6952,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6952,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6952,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6952,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (6952,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (6952,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6952,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (6952,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6952,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6952,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6952,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (6952,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (6952,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6952,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (6952,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (6964,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (6964,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (6965,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (6965,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (6966,7) std::vector<Real *, std::allocator<Real *>>::resize(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (6967,7) std::vector<Real *, std::allocator<Real *>>::resize(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (6972,5) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (6972,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (6972,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (6972,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (6974,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6976,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (6984,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6984,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (6984,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6984,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6989,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (6989,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6989,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6989,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6992,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6992,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6992,48) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (6993,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (6993,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (6993,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7003,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7003,81) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7004,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7004,85) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7005,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7005,84) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7006,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7007,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7007,31) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7007,48) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7010,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (7012,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7013,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7015,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7016,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7017,89) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7025,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7025,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (7025,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7025,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7030,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7030,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7030,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7030,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7033,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7033,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7033,48) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7034,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7034,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7034,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7047,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7047,85) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7048,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7048,89) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7049,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7049,88) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7050,74) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7051,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7051,35) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7052,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7052,35) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7052,52) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7062,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7062,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (7062,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7062,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7067,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7067,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7067,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7067,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7070,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7070,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7070,48) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7071,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7071,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7071,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7084,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7084,85) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7084,102) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7085,72) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7086,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7086,35) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7087,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7087,88) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7088,74) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7089,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7089,35) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7089,52) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7093,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (7095,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7096,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7097,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7099,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7100,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7101,82) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7102,89) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7103,89) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (7111,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7111,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (7111,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7111,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7116,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7116,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7116,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7116,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7119,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7119,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7119,48) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7120,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7120,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7120,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7137,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7137,89) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7138,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7138,93) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7139,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7139,92) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7140,78) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7141,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7141,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7142,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7142,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7143,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7143,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7143,56) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7154,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7154,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (7154,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7154,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7159,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7159,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7159,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7159,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7162,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7162,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7162,48) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7163,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7163,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7163,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7180,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7180,89) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7181,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7181,93) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7182,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7182,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7183,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7183,92) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7184,78) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7185,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7185,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7186,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7186,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7186,56) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7197,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7197,40) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (7197,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7197,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7202,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7202,45) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7202,49) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7202,51) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7205,43) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7205,46) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7205,48) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7206,41) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (7206,44) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (7206,46) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (7223,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7223,89) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7224,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7224,93) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7225,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7225,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7226,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7226,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7227,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7227,92) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7228,78) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7229,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7229,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (7229,56) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)


    Report from: Offload optimizations [offload]

OpenMP Construct at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6799,1)
remark #16219: Some OpenMP processing was skipped to constrain compile time. Consider overriding limits (-qoverride-limits).

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6869,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6883,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6897,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6899,97) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6910,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6921,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6982,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[ei] (6984:14) and V.V.V.V (6984:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6982,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6987,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (6989:14) and W.W.W.W (6989:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6987,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6996,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[0][idx_face] (7003:14) and V.V.V.V[2][idx_face] (7007:14)
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7023,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[ei] (7025:14) and V.V.V.V (7025:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7023,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7028,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (7030:14) and W.W.W.W (7030:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7028,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7036,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[0][idx_face] (7047:18) and V.V.V.V[3][idx_face] (7052:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7039,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[0][idx_face] (7047:18) and V.V.V.V[3][idx_face] (7052:18)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7060,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[ei] (7062:14) and V.V.V.V (7062:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7060,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7065,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (7067:14) and W.W.W.W (7067:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7065,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7073,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[0][idx_face] (7084:18) and V.V.V.V[3][idx_face] (7089:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7078,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[0][idx_face] (7084:18) and V.V.V.V[3][idx_face] (7089:18)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7109,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[ei] (7111:14) and V.V.V.V (7111:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7109,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7114,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (7116:14) and W.W.W.W (7116:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7114,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7122,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[0][idx_face] (7137:22) and V.V.V.V[4][idx_face] (7143:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7124,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[0][idx_face] (7137:22) and V.V.V.V[4][idx_face] (7143:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7127,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[0][idx_face] (7137:22) and V.V.V.V[4][idx_face] (7143:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7152,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[ei] (7154:14) and V.V.V.V (7154:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7152,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7157,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (7159:14) and W.W.W.W (7159:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7157,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7165,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[0][idx_face] (7180:22) and V.V.V.V[4][idx_face] (7186:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7167,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[0][idx_face] (7180:22) and V.V.V.V[4][idx_face] (7186:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7172,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[0][idx_face] (7180:22) and V.V.V.V[4][idx_face] (7186:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7195,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[ei] (7197:14) and V.V.V.V (7197:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7195,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7200,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between W.W.W.W[ei] (7202:14) and W.W.W.W (7202:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7200,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7208,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[0][idx_face] (7223:22) and V.V.V.V[4][idx_face] (7229:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7212,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[0][idx_face] (7223:22) and V.V.V.V[4][idx_face] (7229:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(7215,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[0][idx_face] (7223:22) and V.V.V.V[4][idx_face] (7229:22)
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(6799,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies62computeSideDataOfPrimitiveVariablesFromCharacteristicVariablesERSt6vectorISt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEESaIS6_EERKS8_SB_] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:6799

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm13]
        
    Routine temporaries
        Total         :    3975
            Global    :    1007
            Local     :    2968
        Regenerable   :    1278
        Spilled       :     127
        
    Routine stack
        Variables     :    5348 bytes*
            Reads     :     328 [1.94e+02 ~ 3.7%]
            Writes    :     613 [6.20e+02 ~ 11.7%]
        Spills        :     968 bytes*
            Reads     :     201 [2.38e+02 ~ 4.5%]
            Writes    :     152 [6.61e+01 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::~_Sp_counted_base(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::~_Sp_counted_base(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(113,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:113

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(124,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:124

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rbx rdi]
        
    Routine temporaries
        Total         :      14
            Global    :       8
            Local     :       6
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::SideData<Real> *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<SAMRAI::pdat::SideData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8SideDataIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::SideData<Real> *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<SAMRAI::pdat::SideData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8SideDataIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::SideData<Real> *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<SAMRAI::pdat::SideData<Real> *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8SideDataIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::SideData<Real> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::SideData<Real> *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8SideDataIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::SideData<Real> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::SideData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8SideDataIdEELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(150,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::growAsNeeded(const SAMRAI::tbox::MessageStream *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::growAsNeeded(const SAMRAI::tbox::MessageStream *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(362,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::copyDataIn(SAMRAI::tbox::MessageStream *, const void *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::copyDataIn(SAMRAI::tbox::MessageStream *, const void *, size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(398,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getWriteBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getWriteBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(215,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::pack<__gnu_cxx::__alloc_traits<std::allocator<double>>::value_type>(SAMRAI::tbox::MessageStream *, const __gnu_cxx::__alloc_traits<std::allocator<double>>::value_type *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::pack<__gnu_cxx::__alloc_traits<std::allocator<double>>::value_type>(SAMRAI::tbox::MessageStream *, const __gnu_cxx::__alloc_traits<std::allocator<double>>::value_type *, size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(262,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getReadBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getReadBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(193,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(73,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(137,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Database::getVector(SAMRAI::tbox::Database *, const std::string &, std::vector<double, std::allocator<double>> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Database::getVector(SAMRAI::tbox::Database *, const std::string &, std::vector<double, std::allocator<double>> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h(1470,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h(1486,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BlockId::getBlockValue(const SAMRAI::hier::BlockId *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BlockId::getBlockValue(const SAMRAI::hier::BlockId *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BlockId.h(119,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BlockId.h(155,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getNumBlocks(const SAMRAI::hier::IntVector *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::getNumBlocks(const SAMRAI::hier::IntVector *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(215,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(253,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(269,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(285,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(301,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(340,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator+=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator+=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(375,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator-=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator-=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(445,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(555,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(756,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(148,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(162,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(175,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(193,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(238,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(251,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(265,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(281,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(297,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(315,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(502,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(515,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(724,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(150,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(159,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getBeginBlock(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getBeginBlock(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(215,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getEndBlock(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getEndBlock(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(223,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(330,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(495,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(515,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(536,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(558,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(598,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(622,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(652,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(679,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(753,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::operator=(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::operator=(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1166,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::Box_from_DatabaseBox(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::Box_from_DatabaseBox(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1182,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1212,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1248,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1298,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxIterator::operator*(const SAMRAI::hier::BoxIterator *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxIterator::operator*(const SAMRAI::hier::BoxIterator *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1507,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxIterator::operator++(SAMRAI::hier::BoxIterator *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxIterator::operator++(SAMRAI::hier::BoxIterator *)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1545,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1573,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::empty(const SAMRAI::hier::BoxContainer *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::empty(const SAMRAI::hier::BoxContainer *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(681,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(692,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(703,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(159,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(170,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(201,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(271,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(84,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(94,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(103,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(245,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h(93,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideIndex::getAxis(const SAMRAI::pdat::SideIndex *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideIndex::getAxis(const SAMRAI::pdat::SideIndex *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideIndex.h(87,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideIndex::setAxis(SAMRAI::pdat::SideIndex *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideIndex::setAxis(SAMRAI::pdat::SideIndex *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideIndex.h(97,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::~SideData(SAMRAI::pdat::SideData<Real> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::~SideData(SAMRAI::pdat::SideData<Real> *)) [548] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(135,1)
  -> INLINE: (136,1) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(136,1)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U88_V->_M_refcount->_M_pi (545:2) and *__mem (68:6)
   remark #25436: completely unrolled by 3  
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(135,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:135

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rdi r12]
        
    Routine temporaries
        Total         :      62
            Global    :      25
            Local     :      37
        Regenerable   :      10
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::~SideData(SAMRAI::pdat::SideData<Real> *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::~SideData(SAMRAI::pdat::SideData<Real> *const)) [549] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(134,17)
  -> INLINE: (134,17) SAMRAI::pdat::SideData<Real>::~SideData(SAMRAI::pdat::SideData<Real> *)
    -> INLINE: (136,1) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(136,1) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(135,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U88_V->_M_refcount->_M_pi (545:2) and *__mem (68:6)
   remark #25436: completely unrolled by 3  
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(134,17):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdED0Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:134

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rdi r15]
        
    Routine temporaries
        Total         :      63
            Global    :      25
            Local     :      38
        Regenerable   :      10
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(148,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(157,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::operator()(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<Real>::operator()(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(207,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::operator()(const SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<Real>::operator()(const SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(224,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::copy(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::PatchData &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::copy(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::PatchData &)) [554] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(271,1)
  -> INDIRECT- (VIRTUAL): (277,18)  SAMRAI::pdat::SideData<Real>::copy2(const SAMRAI::pdat::SideData<Real> *, SAMRAI::hier::PatchData &) const (604)
  -> INLINE: (282,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (282,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (282,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (282,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (283,26) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (285,25) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (285,27) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (285,54) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (285,56) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (286,22) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (287,25) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (287,27) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(312,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(327,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
  -> INLINE: (287,32) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(282,36)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(287,22)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(288,27)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(271,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdE4copyERKNS_4hier9PatchDataE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:271

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     187
            Global    :      65
            Local     :     122
        Regenerable   :      40
        Spilled       :       7
        
    Routine stack
        Variables     :     273 bytes*
            Reads     :      17 [2.16e+01 ~ 8.2%]
            Writes    :      10 [2.66e+00 ~ 1.0%]
        Spills        :      32 bytes*
            Reads     :      16 [3.75e+00 ~ 1.4%]
            Writes    :       4 [3.75e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)) [555] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(59,1)
  -> INLINE: (64,35) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (66,30) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (67,36) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (70,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (71,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (78,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (79,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (80,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (84,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (85,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (97,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (99,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (99,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (100,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (100,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (100,52) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(319,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
      -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (199,15) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
  -> INLINE: (208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(77,47)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(79,24)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(80,26)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(81,26)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(98,53)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(98,53)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(100,31)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(100,31)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,52)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,31)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,31)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(119,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between dst_b[nd] (188:10) and dst_b[m] (230:16)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(196,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between vdst (31:4) and vdst (31:4)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between vdst (31:4) and vsrc (31:4)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,53)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,67) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(59,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat27ArrayDataOperationUtilitiesIdNS0_13CopyOperationIdEEE25doArrayDataOperationOnBoxERNS0_9ArrayDataIdEERKS6_RKNS_4hier3BoxERKNSA_9IntVectorEjjjRKS3_] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:59

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     297
            Global    :      96
            Local     :     201
        Regenerable   :       8
        Spilled       :      20
        
    Routine stack
        Variables     :     120 bytes*
            Reads     :      50 [3.48e+02 ~ 9.1%]
            Writes    :      29 [2.98e+02 ~ 7.8%]
        Spills        :     112 bytes*
            Reads     :      20 [4.38e+01 ~ 1.1%]
            Writes    :      20 [2.80e+01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::copy2(const SAMRAI::pdat::SideData<Real> *, SAMRAI::hier::PatchData &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::copy2(const SAMRAI::pdat::SideData<Real> *, SAMRAI::hier::PatchData &) const) [556] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(298,1)
  -> INLINE: (306,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (306,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (306,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (306,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (307,23) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (308,41) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (308,43) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (308,70) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (308,72) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (309,19) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (310,29) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (310,31) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(312,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(327,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
  -> INLINE: (310,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(306,33)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(310,19)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(311,31)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(298,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8SideDataIdE5copy2ERNS_4hier9PatchDataE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     175
            Global    :      61
            Local     :     114
        Regenerable   :      35
        Spilled       :       7
        
    Routine stack
        Variables     :     273 bytes*
            Reads     :      17 [2.20e+01 ~ 8.5%]
            Writes    :      10 [2.70e+00 ~ 1.0%]
        Spills        :      56 bytes*
            Reads     :      31 [6.69e+00 ~ 2.6%]
            Writes    :       7 [6.69e+00 ~ 2.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::copy(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::copy(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)) [557] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(330,1)
  -> INDIRECT- (VIRTUAL): (337,24)  SAMRAI::pdat::SideData<Real>::copy2(const SAMRAI::pdat::SideData<Real> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const (606)
  -> INDIRECT- (VIRTUAL): (343,10)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.196936_V$a7c.0.605->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (344,26) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INLINE: (346,30) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (346,30) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (346,39) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (346,39) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (347,29) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INDIRECT- (VIRTUAL): (349,57)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.196936_V$a7c.0.605->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (350,25) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (350,27) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(451,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,7) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (350,32) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (354,10) SAMRAI::pdat::SideData<Real>::copyWithRotation(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideData<Real> &, const SAMRAI::pdat::SideOverlap &)
    -> INLINE: (413,35) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INDIRECT- (VIRTUAL): (415,7)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_197087_V$ad1.0.613.31346->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (415,35) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
    -> INDIRECT- (VIRTUAL): (416,35)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_197087_V$ad1.0.613.31346->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
    -> INLINE: (427,28) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
    -> INDIRECT- (VIRTUAL): (428,4)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_197087_V$ad1.0.613.31346->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (431,46) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
    -> INLINE: (432,36) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
    -> INLINE: (432,45) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
    -> INLINE: (434,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (434,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (435,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
    -> INDIRECT- (VIRTUAL): (436,87)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_197087_V$ad1.0.613.31346->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
    -> INLINE: (440,69) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (441,18) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (441,18) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (441,35) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (441,35) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (441,42) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: (442,44) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: (446,26) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (447,36) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (447,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (448,35) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (448,52) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (452,24) SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1574,22) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (452,24) SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1574,22) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (452,34) SAMRAI::hier::BoxIterator::operator++(SAMRAI::hier::BoxIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1546,16) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,38) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,38) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1548,21) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1548,33) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: (559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1549,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1549,32) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: (537,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1550,22) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: (454,39) SAMRAI::hier::BoxIterator::operator*(const SAMRAI::hier::BoxIterator *) const
    -> INLINE: (455,29) SAMRAI::pdat::SideIndex::setAxis(SAMRAI::pdat::SideIndex *, int)
    -> INLINE: (460,29) SAMRAI::pdat::SideData<Real>::operator()(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int)
      -> INLINE: (210,23) SAMRAI::pdat::SideIndex::getAxis(const SAMRAI::pdat::SideIndex *) const
      -> INLINE: (216,12) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
      -> INLINE: (216,28) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
          -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (460,49) SAMRAI::pdat::SideData<Real>::operator()(const SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int) const
      -> INLINE: (227,23) SAMRAI::pdat::SideIndex::getAxis(const SAMRAI::pdat::SideIndex *) const
      -> INLINE: (233,12) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
      -> INLINE: (233,28) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
          -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(346,39)
   remark #15523: loop was not vectorized: loop control variable d was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(452,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(351,27)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(441,18) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(452,24) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(459,19) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between this->d_lo->d_dim->d_dim (681:51) and this->d_data[dst_index.dst_index]->_M_ptr->d_array->_M_start[myo (460:29)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1547,60) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(434,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(355,10)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(436,87) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(330,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdE4copyERKNS_4hier9PatchDataERKNS3_10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:330

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     433
            Global    :      99
            Local     :     334
        Regenerable   :      98
        Spilled       :      18
        
    Routine stack
        Variables     :     688 bytes*
            Reads     :      59 [6.30e+02 ~ 6.4%]
            Writes    :      21 [4.98e+01 ~ 0.5%]
        Spills        :      96 bytes*
            Reads     :      27 [2.60e+02 ~ 2.6%]
            Writes    :      17 [2.47e+02 ~ 2.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)) [558] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(391,1)
  -> INLINE: (392,23) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INLINE: (392,90) SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const
  -> INLINE: (392,102) SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(762,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(763,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,72) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(768,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,60) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (392,105) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (392,134) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (392,162) SAMRAI::hier::Transformation::getBeginBlock(const SAMRAI::hier::Transformation *) const
  -> INLINE: (392,178) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
  -> INLINE: (392,196) SAMRAI::hier::Transformation::getEndBlock(const SAMRAI::hier::Transformation *) const
  -> INLINE: (394,7) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: (294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: (298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: (312,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: (320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> (327,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
  -> INLINE: (403,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> (411,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
  -> INLINE: (415,55) SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(761,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(393,102)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(763,38) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(393,102)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(769,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(393,102)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(404,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(391,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdE4copyERKS2_RKNS_4hier3BoxERKNS5_14TransformationE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:391

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     229
            Global    :      72
            Local     :     157
        Regenerable   :      47
        Spilled       :       7
        
    Routine stack
        Variables     :     418 bytes*
            Reads     :      11 [5.40e+00 ~ 5.9%]
            Writes    :      10 [6.70e-01 ~ 0.7%]
        Spills        :      24 bytes*
            Reads     :       6 [2.30e-01 ~ 0.3%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::copy2(const SAMRAI::pdat::SideData<Real> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::copy2(const SAMRAI::pdat::SideData<Real> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const) [559] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(364,1)
  -> INDIRECT- (VIRTUAL): (374,8)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.197122_V$a8e.0.606->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (374,39) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INDIRECT- (VIRTUAL): (377,43)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.197122_V$a8e.0.606->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (378,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (378,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (378,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (378,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (379,26) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INDIRECT- (VIRTUAL): (380,88)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.197122_V$a8e.0.606->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (381,29) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (381,31) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(439,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(440,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,7) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(441,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (381,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (385,14) SAMRAI::pdat::SideData<Real>::copyWithRotation(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideData<Real> &, const SAMRAI::pdat::SideOverlap &)
    -> INLINE: (413,35) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INDIRECT- (VIRTUAL): (415,7)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_197087_V$ad1.0.613.31248->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (415,35) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
    -> INDIRECT- (VIRTUAL): (416,35)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_197087_V$ad1.0.613.31248->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
    -> INLINE: (427,28) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
    -> INDIRECT- (VIRTUAL): (428,4)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_197087_V$ad1.0.613.31248->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (431,46) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
    -> INLINE: (432,36) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
    -> INLINE: (432,45) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
    -> INLINE: (434,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (434,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (435,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
    -> INDIRECT- (VIRTUAL): (436,87)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_197087_V$ad1.0.613.31248->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
    -> INLINE: (440,69) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (441,18) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (441,18) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (441,35) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (441,35) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (441,42) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: (442,44) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: (446,26) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (447,36) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (447,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (448,35) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (448,52) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
    -> INLINE: (452,24) SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1574,22) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (452,24) SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1574,22) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (452,34) SAMRAI::hier::BoxIterator::operator++(SAMRAI::hier::BoxIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1546,16) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,38) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,38) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1548,21) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1548,33) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: (559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1549,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1549,32) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: (537,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1550,22) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: (454,39) SAMRAI::hier::BoxIterator::operator*(const SAMRAI::hier::BoxIterator *) const
    -> INLINE: (455,29) SAMRAI::pdat::SideIndex::setAxis(SAMRAI::pdat::SideIndex *, int)
    -> INLINE: (460,29) SAMRAI::pdat::SideData<Real>::operator()(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int)
      -> INLINE: (210,23) SAMRAI::pdat::SideIndex::getAxis(const SAMRAI::pdat::SideIndex *) const
      -> INLINE: (216,12) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
      -> INLINE: (216,28) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
          -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (460,49) SAMRAI::pdat::SideData<Real>::operator()(const SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int) const
      -> INLINE: (227,23) SAMRAI::pdat::SideIndex::getAxis(const SAMRAI::pdat::SideIndex *) const
      -> INLINE: (233,12) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
      -> INLINE: (233,28) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
          -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(378,36)
   remark #15523: loop was not vectorized: loop control variable d was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(440,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(382,31)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(441,18) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(452,24) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(459,19) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between this->d_data[src_index.src_index]->_M_ptr (233:12) and dst->d_data[dst_index.dst_index]->_M_ptr->d_array->_M_start[myof (460:29)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1547,60) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(434,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(386,14)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(436,87) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(364,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8SideDataIdE5copy2ERNS_4hier9PatchDataERKNS3_10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:364

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     414
            Global    :      92
            Local     :     322
        Regenerable   :      88
        Spilled       :      18
        
    Routine stack
        Variables     :     688 bytes*
            Reads     :      59 [1.79e+03 ~ 6.4%]
            Writes    :      21 [1.39e+02 ~ 0.5%]
        Spills        :      96 bytes*
            Reads     :      22 [4.77e+02 ~ 1.7%]
            Writes    :      13 [4.60e+02 ~ 1.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)) [560] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(354,1)
  -> INLINE: (356,18) SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(762,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(763,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,72) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(768,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,60) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (356,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (356,50) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (358,7) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: (294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: (298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: (312,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: (320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> (327,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
  -> INLINE: (363,25) SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,22) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,30) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,44) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,52) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (365,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> (373,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(761,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(357,18)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(763,38) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(357,18)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(769,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(357,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(359,7)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(364,25)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(364,25)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(366,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(354,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdE4copyERKS2_RKNS_4hier3BoxERKNS5_9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:354

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     320
            Global    :      95
            Local     :     225
        Regenerable   :      58
        Spilled       :       8
        
    Routine stack
        Variables     :     466 bytes*
            Reads     :      30 [7.71e+00 ~ 5.4%]
            Writes    :      28 [1.57e+00 ~ 1.1%]
        Spills        :      24 bytes*
            Reads     :       6 [1.04e+00 ~ 0.7%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::canEstimateStreamSizeFromBox(const SAMRAI::pdat::SideData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::canEstimateStreamSizeFromBox(const SAMRAI::pdat::SideData<Real> *) const) [561] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(510,1)
  -> INLINE: (511,11) SAMRAI::pdat::ArrayData<Real>::canEstimateStreamSizeFromBox()
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,22) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,55) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,88) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,123) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,157) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,189) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(510,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8SideDataIdE28canEstimateStreamSizeFromBoxEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:510

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rcx rsi rdi]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :      17
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::getDataStreamSize(const SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::getDataStreamSize(const SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::BoxOverlap &) const) [562] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(518,1)
  -> INDIRECT- (VIRTUAL): (523,36)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.197560_V$a95.0.608->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (526,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (526,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (526,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (526,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (527,23) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (529,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (529,24) SAMRAI::pdat::ArrayData<Real>::getDataStreamSize(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(770,21) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(771,14) SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(772,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(773,14) SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(774,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(775,14) SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(776,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(777,14) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(778,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(779,14) SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(780,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(781,14) SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (530,54)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.197560_V$a95.0.608->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(526,52)
   remark #15523: loop was not vectorized: loop control variable d was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(518,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8SideDataIdE17getDataStreamSizeERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:518

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      58
            Global    :      28
            Local     :      30
        Regenerable   :      11
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.60e+00 ~ 2.9%]
            Writes    :       4 [3.60e+00 ~ 2.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::packStream(const SAMRAI::pdat::SideData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::packStream(const SAMRAI::pdat::SideData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &) const) [565] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(551,1)
  -> INDIRECT- (VIRTUAL): (556,8)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.198233_V$a9c.0.609->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (556,39) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INDIRECT- (VIRTUAL): (559,52)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.198233_V$a9c.0.609->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (560,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (560,27) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (560,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (560,36) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (561,26) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INDIRECT- (VIRTUAL): (562,85)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.198233_V$a9c.0.609->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (563,24) SAMRAI::hier::BoxContainer::empty(const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(682,21) std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::empty(const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>> *) const
  -> INLINE: (564,25) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (564,27) SAMRAI::pdat::ArrayData<Real>::packStream(const SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(875,26) SAMRAI::tbox::MessageStream::getWriteBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(217,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(219,25) std::vector<char, std::allocator<char>>::resize(std::vector<char, std::allocator<char>> *, std::vector<char, std::allocator<char>>::size_type)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(219,32) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(220,41) std::vector<char, std::allocator<char>>::size(const std::vector<char, std::allocator<char>> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(223,55) std::vector<char, std::allocator<char>>::operator[](std::vector<char, std::allocator<char>> *, std::vector<char, std::allocator<char>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(223,56) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(878,59) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(879,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(879,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(879,25) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(879,25) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(879,32) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(880,26) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(882,7) SAMRAI::pdat::ArrayData<Real>::packBuffer(const SAMRAI::pdat::ArrayData<Real> *, Real *, const SAMRAI::hier::Box &) const
      -> INLINE: (1294,4) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<Real> &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(272,41) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(275,53) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(278,44) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(280,49) SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(283,43) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(289,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(290,30) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(294,40) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(307,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,35) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(397,15) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(884,25) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,29) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,45) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(884,27) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> (569,7) SAMRAI::pdat::SideData<Real>::packWithRotation(const SAMRAI::pdat::SideData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::pdat::SideOverlap &) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(220,12) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(288,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between pack_box.pack_box.pack_box.pack_box (604:41) and this->d_empty_flag (610:10)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(319,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between dat_b[nd] (387:10) and dat_b[m] (425:16)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(394,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between buffer[buf_counter+i0] (31:4) and buffer[buf_counter+i0] (31:4)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between buffer[buf_counter+i0] (31:4) and src_ptr[dat_counter+i0] (31:4)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(406,34) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(412,16) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(565,27)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(560,36)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(704,36) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(703,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(703,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(551,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8SideDataIdE10packStreamERNS_4tbox13MessageStreamERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:551

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     475
            Global    :     112
            Local     :     363
        Regenerable   :      28
        Spilled       :      31
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :      87 [1.71e+02 ~ 7.7%]
            Writes    :      21 [1.13e+02 ~ 5.1%]
        Spills        :     200 bytes*
            Reads     :      59 [4.53e+01 ~ 2.0%]
            Writes    :      51 [2.15e+01 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::packWithRotation(const SAMRAI::pdat::SideData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::pdat::SideOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::packWithRotation(const SAMRAI::pdat::SideData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::pdat::SideOverlap &) const) [566] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(578,1)
  -> INLINE: (582,31) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INDIRECT- (VIRTUAL): (584,7)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_198572_V$ae9.0.614->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (584,35) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INDIRECT- (VIRTUAL): (585,35)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_198572_V$ae9.0.614->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (596,24) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INDIRECT- (VIRTUAL): (597,4)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_198572_V$ae9.0.614->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (600,46) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
  -> INLINE: (601,36) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (601,45) SAMRAI::hier::Box::getBlockId(const SAMRAI::hier::Box *) const
  -> INLINE: (603,31) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (605,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (605,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (606,23) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INDIRECT- (VIRTUAL): (607,87)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_198572_V$ae9.0.614->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> DELETED: (610,28) std::allocator<double>::~allocator(std::allocator<double> *)
  -> DELETED: (610,35) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (610,35) std::allocator<double>::allocator(std::allocator<double> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (610,35) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (610,35) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> INLINE: (615,69) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (616,18) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (616,18) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (616,35) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (616,35) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (616,42) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
  -> INLINE: (617,44) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (621,26) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (627,27) SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1574,22) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (627,27) SAMRAI::hier::BoxIterator::operator!=(const SAMRAI::hier::BoxIterator *, const SAMRAI::hier::BoxIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1574,22) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (627,37) SAMRAI::hier::BoxIterator::operator++(SAMRAI::hier::BoxIterator *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1546,16) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,38) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,38) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1547,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1548,21) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1548,33) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
      -> INLINE: (559,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1549,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1549,32) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
      -> INLINE: (537,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1550,22) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (629,42) SAMRAI::hier::BoxIterator::operator*(const SAMRAI::hier::BoxIterator *) const
  -> INLINE: (630,32) SAMRAI::pdat::SideIndex::setAxis(SAMRAI::pdat::SideIndex *, int)
  -> INLINE: (633,28) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (633,49) SAMRAI::pdat::SideData<Real>::operator()(const SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideIndex &, int) const
    -> INLINE: (227,23) SAMRAI::pdat::SideIndex::getAxis(const SAMRAI::pdat::SideIndex *) const
    -> INLINE: (233,12) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (233,28) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
        -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (639,17) SAMRAI::tbox::MessageStream::pack<__gnu_cxx::__alloc_traits<std::allocator<double>>::value_type>(SAMRAI::tbox::MessageStream *, const __gnu_cxx::__alloc_traits<std::allocator<double>>::value_type *, size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(265,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(266,10) SAMRAI::tbox::MessageStream::copyDataIn(SAMRAI::tbox::MessageStream *, const void *, size_t)
      -> INLINE: (399,12) SAMRAI::tbox::MessageStream::growAsNeeded(const SAMRAI::tbox::MessageStream *) const
      -> INLINE: (403,25) std::vector<char, std::allocator<char>>::insert<const char *, void>(std::vector<char, std::allocator<char>> *, std::vector<char, std::allocator<char>>::iterator, const char *, const char *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (403,32) std::vector<char, std::allocator<char>>::end(std::vector<char, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (406,41) std::vector<char, std::allocator<char>>::size(const std::vector<char, std::allocator<char>> *) const
  -> INLINE: (639,29) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (640,7) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(611,35)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(611,35)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(611,35)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(616,18)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(622,26)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(623,16)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(628,27)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(627,27)
         remark #15523: loop was not vectorized: loop control variable buf_count was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(634,49)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(634,49)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1547,60) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(628,37)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(628,27)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(605,47)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(607,87) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(567,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(578,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8SideDataIdE16packWithRotationERNS_4tbox13MessageStreamERKNS0_11SideOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:578

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     352
            Global    :      90
            Local     :     262
        Regenerable   :      77
        Spilled       :      21
        
    Routine stack
        Variables     :     632 bytes*
            Reads     :      40 [8.10e+03 ~ 12.3%]
            Writes    :      28 [1.96e+03 ~ 3.0%]
        Spills        :     128 bytes*
            Reads     :      46 [1.67e+03 ~ 2.5%]
            Writes    :      24 [6.11e+02 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<char, std::allocator<char>>::_M_deallocate(std::_Vector_base<char, std::allocator<char>> *, std::_Vector_base<char, std::allocator<char>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<char, std::allocator<char>>::_M_get_Tp_allocator(std::_Vector_base<char, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::~_Vector_base(std::_Vector_base<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::unpackStream(SAMRAI::pdat::SideData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::unpackStream(SAMRAI::pdat::SideData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)) [574] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(649,1)
  -> INDIRECT- (VIRTUAL): (654,36)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.198607_V$aa3.0.610->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (655,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (655,43) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (655,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (655,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (656,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INDIRECT- (VIRTUAL): (657,82)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.198607_V$aa3.0.610->__vptr_V$a7d_2.34 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (658,21) SAMRAI::hier::BoxContainer::empty(const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(682,21) std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::empty(const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>> *) const
  -> INLINE: (659,22) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (659,24) SAMRAI::pdat::ArrayData<Real>::unpackStream(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(935,32) SAMRAI::tbox::MessageStream::getReadBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(195,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(198,61) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(938,59) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,25) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,25) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,32) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(940,7) SAMRAI::pdat::ArrayData<Real>::unpackBuffer(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)
      -> INLINE: (1313,4) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<Real> &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(272,41) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(275,53) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(278,44) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(280,49) SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(283,43) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(289,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(290,30) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(294,40) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(307,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,35) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(397,15) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(940,34) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(941,25) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,29) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,45) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(941,27) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(655,52)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(220,12) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(288,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between this->d_empty_flag (606:16) and this->d_empty_flag (599:11)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         remark #25478: While Loop Unrolled by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(319,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between dat_b[nd] (387:10) and dat_b[m] (425:16)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(394,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed OUTPUT dependence between dst_ptr[dat_counter+i0] (31:4) and dst_ptr[dat_counter+i0] (31:4)

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
               remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[dat_counter+i0] (31:4) and buffer[buf_counter+i0] (31:4)
               remark #25439: unrolled with remainder by 2  
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
            <Remainder>
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(406,34) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
               remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(412,16) ]
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
               remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
               remark #25439: unrolled with remainder by 8  
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
               remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
               remark #25439: unrolled with remainder by 2  
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
            <Remainder>
            LOOP END

            LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
            <Remainder>
               remark #25436: completely unrolled by 7  
            LOOP END
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(660,24)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         remark #25478: While Loop Unrolled by 8  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(649,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdE12unpackStreamERNS_4tbox13MessageStreamERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:649

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     373
            Global    :      89
            Local     :     284
        Regenerable   :      17
        Spilled       :      28
        
    Routine stack
        Variables     :     104 bytes*
            Reads     :      38 [1.56e+02 ~ 6.3%]
            Writes    :      16 [1.23e+02 ~ 4.9%]
        Spills        :     168 bytes*
            Reads     :      30 [5.07e+01 ~ 2.0%]
            Writes    :      32 [2.54e+01 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::getFromRestart(SAMRAI::pdat::SideData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::getFromRestart(SAMRAI::pdat::SideData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)) [575] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(863,1)
  -> DELETED: (868,8) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (868,8) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (868,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (868,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (868,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (868,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U8b_V$aab.0.611->__vptr_V$972 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (868,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (870,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (870,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (870,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (870,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (870,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (870,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (870,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (870,7) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (870,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (870,7) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (870,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (870,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (870,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (870,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (874,4) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (874,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (874,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (874,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (874,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (874,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U8c_V$aac.0.611->__vptr_V$972 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (874,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (876,36) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (876,36) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (877,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (877,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (877,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (877,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (878,23) SAMRAI::hier::IntVector::operator()(SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(288,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (879,22) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (879,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (879,44) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (879,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (880,25) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (880,25) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (880,37) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (880,51)  EXPR_CONV.SI64.P64(*((SI64*) (__$U92_V$abf.0.611->__vptr_V$972 + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (881,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (881,21) SAMRAI::pdat::ArrayData<Real>::getFromRestart(SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)
  -> INLINE: (882,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (883,4) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(877,33)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(863,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8SideDataIdE14getFromRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:863

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     512
            Global    :     124
            Local     :     388
        Regenerable   :     186
        Spilled       :       9
        
    Routine stack
        Variables     :     502 bytes*
            Reads     :      43 [3.36e+01 ~ 8.3%]
            Writes    :      69 [5.52e+01 ~ 13.6%]
        Spills        :      32 bytes*
            Reads     :       4 [5.82e-01 ~ 0.1%]
            Writes    :       4 [5.82e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getFromRestart(SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::getFromRestart(SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)) [576] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1197,1)
  -> DELETED: (1200,8) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1200,8) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1200,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1200,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1200,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (1200,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$Ub7_V$b80.0.636->__vptr_V$972 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (1200,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1202,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1202,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1202,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1202,7) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1202,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1206,4) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1206,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1206,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1206,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1206,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (1206,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$Ub8_V$b81.0.636->__vptr_V$972 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (1206,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1207,4) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1207,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1207,25) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1207,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1207,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (1207,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$Ub9_V$b82.0.636->__vptr_V$972 + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (1207,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1208,10) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1208,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1208,10) SAMRAI::hier::Box::operator=(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1172,14) SAMRAI::hier::Box::Box_from_DatabaseBox(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)
  -> INLINE: (1208,22) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1208,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1208,39) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (1208,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$Ubb_V$b88.0.636->__vptr_V$972 + EXPR_CONV.SI32.I64(25(SI32)) * 8(I64))))
  -> INLINE: (1208,39) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1215,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (1215,16) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1215,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1215,16) SAMRAI::tbox::Database::getVector(SAMRAI::tbox::Database *, const std::string &, std::vector<double, std::allocator<double>> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,13) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,13) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,31)  EXPR_CONV.SI64.P64(*((SI64*) (this_22990_V$96e.0.523.23705->__vptr_V$972 + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
  -> INLINE: (1215,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1215,26) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1215,26) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1197,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdE14getFromRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:1197

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     525
            Global    :     130
            Local     :     395
        Regenerable   :     194
        Spilled       :       8
        
    Routine stack
        Variables     :     517 bytes*
            Reads     :      46 [1.81e+01 ~ 7.5%]
            Writes    :      68 [2.91e+01 ~ 12.2%]
        Spills        :      16 bytes*
            Reads     :       2 [1.33e-01 ~ 0.1%]
            Writes    :       2 [1.33e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, const std::vector<double, std::allocator<double>>::allocator_type &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(257,20):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1ERKS0_] /usr/include/c++/4.8.5/bits/stl_vector.h:257

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4tbox8DatabaseEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::putToRestart(const SAMRAI::pdat::SideData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::SideData<Real>::putToRestart(const SAMRAI::pdat::SideData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [580] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(899,1)
  -> INLINE: (904,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (904,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (904,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (904,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (904,52) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (904,52) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (904,52)  EXPR_CONV.SI64.P64(*((SI64*) (__$U95_V$ac7.0.612->__vptr_V$972 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> INLINE: (906,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (906,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (906,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (906,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (906,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (906,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (906,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U96_V$ac8.0.612->__vptr_V$972 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> (908,36) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (908,36) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (909,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (909,24) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (909,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (909,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (910,23) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(304,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (911,22) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (911,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (911,44) std::operator+<char, std::char_traits<char>, std::allocator<char>>(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, const char *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (911,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (912,25) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (912,25) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (912,37) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (912,51)  EXPR_CONV.SI64.P64(*((SI64*) (__$U99_V$acd.0.612->__vptr_V$972 + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (913,19) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (913,21) SAMRAI::pdat::ArrayData<Real>::putToRestart(const SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53)  EXPR_CONV.SI64.P64(*((SI64*) (__$Uc1_V$b9b.0.637.28499->__vptr_V$972 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$Uc3_V$b9d.0.637.28499->__vptr_V$972 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$Uc4_V$b9e.0.637.28499->__vptr_V$972 + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40)  EXPR_CONV.SI64.P64(*((SI64*) (__$Uc6_V$ba0.0.637.28499->__vptr_V$972 + EXPR_CONV.SI32.I64(22(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)
      -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1487,28)  EXPR_CONV.SI64.P64(*((SI64*) (this_22992_V$973.0.524.28518->__vptr_V$972 + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (914,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (915,4) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(909,33)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(899,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8SideDataIdE12putToRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:899

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     430
            Global    :     107
            Local     :     323
        Regenerable   :     144
        Spilled       :       6
        
    Routine stack
        Variables     :     140 bytes*
            Reads     :      34 [5.42e+01 ~ 10.1%]
            Writes    :      31 [3.22e+01 ~ 6.0%]
        Spills        :      24 bytes*
            Reads     :      31 [4.72e+00 ~ 0.9%]
            Writes    :       3 [2.96e+00 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<Real>::copyWithRotation(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideData<Real> &, const SAMRAI::pdat::SideOverlap &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<Real>::copyWithRotation(SAMRAI::pdat::SideData<Real> *, const SAMRAI::pdat::SideData<Real> &, const SAMRAI::pdat::SideOverlap &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(409,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SideData<int>::getPointer(SAMRAI::pdat::SideData<int> *, int, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SideData<int>::getPointer(SAMRAI::pdat::SideData<int> *, int, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp(157,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(117,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(125,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::canEstimateStreamSizeFromBox()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::canEstimateStreamSizeFromBox()) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(63,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::ArrayData(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Box &, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::ArrayData(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Box &, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(105,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(171,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(178,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(185,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(207,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(217,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(247,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(284,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(438,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(450,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getDataStreamSize(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getDataStreamSize(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(761,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::packStream(const SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::packStream(const SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(870,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::unpackStream(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::unpackStream(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(929,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::putToRestart(const SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::putToRestart(const SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1231,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1250,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::packBuffer(const SAMRAI::pdat::ArrayData<Real> *, Real *, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::packBuffer(const SAMRAI::pdat::ArrayData<Real> *, Real *, const SAMRAI::hier::Box &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1287,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::unpackBuffer(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::unpackBuffer(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1306,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(194,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CopyOperation.cpp(30,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<Real> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<Real> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(267,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(207,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<int>::fillAll(SAMRAI::pdat::ArrayData<int> *, const int &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<int>::fillAll(SAMRAI::pdat::ArrayData<int> *, const int &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1007,1)

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [713] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [__sti__$E] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       7
            Local     :       6
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::_M_get_Tp_allocator(std::_Vector_base<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::_M_deallocate(std::_Vector_base<double, std::allocator<double>> *, std::_Vector_base<double, std::allocator<double>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::_M_get_Tp_allocator(std::_Vector_base<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::~_Vector_base(std::_Vector_base<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::size(const std::vector<const Real *, std::allocator<const Real *>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIPKdSaIS1_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::_M_deallocate(std::_Vector_base<const Real *, std::allocator<const Real *>> *, std::_Vector_base<const Real *, std::allocator<const Real *>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EE13_M_deallocateEPS1_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Hashtable<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>>::_M_deallocate_node(std::_Hashtable<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>> *, std::_Hashtable<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>>::__node_type *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/hashtable.h(745,5):remark #34051: REGISTER ALLOCATION : [_ZNSt10_HashtableISsSt4pairIKSsN6SAMRAI4hier9IntVectorEESaIS5_ENSt8__detail10_Select1stESt8equal_toISsESt4hashISsENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb1ELb0ELb1EEEE18_M_deallocate_nodeEPNS7_10_Hash_nodeIS5_Lb1EEE] /usr/include/c++/4.8.5/bits/hashtable.h:745

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbx rsi rdi]
        
    Routine temporaries
        Total         :      23
            Global    :      11
            Local     :      12
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Hashtable<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>>::_M_node_allocator(std::_Hashtable<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/hashtable.h(331,7):remark #34051: REGISTER ALLOCATION : [_ZNSt10_HashtableISsSt4pairIKSsN6SAMRAI4hier9IntVectorEESaIS5_ENSt8__detail10_Select1stESt8equal_toISsESt4hashISsENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb1ELb0ELb1EEEE17_M_node_allocatorEv] /usr/include/c++/4.8.5/bits/hashtable.h:331

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::_M_default_append(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(541,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(558,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(534,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEE17_M_default_appendEm] /usr/include/c++/4.8.5/bits/vector.tcc:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      56
            Global    :      28
            Local     :      28
        Regenerable   :      11
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       3 [8.34e-01 ~ 0.8%]
            Writes    :       3 [8.34e-01 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::convertConservativeVariablesToPrimitiveVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::convertConservativeVariablesToPrimitiveVariables(FlowModelBasicUtilitiesSingleSpecies *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &, const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> &)) [802] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(106,1)
  -> (107,22) std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic>::expired(const std::__weak_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (109,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (109,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (109,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (109,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (109,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (109,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (109,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (109,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (109,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (109,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (109,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (109,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (109,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (109,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (109,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (115,64) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (115,64) std::weak_ptr<FlowModel>::lock(std::shared_ptr<FlowModel> *, const std::weak_ptr<FlowModel> *) const
  -> INLINE: (116,46) std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModel, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (122,42) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> (123,56) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (129,73) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (129,76) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (130,9) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (132,79) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (132,82) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (133,9) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (139,77) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (139,80) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (140,9) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (140,23) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (142,83) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (142,86) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (143,9) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (143,23) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (156,64) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (156,64) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (158,55) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (158,59) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (158,61) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (161,67) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (161,67) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (163,61) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (163,65) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (163,67) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (168,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (168,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (168,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (168,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (168,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (168,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (168,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (168,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (168,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (168,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (168,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (168,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (168,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (168,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (168,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (168,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (177,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (177,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (177,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (177,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (177,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (177,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (177,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (177,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (177,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (177,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (177,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (177,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (177,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (177,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (177,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (177,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (188,64) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (188,64) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (191,32) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (191,36) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (191,38) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (191,47) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (193,41) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (195,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (195,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (195,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (195,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (195,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (195,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (195,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (195,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (195,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (195,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (195,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (195,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (195,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (195,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (195,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (195,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (203,67) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (203,67) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (206,35) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (206,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (206,41) SAMRAI::hier::PatchData::getBox(const SAMRAI::hier::PatchData *) const
  -> (206,50) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (208,44) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (210,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (210,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (210,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (210,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (210,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (210,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (210,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (210,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (210,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (210,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (210,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (210,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (210,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (210,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (210,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (210,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (218,64) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (218,64) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> (220,38) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (220,60) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (220,64) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (220,66) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (222,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (222,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (222,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (222,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (222,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (222,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (222,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (222,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (222,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (222,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (222,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (222,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (222,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (222,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (222,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (222,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (230,67) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (230,67) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> (232,41) SAMRAI::hier::IntVector::operator!=(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (232,66) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (232,70) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (232,72) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (234,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (234,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (234,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (234,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (234,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (234,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (234,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (234,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (234,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (234,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (234,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (234,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (234,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (234,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (234,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (234,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (242,34) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (244,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (244,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (244,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (244,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (244,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (244,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (244,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (244,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (244,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (244,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (244,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (244,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (244,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (244,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (244,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (244,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (255,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (255,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (256,7) std::vector<Real *, std::allocator<Real *>>::resize(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (258,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (258,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (259,7) std::vector<Real *, std::allocator<Real *>>::resize(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (269,51) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (269,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<SAMRAI::pdat::SideData<Real>>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, SAMRAI::pdat::SideData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (269,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (272,51) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (272,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<SAMRAI::pdat::SideData<Real>>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, SAMRAI::pdat::SideData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (272,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (275,51) SAMRAI::pdat::SideData<Real>::SideData(SAMRAI::pdat::SideData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (275,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::shared_ptr<SAMRAI::pdat::SideData<Real>>(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *, SAMRAI::pdat::SideData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (275,51) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> INLINE: (285,71) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (285,71)  EXPR_CONV.SI64.P64(*((SI64*) (__$U100_V$d96.0.786->__vptr_V$11c + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
  -> (288,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (288,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (289,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (289,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (290,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (290,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (292,23) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (293,27) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (294,33) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
  -> (298,31) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
  -> INLINE: (298,59) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (299,37) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
  -> INLINE: (299,65) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (302,37) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (304,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U101_V$d97.0.786->__vptr_V$11c + EXPR_CONV.SI32.I64(48(SI32)) * 8(I64))))
  -> (306,5) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
  -> (306,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (306,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (306,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (306,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (306,5) std::shared_ptr<SAMRAI::pdat::SideData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::SideData<Real>> *)
  -> (306,5) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (306,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (306,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (306,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (308,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (310,75) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (311,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (318,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (318,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (320,44) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (320,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (320,50) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (324,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (324,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (324,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (324,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (330,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (330,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (332,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (332,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (332,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (336,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (336,54) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (336,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (336,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (341,31) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (341,33) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (342,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (342,41) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (343,32) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (343,34) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (354,42) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (366,47) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (366,58) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (367,35) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (367,62) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (372,41) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (372,41)  EXPR_CONV.SI64.P64(*((SI64*) (__$U11e_V$df1.0.786->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (372,63) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (372,65) EquationOfState::computePressure(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (389,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (389,40) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (402,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (402,40) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (415,14) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (415,25) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (418,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (420,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (421,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (423,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (424,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (425,79) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (427,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (428,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (429,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (436,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (436,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (438,44) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (438,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (438,50) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (442,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (442,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (442,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (442,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (448,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (448,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (450,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (450,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (450,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (454,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (454,54) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (454,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (454,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (459,31) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (459,33) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (460,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (460,41) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (461,32) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (461,34) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (475,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (491,51) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (491,62) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (492,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (492,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (493,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (493,49) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (499,41) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (499,41)  EXPR_CONV.SI64.P64(*((SI64*) (__$U121_V$e0a.0.786->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (499,63) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (499,65) EquationOfState::computePressure(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (521,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (521,44) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (540,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (540,44) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (541,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (541,44) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (560,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (560,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (569,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (569,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (571,44) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (571,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (571,50) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (575,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (575,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (575,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (575,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (581,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (581,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (583,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (583,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (583,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (587,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (587,54) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (587,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (587,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (592,31) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (592,33) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (593,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (593,41) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (594,32) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (594,34) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (608,46) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (624,51) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (624,62) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (625,39) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (625,66) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (626,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (626,49) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (632,41) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (632,41)  EXPR_CONV.SI64.P64(*((SI64*) (__$U122_V$e0b.0.786->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (632,63) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (632,65) EquationOfState::computePressure(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (654,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (654,44) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (673,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (673,44) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (674,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (674,44) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (693,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (693,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (697,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (699,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (700,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (701,49) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (703,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (704,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (705,72) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (706,79) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (707,79) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (709,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (710,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (711,78) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (712,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (713,85) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (720,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (720,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (722,44) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (722,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (722,50) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (726,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (726,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (726,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (726,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (732,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (732,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (734,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (734,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (734,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (738,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (738,54) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (738,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (738,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (743,31) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (743,33) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (744,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (744,41) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (745,32) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (745,34) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (763,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (784,55) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (784,66) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (785,43) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (785,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (786,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (786,53) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (787,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (787,53) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (794,41) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (794,41)  EXPR_CONV.SI64.P64(*((SI64*) (__$U125_V$e46.0.786->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (794,63) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (794,65) EquationOfState::computePressure(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (822,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (822,48) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (848,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (848,48) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (849,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (849,48) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (850,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (850,48) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (876,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (876,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (886,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (886,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (888,44) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (888,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (888,50) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (892,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (892,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (892,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (892,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (898,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (898,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (900,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (900,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (900,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (904,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (904,54) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (904,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (904,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (909,31) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (909,33) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (910,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (910,41) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (911,32) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (911,34) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (929,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (950,55) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (950,66) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (951,43) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (951,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (952,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (952,53) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (953,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (953,53) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (960,41) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (960,41)  EXPR_CONV.SI64.P64(*((SI64*) (__$U126_V$e47.0.786->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (960,63) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (960,65) EquationOfState::computePressure(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (988,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (988,48) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1014,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1014,48) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1015,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1015,48) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1016,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1016,48) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1042,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1042,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1052,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1052,68) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1054,44) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1054,48) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1054,50) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (1058,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1058,51) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type)
  -> INLINE: (1058,55) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1058,57) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1064,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1064,71) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *) const
  -> INLINE: (1066,47) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1066,51) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1066,53) SAMRAI::pdat::SideData<Real>::getDepth(const SAMRAI::pdat::SideData<Real> *) const
  -> INLINE: (1070,18) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1070,54) std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::SideData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::SideData<Real>>>>::size_type) const
  -> INLINE: (1070,58) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1070,60) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1075,31) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1075,33) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1076,39) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1076,41) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1077,32) std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::SideData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1077,34) SAMRAI::pdat::SideData<Real>::getPointer(SAMRAI::pdat::SideData<Real> *, int, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,30) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SideData.cpp:(162,32) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1095,50) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1116,55) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1116,66) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (1117,43) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1117,70) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1118,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1118,53) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1119,26) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1119,53) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1126,41) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1126,41)  EXPR_CONV.SI64.P64(*((SI64*) (__$U127_V$e48.0.786->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (1126,63) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> (1126,65) EquationOfState::computePressure(const EquationOfState *, std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::shared_ptr<SAMRAI::pdat::SideData<Real>> &, const std::vector<const Real *, std::allocator<const Real *>> &, int) const
  -> INLINE: (1154,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1154,48) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1180,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1180,48) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1181,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1181,48) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1182,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1182,48) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1208,22) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (1208,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(156,64)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   remark #25457: Number of partial sums replaced: 1
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(156,64)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(161,67)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   remark #25457: Number of partial sums replaced: 1
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(161,67)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(188,64)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(203,67)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(218,64)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(230,67)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(296,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(298,31) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(318,68)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(322,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[count_eqn] (324:18) and V.V.V.V (324:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(322,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(330,71)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(334,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[count_eqn] (336:18) and Q.Q.Q.Q (336:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(334,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(347,9)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(347,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(347,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(359,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between epsilon[i+num_ghosts_0_conservative_var] (366:13) and Q.Q.Q.Q[this+1][i+num_ghosts_0_conservative_var] (366:13)
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(381,9)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(381,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(381,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(394,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[1][i+num_ghosts_0_primitive_var] (402:14) and Q.Q.Q.Q[1][i+num_ghosts_0_conservative_var] (402:14)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(394,9)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(407,9)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(407,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(407,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(436,68)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(440,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[count_eqn] (442:18) and V.V.V.V (442:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(440,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(448,71)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(452,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[count_eqn] (454:18) and Q.Q.Q.Q (454:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(452,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(464,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (467:13) and rho[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative (475:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(467,13)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(467,13)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(467,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(480,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (491:17) and epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (491:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(483,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (491:17) and Q.Q.Q.Q[this+1][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_ (491:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(507,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (510:13) and V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (521:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(510,13)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(510,13)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(510,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(526,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[1][idx_primitive_var] (540:18) and V.V.V.V[2][idx_primitive_var] (541:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(529,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[1][idx_primitive_var] (540:18) and V.V.V.V[2][idx_primitive_var] (541:18)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(529,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(546,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between p[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative_v (549:13) and V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (560:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(549,13)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(549,13)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(549,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(569,68)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(573,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[count_eqn] (575:18) and V.V.V.V (575:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(573,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(581,71)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(585,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[count_eqn] (587:18) and Q.Q.Q.Q (587:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(585,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(597,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (602:13) and rho[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative (608:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(602,13)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(602,13)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(602,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(613,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (624:17) and epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (624:17)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(618,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (624:17) and Q.Q.Q.Q[this+1][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_ (624:17)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(640,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (645:13) and V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (654:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(645,13)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(645,13)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(645,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(659,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[1][idx_primitive_var] (673:18) and V.V.V.V[2][idx_primitive_var] (674:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(664,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[1][idx_primitive_var] (673:18) and V.V.V.V[2][idx_primitive_var] (674:18)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(664,13)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(679,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between p[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative_v (684:13) and V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (693:18)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(684,13)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(684,13)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(684,13)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(720,68)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(724,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[count_eqn] (726:18) and V.V.V.V (726:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(724,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(732,71)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(736,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[count_eqn] (738:18) and Q.Q.Q.Q (738:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(736,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(748,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (753:17) and rho[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative (763:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(750,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (753:17) and rho[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative (763:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(753,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(753,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(753,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(769,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (784:21) and epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (784:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(771,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (784:21) and epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (784:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(774,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (784:21) and Q.Q.Q.Q[this+1][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_ (784:21)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(802,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (807:17) and V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (822:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(804,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (807:17) and V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (822:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(807,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(807,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(807,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(828,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[1][idx_primitive_var] (848:22) and V.V.V.V[3][idx_primitive_var] (850:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(830,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[1][idx_primitive_var] (848:22) and V.V.V.V[3][idx_primitive_var] (850:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(833,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[1][idx_primitive_var] (848:22) and V.V.V.V[3][idx_primitive_var] (850:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(856,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between p[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative_v (861:17) and V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (876:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(858,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between p[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative_v (861:17) and V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (876:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(861,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(861,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(861,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(886,68)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(890,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[count_eqn] (892:18) and V.V.V.V (892:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(890,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(898,71)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(902,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[count_eqn] (904:18) and Q.Q.Q.Q (904:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(902,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(914,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (921:17) and rho[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative (929:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(916,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (921:17) and rho[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative (929:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(921,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(921,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(921,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(935,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (950:21) and epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (950:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(937,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (950:21) and epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (950:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(942,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (950:21) and Q.Q.Q.Q[this+1][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_ (950:21)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(968,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (975:17) and V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (988:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(970,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (975:17) and V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (988:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(975,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(975,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(975,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(994,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[1][idx_primitive_var] (1014:22) and V.V.V.V[3][idx_primitive_var] (1016:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(996,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[1][idx_primitive_var] (1014:22) and V.V.V.V[3][idx_primitive_var] (1016:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1001,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[1][idx_primitive_var] (1014:22) and V.V.V.V[3][idx_primitive_var] (1016:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1022,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between p[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative_v (1029:17) and V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (1042:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1024,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between p[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative_v (1029:17) and V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (1042:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1029,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1029,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1029,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1052,68)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1056,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between V.V.V.V[count_eqn] (1058:18) and V.V.V.V (1058:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1056,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1064,71)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1068,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between Q.Q.Q.Q[count_eqn] (1070:18) and Q.Q.Q.Q (1070:18)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1068,13)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1080,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (1087:17) and rho[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative (1095:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1084,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (1087:17) and rho[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative (1095:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1087,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1087,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1087,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1101,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (1116:21) and epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (1116:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1105,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (1116:21) and epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (1116:21)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1108,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between epsilon[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conserva (1116:21) and Q.Q.Q.Q[this+1][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_ (1116:21)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1134,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (1141:17) and V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (1154:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1138,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between Q.Q.Q.Q[0][i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conse (1141:17) and V.V.V.V[0][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_primitiv (1154:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1141,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1141,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1141,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1160,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[1][idx_primitive_var] (1180:22) and V.V.V.V[3][idx_primitive_var] (1182:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1164,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[1][idx_primitive_var] (1180:22) and V.V.V.V[3][idx_primitive_var] (1182:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1167,17)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between V.V.V.V[1][idx_primitive_var] (1180:22) and V.V.V.V[3][idx_primitive_var] (1182:22)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1188,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between p[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative_v (1195:17) and V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (1208:22)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1192,13)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between p[i+num_ghosts_0_conservative_var+(j+num_ghosts_1_conservative_v (1195:17) and V.V.V.V[this+1][i+num_ghosts_0_primitive_var+(j+num_ghosts_1_pri (1208:22)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1195,17)
         remark #25401: memcopy(with guard) generated
         remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1195,17)
         <Multiversioned v2>
            remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1195,17)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(347,9):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(381,9):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(407,9):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(467,13):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(510,13):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(753,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(807,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(861,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(921,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(975,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1029,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1087,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1141,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(1195,17):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(549,13):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(602,13):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(645,13):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(684,13):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(106,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies48convertConservativeVariablesToPrimitiveVariablesERSt6vectorISt10shared_ptrIN6SAMRAI4pdat8SideDataIdEEESaIS6_EERKS8_] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:106

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   27[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm11]
        
    Routine temporaries
        Total         :    4639
            Global    :    1311
            Local     :    3328
        Regenerable   :     966
        Spilled       :     273
        
    Routine stack
        Variables     :    3884 bytes*
            Reads     :     295 [2.64e+02 ~ 2.5%]
            Writes    :     423 [6.64e+02 ~ 6.3%]
        Spills        :    2136 bytes*
            Reads     :    1070 [7.59e+02 ~ 7.2%]
            Writes    :     484 [1.40e+02 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::convertConservativeVariablesToPrimitiveVariables(FlowModelBasicUtilitiesSingleSpecies *, const std::vector<const Real *, std::allocator<const Real *>> &, const std::vector<Real *, std::allocator<Real *>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::convertConservativeVariablesToPrimitiveVariables(FlowModelBasicUtilitiesSingleSpecies *, const std::vector<const Real *, std::allocator<const Real *>> &, const std::vector<Real *, std::allocator<Real *>> &)) [803] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(10,1)
  -> (35,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (35,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (36,11) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (36,25) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (37,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (37,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (39,15) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, const std::vector<const Real *, std::allocator<const Real *>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (39,26) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (46,71) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (46,71)  EXPR_CONV.SI64.P64(*((SI64*) (__$Uee_V$d73.0.785->__vptr_V$11c + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
  -> (49,23) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (49,23) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (50,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (50,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (51,30) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (51,30) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (53,23) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (54,27) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (55,33) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (59,31) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (59,59) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (60,37) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (60,65) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (63,37) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (65,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$Uef_V$d74.0.785->__vptr_V$11c + EXPR_CONV.SI32.I64(48(SI32)) * 8(I64))))
  -> INLINE: (69,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (71,22) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (71,47) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (71,55) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (71,63) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (71,72) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (73,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (75,22) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (75,48) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (75,56) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (75,66) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (75,74) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (75,83) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (75,92) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (77,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (79,22) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (79,48) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (79,56) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (79,66) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (79,74) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (79,84) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (79,92) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (79,101) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (79,110) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (83,52) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (83,52)  EXPR_CONV.SI64.P64(*((SI64*) (__$Uf2_V$d77.0.785->__vptr_V$11c + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (83,74) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (85,14) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INDIRECT- (VIRTUAL): (87,13)  EXPR_CONV.SI64.P64(*((SI64*) (__$Uf3_V$d78.0.785->__vptr_V$111 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (90,7) std::vector<Real *, std::allocator<Real *>>::operator[](const std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type) const
  -> INLINE: (90,15) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (91,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (91,33) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (93,11) std::vector<Real *, std::allocator<Real *>>::operator[](const std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type) const
  -> INLINE: (93,25) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (93,38) std::vector<const Real *, std::allocator<const Real *>>::operator[](const std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type) const
  -> INLINE: (95,7) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (95,7) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (95,7) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (95,7) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (95,7) std::vector<Real *, std::allocator<Real *>>::operator[](const std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type) const
  -> INLINE: (95,18) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(37,33)
   remark #15523: loop was not vectorized: loop control variable di was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(57,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/ext/new_allocator.h(104,27) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(91,33)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between primitive_variables->_M_start[di+1][0] (93:11) and conservative_variables->_M_start[di+1][0] (93:11)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(91,33)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp(10,1):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpecies48convertConservativeVariablesToPrimitiveVariablesERKSt6vectorIPKdSaIS2_EERKS0_IPdSaIS7_EE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.cpp:10

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :     314
            Global    :      95
            Local     :     219
        Regenerable   :      49
        Spilled       :      18
        
    Routine stack
        Variables     :     124 bytes*
            Reads     :      50 [6.94e+01 ~ 9.2%]
            Writes    :      31 [4.37e+01 ~ 5.8%]
        Spills        :     104 bytes*
            Reads     :      31 [2.23e+01 ~ 3.0%]
            Writes    :      24 [1.38e+01 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
