Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: FlowModelBasicUtilities::FlowModelBasicUtilities(FlowModelBasicUtilities *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const int &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelBasicUtilities::FlowModelBasicUtilities(FlowModelBasicUtilities *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const int &)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp(40,9)

===========================================================================

Begin optimization report for: FlowModelBasicUtilities::FlowModelBasicUtilities(FlowModelBasicUtilities *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const int &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelBasicUtilities::FlowModelBasicUtilities(FlowModelBasicUtilities *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const int &)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp(27,9)

===========================================================================

Begin optimization report for: FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *)) [5] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp(42,44)
  -> INLINE: (42,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (42,45) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (42,45) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp(42,44):remark #34051: REGISTER ALLOCATION : [_ZN23FlowModelBasicUtilitiesD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp:42

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r12-r14]
        
    Routine temporaries
        Total         :      41
            Global    :      20
            Local     :      21
        Regenerable   :      10
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *const)) [6] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp(42,17)
  -> INLINE: (42,17) FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *)
    -> INLINE: (42,45) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (42,45) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (42,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp(42,17):remark #34051: REGISTER ALLOCATION : [_ZN23FlowModelBasicUtilitiesD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp:42

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      42
            Global    :      20
            Local     :      22
        Regenerable   :      10
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelBasicUtilities::~FlowModelBasicUtilities(FlowModelBasicUtilities *const)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp(42,17)

===========================================================================

Begin optimization report for: FlowModelRiemannSolver::FlowModelRiemannSolver(FlowModelRiemannSolver *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelRiemannSolver::FlowModelRiemannSolver(FlowModelRiemannSolver *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelRiemannSolver.hpp(36,9)

===========================================================================

Begin optimization report for: FlowModelRiemannSolver::FlowModelRiemannSolver(FlowModelRiemannSolver *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelRiemannSolver::FlowModelRiemannSolver(FlowModelRiemannSolver *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelRiemannSolver.hpp(27,9)

===========================================================================

Begin optimization report for: FlowModelRiemannSolver::~FlowModelRiemannSolver(FlowModelRiemannSolver *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelRiemannSolver::~FlowModelRiemannSolver(FlowModelRiemannSolver *)) [10] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelRiemannSolver.hpp(38,43)
  -> INLINE: (38,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (38,44) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (38,44) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelRiemannSolver.hpp(38,43):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelRiemannSolverD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelRiemannSolver.hpp:38

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r12-r14]
        
    Routine temporaries
        Total         :      41
            Global    :      20
            Local     :      21
        Regenerable   :      10
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelRiemannSolver::~FlowModelRiemannSolver(FlowModelRiemannSolver *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelRiemannSolver::~FlowModelRiemannSolver(FlowModelRiemannSolver *const)) [11] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelRiemannSolver.hpp(38,17)
  -> INLINE: (38,17) FlowModelRiemannSolver::~FlowModelRiemannSolver(FlowModelRiemannSolver *)
    -> INLINE: (38,44) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (38,44) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (38,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelRiemannSolver.hpp(38,17):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelRiemannSolverD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelRiemannSolver.hpp:38

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      42
            Global    :      20
            Local     :      22
        Regenerable   :      10
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelRiemannSolver::~FlowModelRiemannSolver(FlowModelRiemannSolver *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelRiemannSolver::~FlowModelRiemannSolver(FlowModelRiemannSolver *const)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelRiemannSolver.hpp(38,17)

===========================================================================

Begin optimization report for: FlowModelStatisticsUtilities::FlowModelStatisticsUtilities(FlowModelStatisticsUtilities *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelStatisticsUtilities::FlowModelStatisticsUtilities(FlowModelStatisticsUtilities *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(32,9)

===========================================================================

Begin optimization report for: FlowModelStatisticsUtilities::FlowModelStatisticsUtilities(FlowModelStatisticsUtilities *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelStatisticsUtilities::FlowModelStatisticsUtilities(FlowModelStatisticsUtilities *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(21,9)

===========================================================================

Begin optimization report for: FlowModelStatisticsUtilities::~FlowModelStatisticsUtilities(FlowModelStatisticsUtilities *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelStatisticsUtilities::~FlowModelStatisticsUtilities(FlowModelStatisticsUtilities *)) [15] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(46,49)
  -> INLINE: (46,50) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (46,50) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (46,50) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (46,50) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (46,50) std::shared_ptr<EnsembleStatistics>::~shared_ptr(std::shared_ptr<EnsembleStatistics> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(47,50)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(46,49):remark #34051: REGISTER ALLOCATION : [_ZN28FlowModelStatisticsUtilitiesD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:46

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rbp rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      68
            Global    :      26
            Local     :      42
        Regenerable   :      17
        Spilled       :       4
        
    Routine stack
        Variables     :       2 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [9.85e-01 ~ 0.9%]
            Writes    :       1 [9.85e-01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelStatisticsUtilities::~FlowModelStatisticsUtilities(FlowModelStatisticsUtilities *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelStatisticsUtilities::~FlowModelStatisticsUtilities(FlowModelStatisticsUtilities *const)) [16] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(46,17)
  -> INLINE: (46,17) FlowModelStatisticsUtilities::~FlowModelStatisticsUtilities(FlowModelStatisticsUtilities *)
    -> INLINE: (46,50) std::shared_ptr<EnsembleStatistics>::~shared_ptr(std::shared_ptr<EnsembleStatistics> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (46,50) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (46,50) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (46,50) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (46,50) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(47,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(46,17):remark #34051: REGISTER ALLOCATION : [_ZN28FlowModelStatisticsUtilitiesD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:46

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rbp rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      69
            Global    :      26
            Local     :      43
        Regenerable   :      17
        Spilled       :       4
        
    Routine stack
        Variables     :       2 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [9.85e-01 ~ 0.9%]
            Writes    :       1 [9.85e-01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelStatisticsUtilities::~FlowModelStatisticsUtilities(FlowModelStatisticsUtilities *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelStatisticsUtilities::~FlowModelStatisticsUtilities(FlowModelStatisticsUtilities *const)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(46,17)

===========================================================================

Begin optimization report for: FlowModelStatisticsUtilities::putToRestart(const FlowModelStatisticsUtilities *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelStatisticsUtilities::putToRestart(const FlowModelStatisticsUtilities *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(62,9)

===========================================================================

Begin optimization report for: FlowModelStatisticsUtilities::registerVariables(FlowModelStatisticsUtilities *, RungeKuttaLevelIntegrator *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelStatisticsUtilities::registerVariables(FlowModelStatisticsUtilities *, RungeKuttaLevelIntegrator *, const SAMRAI::hier::IntVector &)) [19] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(76,9)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(76,9):remark #34051: REGISTER ALLOCATION : [_ZN28FlowModelStatisticsUtilities17registerVariablesEP25RungeKuttaLevelIntegratorRKN6SAMRAI4hier9IntVectorE] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:76

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelStatisticsUtilities::computeVariables(FlowModelStatisticsUtilities *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelStatisticsUtilities::computeVariables(FlowModelStatisticsUtilities *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &)) [20] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(88,9)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(88,9):remark #34051: REGISTER ALLOCATION : [_ZN28FlowModelStatisticsUtilities16computeVariablesERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEERKS0_INS2_15VariableContextEE] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:88

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelStatisticsUtilities::filterVariables(FlowModelStatisticsUtilities *, int, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelStatisticsUtilities::filterVariables(FlowModelStatisticsUtilities *, int, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &)) [21] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(101,9)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(101,9):remark #34051: REGISTER ALLOCATION : [_ZN28FlowModelStatisticsUtilities15filterVariablesEiRKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEERKS0_INS2_15VariableContextEE] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelStatisticsUtilities::computeStatisticalQuantities(FlowModelStatisticsUtilities *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, double)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelStatisticsUtilities::computeStatisticalQuantities(FlowModelStatisticsUtilities *, const std::shared_ptr<SAMRAI::hier::PatchHierarchy> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &, double)) [22] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(115,9)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(115,9):remark #34051: REGISTER ALLOCATION : [_ZN28FlowModelStatisticsUtilities28computeStatisticalQuantitiesERKSt10shared_ptrIN6SAMRAI4hier14PatchHierarchyEERKS0_INS2_15VariableContextEEd] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:115

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rdx rsi rdi zmm0]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::~FlowModel(FlowModel *const)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModel::~FlowModel(FlowModel *const)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(76,17)

===========================================================================

Begin optimization report for: FlowModel::setDataContext(FlowModel *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModel::setDataContext(FlowModel *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(466,9)

===========================================================================

Begin optimization report for: FlowModel::clearDataContext(FlowModel *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModel::clearDataContext(FlowModel *)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(475,9)

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::FlowModelSingleSpecies(FlowModelSingleSpecies *const, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::FlowModelSingleSpecies(FlowModelSingleSpecies *const, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)) [26] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(16,25)
  -> (16,25) FlowModelSingleSpecies::FlowModelSingleSpecies(FlowModelSingleSpecies *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(16,25):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpeciesC2ERKSsS1_RKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKiRKS7_INS3_8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:16

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rdx rcx rsi rdi r8-r9]
        
    Routine temporaries
        Total         :      24
            Global    :       0
            Local     :      24
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::FlowModelSingleSpecies(FlowModelSingleSpecies *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::FlowModelSingleSpecies(FlowModelSingleSpecies *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)) [27] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(79,1)
  -> INLINE: (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<EquationOfShearViscosityMixingRules>::shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<EquationOfShearViscosityMixingRulesManager>::shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRulesManager> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<EquationOfBulkViscosityMixingRules>::shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<EquationOfBulkViscosityMixingRulesManager>::shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRulesManager> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<EquationOfThermalConductivityMixingRules>::shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::shared_ptr<EquationOfThermalConductivityMixingRulesManager>::shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRulesManager> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (16,25) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (16,25) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (16,25) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (16,25) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (16,25) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (16,25) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (16,25) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> (16,25) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)
  -> (16,25) std::shared_ptr<EquationOfThermalConductivityMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRulesManager> *)
  -> (16,25) std::shared_ptr<EquationOfThermalConductivityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRules> *)
  -> (16,25) std::shared_ptr<EquationOfBulkViscosityMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRulesManager> *)
  -> (16,25) std::shared_ptr<EquationOfBulkViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRules> *)
  -> (16,25) std::shared_ptr<EquationOfShearViscosityMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRulesManager> *)
  -> (16,25) std::shared_ptr<EquationOfShearViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRules> *)
  -> INLINE: (16,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (16,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (29,21) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (30,13) FlowModel::~FlowModel(FlowModel *const)
    -> /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp:(76,17) FlowModel::~FlowModel(FlowModel *)
  -> (31,34) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (31,35) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (32,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (32,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (33,34) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (33,35) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (34,37) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (34,38) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (35,37) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (35,38) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (36,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (36,44) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (37,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (37,44) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (38,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (38,44) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (39,42) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (39,43) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (40,42) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (40,43) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (41,42) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (41,43) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (42,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (42,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (43,33) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
  -> (44,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
  -> (45,33) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
  -> (46,36) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
  -> (47,36) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
  -> (48,42) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
  -> (49,42) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
  -> (50,42) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
  -> (51,41) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
  -> (52,41) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
  -> (53,41) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
  -> (54,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
  -> (55,38) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (56,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (57,38) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (58,41) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (59,41) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (60,47) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (61,47) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (62,47) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (63,46) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (64,46) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (65,46) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (66,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> (80,16) std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::reserve(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *, std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::size_type)
  -> INLINE: (84,20) std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::push_back(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *, std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (91,24) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (91,24) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (91,24) std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (91,24) std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> *, std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (92,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (92,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (92,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> (92,56) SAMRAI::pdat::CellVariable<Real>::CellVariable(SAMRAI::pdat::CellVariable<Real> *, const SAMRAI::tbox::Dimension &, const std::string &, int)
  -> INLINE: (92,56) std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>::shared_ptr<SAMRAI::pdat::CellVariable<Real>>(std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> *, SAMRAI::pdat::CellVariable<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (94,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (94,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (94,25) std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (94,25) std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> *, std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (95,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (95,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (95,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (95,63) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (95,63) SAMRAI::pdat::CellVariable<Real>::CellVariable(SAMRAI::pdat::CellVariable<Real> *, const SAMRAI::tbox::Dimension &, const std::string &, int)
  -> INLINE: (95,63) std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>::shared_ptr<SAMRAI::pdat::CellVariable<Real>>(std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> *, SAMRAI::pdat::CellVariable<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (97,29) std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> *, std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (97,29) std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (97,29) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (97,29) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (98,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (98,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (98,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (98,61) SAMRAI::pdat::CellVariable<Real>::CellVariable(SAMRAI::pdat::CellVariable<Real> *, const SAMRAI::tbox::Dimension &, const std::string &, int)
  -> INLINE: (98,61) std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>::shared_ptr<SAMRAI::pdat::CellVariable<Real>>(std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> *, SAMRAI::pdat::CellVariable<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (105,22) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (105,34) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (105,34) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (105,34) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (105,34)  EXPR_CONV.SI64.P64(*((SI64*) (__$U208_V$179b.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (105,34) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (105,34) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (107,33) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (107,33) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (107,33) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (107,33) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (107,48) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (107,60) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (107,60) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (107,60) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (107,60)  EXPR_CONV.SI64.P64(*((SI64*) (__$U238_V$17d3.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(73(SI32)) * 8(I64))))
  -> INLINE: (107,60) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (109,27) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (109,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (109,39) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (109,39) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (109,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U23b_V$17d7.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (109,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (109,39) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (111,33) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,33) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,33) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (111,33) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (111,48) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (111,60) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,60) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (111,60) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (111,60) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (111,60)  EXPR_CONV.SI64.P64(*((SI64*) (__$U240_V$17dc.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(73(SI32)) * 8(I64))))
  -> INLINE: (115,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (115,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (115,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (115,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (115,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (115,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (115,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (115,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (115,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (115,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (115,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (115,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (115,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (115,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (115,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (121,39) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (121,39) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (123,22) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (123,34) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (123,34) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (123,34) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (123,34)  EXPR_CONV.SI64.P64(*((SI64*) (__$U20a_V$179d.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (123,34) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (123,34) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (125,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (125,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (125,43) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (125,43) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (125,58) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (125,72) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (125,72) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (125,72)  EXPR_CONV.SI64.P64(*((SI64*) (__$U247_V$17e9.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (125,72) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (127,27) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (127,39) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (127,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (127,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (127,39) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (127,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U24a_V$17ed.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (127,39) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (129,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (129,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (129,43) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (129,43) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (129,58) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (129,72) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (129,72) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (129,72)  EXPR_CONV.SI64.P64(*((SI64*) (__$U24f_V$17f2.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (129,72) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (133,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (133,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (133,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (133,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (133,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (133,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (133,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (133,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (133,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (133,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (133,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (133,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (133,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (133,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (133,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (139,46) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (139,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (139,46) std::__shared_ptr<EquationOfStateMixingRulesManager, __gnu_cxx::_S_atomic>::reset<EquationOfStateMixingRulesManager>(std::__shared_ptr<EquationOfStateMixingRulesManager, __gnu_cxx::_S_atomic> *, EquationOfStateMixingRulesManager *)
  -> INLINE: (140,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (140,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (140,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (147,38) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (147,38) std::shared_ptr<EquationOfStateMixingRules>::operator=(std::shared_ptr<EquationOfStateMixingRules> *, std::shared_ptr<EquationOfStateMixingRules> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (148,49) std::__shared_ptr<EquationOfStateMixingRulesManager, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRulesManager, __gnu_cxx::_S_atomic> *) const
  -> (148,51) EquationOfStateMixingRulesManager::getEquationOfStateMixingRules(std::shared_ptr<EquationOfStateMixingRules> *, const EquationOfStateMixingRulesManager *) const
  -> (150,24) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (150,24) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (152,71) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (152,71)  EXPR_CONV.SI64.P64(*((SI64*) (__$U210_V$17a3.0.1556->__vptr_V$135 + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
  -> (155,27) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (156,25) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (160,31) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (160,61) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (163,37) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (165,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U211_V$17a4.0.1556->__vptr_V$135 + EXPR_CONV.SI32.I64(48(SI32)) * 8(I64))))
  -> DELETED: (172,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (172,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (172,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (172,35) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (172,35) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (172,35) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (172,35)  EXPR_CONV.SI64.P64(*((SI64*) (__$U214_V$17a7.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (172,35) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (172,35) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (172,35) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (172,35) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (173,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (173,35) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (173,35)  EXPR_CONV.SI64.P64(*((SI64*) (__$U217_V$17aa.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (175,26) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (175,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (175,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (175,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (175,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (175,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U256_V$17ff.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (175,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (177,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (177,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (177,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (177,47) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (178,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (178,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (178,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (178,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (178,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (178,42)  EXPR_CONV.SI64.P64(*((SI64*) (__$U263_V$180f.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(73(SI32)) * 8(I64))))
  -> INLINE: (180,31) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (180,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (180,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (180,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (180,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (180,43)  EXPR_CONV.SI64.P64(*((SI64*) (__$U266_V$1813.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (180,43) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (182,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (182,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (182,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (182,47) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (183,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (183,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (183,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (183,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (183,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (183,42)  EXPR_CONV.SI64.P64(*((SI64*) (__$U26b_V$1818.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(73(SI32)) * 8(I64))))
  -> (186,43) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (186,43) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (188,26) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (188,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (188,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (188,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (188,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (188,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U258_V$1801.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (188,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (190,57) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (190,57) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (190,57) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (190,57) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (191,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (191,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (191,44) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (191,44)  EXPR_CONV.SI64.P64(*((SI64*) (__$U26f_V$181d.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (191,44) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (193,31) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (193,43) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (193,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (193,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (193,43)  EXPR_CONV.SI64.P64(*((SI64*) (__$U272_V$1821.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (193,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (193,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (195,57) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (195,57) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (195,57) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (195,57) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (196,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (196,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (196,44) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (196,44)  EXPR_CONV.SI64.P64(*((SI64*) (__$U277_V$1826.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (196,44) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (200,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (200,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (200,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (200,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (200,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (200,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (200,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (200,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (200,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (200,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (200,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (200,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (200,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (200,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (200,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (200,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (207,60) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (207,60) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (207,60) std::__shared_ptr<EquationOfShearViscosityMixingRulesManager, __gnu_cxx::_S_atomic>::reset<EquationOfShearViscosityMixingRulesManager>(std::__shared_ptr<EquationOfShearViscosityMixingRulesManager, __gnu_cxx::_S_atomic> *, EquationOfShearViscosityMixingRulesManager *)
  -> INLINE: (209,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (209,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (209,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (216,52) std::shared_ptr<EquationOfShearViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (216,52) std::shared_ptr<EquationOfShearViscosityMixingRules>::operator=(std::shared_ptr<EquationOfShearViscosityMixingRules> *, std::shared_ptr<EquationOfShearViscosityMixingRules> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (217,63) std::__shared_ptr<EquationOfShearViscosityMixingRulesManager, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfShearViscosityMixingRulesManager, __gnu_cxx::_S_atomic> *) const
  -> (218,17) EquationOfShearViscosityMixingRulesManager::getEquationOfShearViscosityMixingRules(std::shared_ptr<EquationOfShearViscosityMixingRules> *, const EquationOfShearViscosityMixingRulesManager *) const
  -> (220,28) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (220,28) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (222,88) std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (222,88)  EXPR_CONV.SI64.P64(*((SI64*) (__$U25e_V$1807.0.1556->__vptr_V$255 + EXPR_CONV.SI32.I64(9(SI32)) * 8(I64))))
  -> (225,34) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (226,48) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (230,38) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (230,87) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (233,51) std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (235,13)  EXPR_CONV.SI64.P64(*((SI64*) (__$U25f_V$1808.0.1556->__vptr_V$255 + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> (236,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (236,5) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (243,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (243,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (243,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (243,35) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (243,35) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (243,35) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (243,35)  EXPR_CONV.SI64.P64(*((SI64*) (__$U21b_V$17ae.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (243,35) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (243,35) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (243,35) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (243,35) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (244,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (244,35) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (244,35)  EXPR_CONV.SI64.P64(*((SI64*) (__$U21c_V$17af.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (246,26) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (246,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (246,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (246,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (246,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (246,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U27e_V$1836.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (246,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (248,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (248,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (248,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (248,46) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (249,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (249,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (249,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (249,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (249,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (249,42)  EXPR_CONV.SI64.P64(*((SI64*) (__$U28b_V$1846.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(73(SI32)) * 8(I64))))
  -> INLINE: (251,31) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (251,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (251,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (251,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (251,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (251,43)  EXPR_CONV.SI64.P64(*((SI64*) (__$U28e_V$184a.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (251,43) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (253,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (253,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (253,46) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (253,46) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (254,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (254,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (254,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (254,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (254,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (254,42)  EXPR_CONV.SI64.P64(*((SI64*) (__$U293_V$184f.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(73(SI32)) * 8(I64))))
  -> (257,43) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (257,43) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (259,26) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (259,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (259,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (259,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (259,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (259,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U280_V$1838.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (259,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (261,56) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (261,56) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (261,56) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (261,56) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (262,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (262,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (262,44) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (262,44)  EXPR_CONV.SI64.P64(*((SI64*) (__$U297_V$1854.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (262,44) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (264,31) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (264,43) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (264,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (264,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (264,43)  EXPR_CONV.SI64.P64(*((SI64*) (__$U29a_V$1858.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (264,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (264,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (266,56) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (266,56) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (266,56) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (266,56) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (267,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (267,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (267,44) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (267,44)  EXPR_CONV.SI64.P64(*((SI64*) (__$U29f_V$185d.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (267,44) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (271,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (271,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (271,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (271,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (271,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (271,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (271,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (271,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (271,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (271,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (271,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (271,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (271,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (271,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (271,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (271,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (278,59) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (278,59) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (278,59) std::__shared_ptr<EquationOfBulkViscosityMixingRulesManager, __gnu_cxx::_S_atomic>::reset<EquationOfBulkViscosityMixingRulesManager>(std::__shared_ptr<EquationOfBulkViscosityMixingRulesManager, __gnu_cxx::_S_atomic> *, EquationOfBulkViscosityMixingRulesManager *)
  -> INLINE: (280,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (280,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (280,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (287,51) std::shared_ptr<EquationOfBulkViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (287,51) std::shared_ptr<EquationOfBulkViscosityMixingRules>::operator=(std::shared_ptr<EquationOfBulkViscosityMixingRules> *, std::shared_ptr<EquationOfBulkViscosityMixingRules> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (288,62) std::__shared_ptr<EquationOfBulkViscosityMixingRulesManager, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfBulkViscosityMixingRulesManager, __gnu_cxx::_S_atomic> *) const
  -> (289,17) EquationOfBulkViscosityMixingRulesManager::getEquationOfBulkViscosityMixingRules(std::shared_ptr<EquationOfBulkViscosityMixingRules> *, const EquationOfBulkViscosityMixingRulesManager *) const
  -> (291,28) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (291,28) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (293,87) std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (293,87)  EXPR_CONV.SI64.P64(*((SI64*) (__$U286_V$183e.0.1556->__vptr_V$27a + EXPR_CONV.SI32.I64(9(SI32)) * 8(I64))))
  -> (296,34) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (297,47) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (301,38) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (301,86) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (304,50) std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (306,13)  EXPR_CONV.SI64.P64(*((SI64*) (__$U287_V$183f.0.1556->__vptr_V$27a + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> (307,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (307,5) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (314,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (314,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (314,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (314,35) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (314,35) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (314,35) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (314,35) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (314,35) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (314,35)  EXPR_CONV.SI64.P64(*((SI64*) (__$U220_V$17b3.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (314,35) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (314,35) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (315,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (315,35) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (315,35)  EXPR_CONV.SI64.P64(*((SI64*) (__$U221_V$17b4.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (317,26) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (317,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (317,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (317,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (317,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (317,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2a6_V$186c.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (317,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (319,52) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (319,52) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (319,52) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (319,52) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (320,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (320,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (320,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (320,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (320,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (320,42)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2b3_V$187c.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(73(SI32)) * 8(I64))))
  -> INLINE: (322,31) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (322,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (322,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (322,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (322,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (322,43)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2b6_V$1880.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (322,43) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (324,52) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::operator=(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::basic_string<char, std::char_traits<char>, std::allocator<char>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (324,52) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (324,52) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (324,52) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (325,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (325,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (325,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (325,42) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (325,42) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (325,42)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2bb_V$1885.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(73(SI32)) * 8(I64))))
  -> (328,43) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (328,43) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (330,26) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (330,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (330,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (330,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (330,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (330,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2a8_V$186e.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (330,38) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (332,62) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (332,62) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,62) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (332,62) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (333,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (333,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (333,44) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (333,44)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2bf_V$188a.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (333,44) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (335,31) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (335,43) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (335,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (335,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (335,43)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2c2_V$188e.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (335,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (335,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (337,62) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (337,62) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (337,62) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (337,62) std::shared_ptr<SAMRAI::tbox::Database>::operator=(std::shared_ptr<SAMRAI::tbox::Database> *, std::shared_ptr<SAMRAI::tbox::Database> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (338,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (338,44) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (338,44) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (338,44)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2c7_V$1893.0.1556->__vptr_V$6ee + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (338,44) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (342,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (342,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (342,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (342,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (342,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (342,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (342,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (342,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (342,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (342,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (342,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (342,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (342,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (342,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (342,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (342,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (349,65) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (349,65) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (349,65) std::__shared_ptr<EquationOfThermalConductivityMixingRulesManager, __gnu_cxx::_S_atomic>::reset<EquationOfThermalConductivityMixingRulesManager>(std::__shared_ptr<EquationOfThermalConductivityMixingRulesManager, __gnu_cxx::_S_atomic> *, EquationOfThermalConductivityMixingRulesManager *)
  -> INLINE: (351,17) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (351,17) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (351,17) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (358,57) std::shared_ptr<EquationOfThermalConductivityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (358,57) std::shared_ptr<EquationOfThermalConductivityMixingRules>::operator=(std::shared_ptr<EquationOfThermalConductivityMixingRules> *, std::shared_ptr<EquationOfThermalConductivityMixingRules> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (359,68) std::__shared_ptr<EquationOfThermalConductivityMixingRulesManager, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfThermalConductivityMixingRulesManager, __gnu_cxx::_S_atomic> *) const
  -> (360,17) EquationOfThermalConductivityMixingRulesManager::getEquationOfThermalConductivityMixingRules(std::shared_ptr<EquationOfThermalConductivityMixingRules> *, const EquationOfThermalConductivityMixingRulesManager *) const
  -> (362,28) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (362,28) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (364,93) std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (364,93)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2ae_V$1874.0.1556->__vptr_V$2a0 + EXPR_CONV.SI32.I64(7(SI32)) * 8(I64))))
  -> (367,34) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (368,53) std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (372,38) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (372,92) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (375,56) std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (377,13)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2af_V$1875.0.1556->__vptr_V$2a0 + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (378,5) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (378,5) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> DELETED: (383,33) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (383,33) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (383,33) std::__shared_ptr<FlowModelRiemannSolver, __gnu_cxx::_S_atomic>::reset<FlowModelRiemannSolverSingleSpecies>(std::__shared_ptr<FlowModelRiemannSolver, __gnu_cxx::_S_atomic> *, FlowModelRiemannSolverSingleSpecies *)
  -> INLINE: (384,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (384,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (384,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> (387,9) FlowModelRiemannSolverSingleSpecies::FlowModelRiemannSolverSingleSpecies(FlowModelRiemannSolverSingleSpecies *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &)
  -> DELETED: (392,34) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (392,34) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (392,34) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (392,34) std::__shared_ptr<FlowModelBasicUtilities, __gnu_cxx::_S_atomic>::reset<FlowModelBasicUtilitiesSingleSpecies>(std::__shared_ptr<FlowModelBasicUtilities, __gnu_cxx::_S_atomic> *, FlowModelBasicUtilitiesSingleSpecies *)
  -> INLINE: (393,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (393,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (393,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (397,9) std::shared_ptr<EquationOfStateMixingRules>::shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *, const std::shared_ptr<EquationOfStateMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (397,9) FlowModelBasicUtilitiesSingleSpecies::FlowModelBasicUtilitiesSingleSpecies(FlowModelBasicUtilitiesSingleSpecies *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<EquationOfStateMixingRules> *)
  -> (397,9) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
  -> DELETED: (402,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (402,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (402,43) std::shared_ptr<EquationOfShearViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (402,43) std::shared_ptr<EquationOfBulkViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (402,43) std::shared_ptr<EquationOfThermalConductivityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (402,43) std::__shared_ptr<FlowModelDiffusiveFluxUtilities, __gnu_cxx::_S_atomic>::reset<FlowModelDiffusiveFluxUtilitiesSingleSpecies>(std::__shared_ptr<FlowModelDiffusiveFluxUtilities, __gnu_cxx::_S_atomic> *, FlowModelDiffusiveFluxUtilitiesSingleSpecies *)
  -> INLINE: (403,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (403,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (403,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (408,9) std::shared_ptr<EquationOfShearViscosityMixingRules>::shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRules> *, const std::shared_ptr<EquationOfShearViscosityMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (408,9) std::shared_ptr<EquationOfShearViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRules> *)
  -> INLINE: (409,9) std::shared_ptr<EquationOfBulkViscosityMixingRules>::shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRules> *, const std::shared_ptr<EquationOfBulkViscosityMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (409,9) std::shared_ptr<EquationOfBulkViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRules> *)
  -> INLINE: (410,9) std::shared_ptr<EquationOfThermalConductivityMixingRules>::shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRules> *, const std::shared_ptr<EquationOfThermalConductivityMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (410,9) std::shared_ptr<EquationOfThermalConductivityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRules> *)
  -> DELETED: (415,35) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (415,35) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (415,35) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (415,35) std::__shared_ptr<FlowModelSourceUtilities, __gnu_cxx::_S_atomic>::reset<FlowModelSourceUtilitiesSingleSpecies>(std::__shared_ptr<FlowModelSourceUtilities, __gnu_cxx::_S_atomic> *, FlowModelSourceUtilitiesSingleSpecies *)
  -> INLINE: (416,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (416,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (416,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (422,9) std::shared_ptr<EquationOfStateMixingRules>::shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *, const std::shared_ptr<EquationOfStateMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (422,9) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
  -> DELETED: (427,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (427,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (427,37) std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::reset<FlowModelBoundaryUtilitiesSingleSpecies>(std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *, FlowModelBoundaryUtilitiesSingleSpecies *)
  -> INLINE: (429,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (429,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (429,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> DELETED: (438,50) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (438,50) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (438,50) std::__shared_ptr<FlowModelMonitoringStatisticsUtilities, __gnu_cxx::_S_atomic>::reset<FlowModelMonitoringStatisticsUtilitiesSingleSpecies>(std::__shared_ptr<FlowModelMonitoringStatisticsUtilities, __gnu_cxx::_S_atomic> *, FlowModelMonitoringStatisticsUtilitiesSingleSpecies *)
  -> INLINE: (439,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (439,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (439,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (448,39) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (448,39) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> DELETED: (448,39) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (448,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (448,39) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (448,39) std::shared_ptr<EquationOfShearViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (448,39) std::shared_ptr<EquationOfBulkViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (448,39) std::shared_ptr<EquationOfThermalConductivityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (448,39) std::__shared_ptr<FlowModelStatisticsUtilities, __gnu_cxx::_S_atomic>::reset<FlowModelStatisticsUtilitiesSingleSpecies>(std::__shared_ptr<FlowModelStatisticsUtilities, __gnu_cxx::_S_atomic> *, FlowModelStatisticsUtilitiesSingleSpecies *)
  -> INLINE: (449,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (449,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (449,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (454,9) std::shared_ptr<EquationOfStateMixingRules>::shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *, const std::shared_ptr<EquationOfStateMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (454,9) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
  -> INLINE: (455,9) std::shared_ptr<EquationOfShearViscosityMixingRules>::shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRules> *, const std::shared_ptr<EquationOfShearViscosityMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (455,9) std::shared_ptr<EquationOfShearViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRules> *)
  -> INLINE: (456,9) std::shared_ptr<EquationOfBulkViscosityMixingRules>::shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRules> *, const std::shared_ptr<EquationOfBulkViscosityMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (456,9) std::shared_ptr<EquationOfBulkViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRules> *)
  -> INLINE: (457,9) std::shared_ptr<EquationOfThermalConductivityMixingRules>::shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRules> *, const std::shared_ptr<EquationOfThermalConductivityMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (457,9) FlowModelStatisticsUtilitiesSingleSpecies::FlowModelStatisticsUtilitiesSingleSpecies(FlowModelStatisticsUtilitiesSingleSpecies *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &, const std::shared_ptr<EquationOfStateMixingRules> *, const std::shared_ptr<EquationOfShearViscosityMixingRules> *, const std::shared_ptr<EquationOfBulkViscosityMixingRules> *, const std::shared_ptr<EquationOfThermalConductivityMixingRules> *)
  -> (457,9) std::shared_ptr<EquationOfThermalConductivityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRules> *)


    Report from: Offload optimizations [offload]

OpenMP Construct at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(79,1)
remark #16219: Some OpenMP processing was skipped to constrain compile time. Consider overriding limits (-qoverride-limits).

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(16,25)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(82,5)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(158,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(228,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(299,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(370,9)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.8.5/bits/stl_vector.h(920,9) ]
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(79,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpeciesC1ERKSsS1_RKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKiRKS7_INS3_8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:79

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :    4542
            Global    :    1096
            Local     :    3446
        Regenerable   :    1484
        Spilled       :      74
        
    Routine stack
        Variables     :    2971 bytes*
            Reads     :     267 [6.02e+01 ~ 3.9%]
            Writes    :     436 [7.88e+01 ~ 5.1%]
        Spills        :     552 bytes*
            Reads     :     104 [5.74e+01 ~ 3.7%]
            Writes    :      69 [6.75e+01 ~ 4.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::emplace_back<std::remove_reference<std::_Vector_base<double, std::allocator<double>>::pointer &>::type>(std::vector<Real *, std::allocator<Real *>> *, std::remove_reference<std::_Vector_base<double, std::allocator<double>>::pointer &>::type &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(93,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EE12emplace_backIIS0_EEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      35
            Global    :      17
            Local     :      18
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::_M_deallocate(std::_Vector_base<Real *, std::allocator<Real *>> *, std::_Vector_base<Real *, std::allocator<Real *>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EE13_M_deallocateEPS0_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::_M_get_Tp_allocator(std::_Vector_base<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::size(const std::vector<Real *, std::allocator<Real *>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIPdSaIS0_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::emplace_back<std::remove_reference<std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::value_type &>::type>(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *, std::remove_reference<std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::value_type &>::type &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(93,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIN8EQN_FORM4TYPEESaIS1_EE12emplace_backIIS1_EEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      35
            Global    :      17
            Local     :      18
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::_M_deallocate(std::_Vector_base<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *, std::_Vector_base<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIN8EQN_FORM4TYPEESaIS1_EE13_M_deallocateEPS1_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::_M_get_Tp_allocator(std::_Vector_base<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIN8EQN_FORM4TYPEESaIS1_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::size(const std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIN8EQN_FORM4TYPEESaIS1_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)) [44] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1145,4)
  -> INLINE: (1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1145,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVector6getOneERKNS_4tbox9DimensionE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:1145

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)) [45] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1347,4)
  -> INLINE: (1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1347,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier3Box11getEmptyBoxERKNS_4tbox9DimensionE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:1347

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)) [46] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1132,4)
  -> INLINE: (1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1132,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVector7getZeroERKNS_4tbox9DimensionE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:1132

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellVariable<Real> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::CellVariable<Real> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(449,2):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IPN6SAMRAI4pdat12CellVariableIdEEEET_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:449

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      28
            Global    :      10
            Local     :      18
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellVariable<Real>::CellVariable(SAMRAI::pdat::CellVariable<Real> *, const SAMRAI::tbox::Dimension &, const std::string &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellVariable<Real>::CellVariable(SAMRAI::pdat::CellVariable<Real> *, const SAMRAI::tbox::Dimension &, const std::string &, int)) [48] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp(39,1)
  -> INLINE: (32,21) std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (32,21) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (37,19) std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *)
  -> (37,19) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *)
  -> INLINE: (37,19) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, void>(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (37,19) std::make_shared<SAMRAI::pdat::CellDataFactory<Real>, int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *, int &, const SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellDataFactory<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &>::type, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &>::type &&, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &>::type, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &>::type &&, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &&, int &, const SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> *, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::construct<SAMRAI::pdat::CellDataFactory<Real>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, SAMRAI::pdat::CellDataFactory<Real> *, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellDataFactory<Real>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, SAMRAI::pdat::CellDataFactory<Real> *, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>::construct<SAMRAI::pdat::CellDataFactory<Real>, int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> *, SAMRAI::pdat::CellDataFactory<Real> *, int &, const SAMRAI::hier::IntVector &)
                            -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellDataFactory<Real>::CellDataFactory(SAMRAI::pdat::CellDataFactory<Real> *, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (38,62) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp(39,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat12CellVariableIdEC1ERKNS_4tbox9DimensionERKSsi] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp:39

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      98
            Global    :      28
            Local     :      70
        Regenerable   :      18
        Spilled       :       6
        
    Routine stack
        Variables     :      40 bytes*
            Reads     :       8 [4.00e+00 ~ 4.5%]
            Writes    :      14 [9.00e+00 ~ 10.1%]
        Spills        :       8 bytes*
            Reads     :       1 [7.09e-01 ~ 0.8%]
            Writes    :       1 [1.00e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::hier::PatchDataFactory>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4hier16PatchDataFactoryEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat15CellDataFactoryIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic>::operator=(std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> *, std::__shared_ptr<SAMRAI::pdat::CellVariable<Real>, __gnu_cxx::_S_atomic> &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(859,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrIN6SAMRAI4pdat12CellVariableIdEELN9__gnu_cxx12_Lock_policyE2EEaSEOS6_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:859

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      15
            Local     :      15
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 4.7%]
            Writes    :       4 [3.35e+00 ~ 7.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::_M_release(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(138,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:138

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r13-r14]
        
    Routine temporaries
        Total         :      23
            Global    :      12
            Local     :      11
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator=(std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *, std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(859,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrIN6SAMRAI4tbox8DatabaseELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:859

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      15
            Local     :      15
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 4.7%]
            Writes    :       4 [3.35e+00 ~ 7.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const) [59] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(715,4)
  -> INLINE: (717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
    -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(718,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between this (558:18) and *(this+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(718,11)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(715,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier9IntVectorngEv] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:715

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8-r10 r12]
        
    Routine temporaries
        Total         :      27
            Global    :      12
            Local     :      15
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::~FlowModel(FlowModel *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::~FlowModel(FlowModel *)) [60] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(76,30)
  -> INLINE: (76,31) std::enable_shared_from_this<FlowModel>::~enable_shared_from_this(std::enable_shared_from_this<FlowModel> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<EquationOfStateMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRulesManager> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::~vector(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelRiemannSolver>::~shared_ptr(std::shared_ptr<FlowModelRiemannSolver> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelBasicUtilities>::~shared_ptr(std::shared_ptr<FlowModelBasicUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelDiffusiveFluxUtilities>::~shared_ptr(std::shared_ptr<FlowModelDiffusiveFluxUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelSourceUtilities>::~shared_ptr(std::shared_ptr<FlowModelSourceUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelImmersedBoundaryMethod>::~shared_ptr(std::shared_ptr<FlowModelImmersedBoundaryMethod> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelMonitoringStatisticsUtilities>::~shared_ptr(std::shared_ptr<FlowModelMonitoringStatisticsUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelStatisticsUtilities>::~shared_ptr(std::shared_ptr<FlowModelStatisticsUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(76,30):remark #34051: REGISTER ALLOCATION : [_ZN9FlowModelD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp:76

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :     267
            Global    :     108
            Local     :     159
        Regenerable   :      58
        Spilled       :       3
        
    Routine stack
        Variables     :      11 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::~_Vector_base(std::_Vector_base<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIN8EQN_FORM4TYPEESaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<EquationOfShearViscosityMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRulesManager> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI42EquationOfShearViscosityMixingRulesManagerED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<EquationOfBulkViscosityMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRulesManager> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI41EquationOfBulkViscosityMixingRulesManagerED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<EquationOfThermalConductivityMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRulesManager> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI47EquationOfThermalConductivityMixingRulesManagerED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::reserve(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *, std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::size_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(67,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIN8EQN_FORM4TYPEESaIS1_EE7reserveEm] /usr/include/c++/4.8.5/bits/vector.tcc:67

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      34
            Global    :      18
            Local     :      16
        Regenerable   :       3
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<FlowModelStatisticsUtilities, __gnu_cxx::_S_atomic>::reset<FlowModelStatisticsUtilitiesSingleSpecies>(std::__shared_ptr<FlowModelStatisticsUtilities, __gnu_cxx::_S_atomic> *, FlowModelStatisticsUtilitiesSingleSpecies *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(887,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI28FlowModelStatisticsUtilitiesLN9__gnu_cxx12_Lock_policyE2EE5resetI41FlowModelStatisticsUtilitiesSingleSpeciesEEvPT_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:887

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rsi rdi]
        
    Routine temporaries
        Total         :      44
            Global    :      16
            Local     :      28
        Regenerable   :       5
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelStatisticsUtilitiesSingleSpecies::FlowModelStatisticsUtilitiesSingleSpecies(FlowModelStatisticsUtilitiesSingleSpecies *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &, const std::shared_ptr<EquationOfStateMixingRules> *, const std::shared_ptr<EquationOfShearViscosityMixingRules> *, const std::shared_ptr<EquationOfBulkViscosityMixingRules> *, const std::shared_ptr<EquationOfThermalConductivityMixingRules> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelStatisticsUtilitiesSingleSpecies::FlowModelStatisticsUtilitiesSingleSpecies(FlowModelStatisticsUtilitiesSingleSpecies *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &, const std::shared_ptr<EquationOfStateMixingRules> *, const std::shared_ptr<EquationOfShearViscosityMixingRules> *, const std::shared_ptr<EquationOfBulkViscosityMixingRules> *, const std::shared_ptr<EquationOfThermalConductivityMixingRules> *)) [67] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelStatisticsUtilitiesSingleSpecies.hpp(32,9)
  -> INLINE: (27,21) FlowModelStatisticsUtilities::FlowModelStatisticsUtilities(FlowModelStatisticsUtilities *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:(21,9) FlowModelStatisticsUtilities::FlowModelStatisticsUtilities(FlowModelStatisticsUtilities *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)
      -> (21,9) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
      -> (21,9) std::vector<std::string, std::allocator<std::string>>::vector(std::vector<std::string, std::allocator<std::string>> *)
      -> (21,9) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
      -> (21,9) std::shared_ptr<EnsembleStatistics>::~shared_ptr(std::shared_ptr<EnsembleStatistics> *)
      -> INLINE: (21,9) std::shared_ptr<EnsembleStatistics>::shared_ptr(std::shared_ptr<EnsembleStatistics> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (21,9) std::weak_ptr<FlowModel>::weak_ptr(std::weak_ptr<FlowModel> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (27,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (29,33) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> (29,33) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
      -> INLINE: (36,30) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
      -> DELETED: (36,42) std::allocator<char>::~allocator(std::allocator<char> *)
      -> INLINE: (36,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INDIRECT- (VIRTUAL): (36,42)  EXPR_CONV.SI64.P64(*((SI64*) (__$U3_V$6e8.0.16.48188->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
      -> INLINE: (36,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> DELETED: (36,42) std::allocator<char>::~allocator(std::allocator<char> *)
      -> INLINE: (36,42) std::allocator<char>::allocator(std::allocator<char> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> DELETED: (38,42) std::allocator<char>::~allocator(std::allocator<char> *)
      -> INLINE: (38,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (38,42) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (38,42) std::vector<std::string, std::allocator<std::string>>::operator=(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>> &&)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (38,57) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
      -> INDIRECT- (VIRTUAL): (38,75)  EXPR_CONV.SI64.P64(*((SI64*) (__$U8_V$6ed.0.16.48188->__vptr_V$6ee + EXPR_CONV.SI32.I64(75(SI32)) * 8(I64))))
      -> INLINE: (38,75) std::allocator<char>::allocator(std::allocator<char> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> DELETED: (38,75) std::allocator<char>::~allocator(std::allocator<char> *)
      -> INLINE: (38,75) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (40,35) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
      -> INLINE: (40,47) std::allocator<char>::allocator(std::allocator<char> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INDIRECT- (VIRTUAL): (40,47)  EXPR_CONV.SI64.P64(*((SI64*) (__$Ub_V$6f3.0.16.48188->__vptr_V$6ee + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
      -> DELETED: (40,47) std::allocator<char>::~allocator(std::allocator<char> *)
      -> INLINE: (40,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (40,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> DELETED: (40,47) std::allocator<char>::~allocator(std::allocator<char> *)
      -> DELETED: (42,42) std::allocator<char>::~allocator(std::allocator<char> *)
      -> INLINE: (42,42) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (42,42) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (42,42) std::vector<std::string, std::allocator<std::string>>::operator=(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>> &&)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (42,57) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
      -> INDIRECT- (VIRTUAL): (42,75)  EXPR_CONV.SI64.P64(*((SI64*) (__$U10_V$6f8.0.16.48188->__vptr_V$6ee + EXPR_CONV.SI32.I64(75(SI32)) * 8(I64))))
      -> INLINE: (42,75) std::allocator<char>::allocator(std::allocator<char> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> DELETED: (42,75) std::allocator<char>::~allocator(std::allocator<char> *)
      -> INLINE: (42,75) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (28,46) std::shared_ptr<EquationOfStateMixingRules>::shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *, const std::shared_ptr<EquationOfStateMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (29,56) std::shared_ptr<EquationOfShearViscosityMixingRules>::shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRules> *, const std::shared_ptr<EquationOfShearViscosityMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (30,55) std::shared_ptr<EquationOfBulkViscosityMixingRules>::shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRules> *, const std::shared_ptr<EquationOfBulkViscosityMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (31,61) std::shared_ptr<EquationOfThermalConductivityMixingRules>::shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRules> *, const std::shared_ptr<EquationOfThermalConductivityMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelStatisticsUtilitiesSingleSpecies.hpp(28,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelStatisticsUtilitiesSingleSpecies.hpp(28,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelStatisticsUtilitiesSingleSpecies.hpp(28,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelStatisticsUtilitiesSingleSpecies.hpp(28,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(1191,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelStatisticsUtilitiesSingleSpecies.hpp(32,9):remark #34051: REGISTER ALLOCATION : [_ZN41FlowModelStatisticsUtilitiesSingleSpeciesC1ERKSsRKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKiRKS7_INS3_8DatabaseEES7_I26EquationOfStateMixingRulesES7_I35EquationOfShearViscosityMixingRulesES7_I34EquationOfBulkViscosityMixingRulesES7_I40EquationOfThermalConductivityMixingRulesE] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelStatisticsUtilitiesSingleSpecies.hpp:32

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     316
            Global    :      89
            Local     :     227
        Regenerable   :      98
        Spilled       :       7
        
    Routine stack
        Variables     :     155 bytes*
            Reads     :      29 [9.29e+00 ~ 4.0%]
            Writes    :      21 [4.26e+00 ~ 1.8%]
        Spills        :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [1.00e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::string, std::allocator<std::string>>::~_Vector_base(std::_Vector_base<std::string, std::allocator<std::string>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISsSaISsEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::vector(std::vector<std::string, std::allocator<std::string>> *, const std::vector<std::string, std::allocator<std::string>>::allocator_type &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(257,20):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISsSaISsEEC1ERKS0_] /usr/include/c++/4.8.5/bits/stl_vector.h:257

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<EnsembleStatistics>::~shared_ptr(std::shared_ptr<EnsembleStatistics> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI18EnsembleStatisticsED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISsSaISsEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r8-r9 r14-r15]
        
    Routine temporaries
        Total         :      22
            Global    :      13
            Local     :       9
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 5.0%]
            Writes    :       4 [3.94e+00 ~ 5.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::vector(std::vector<std::string, std::allocator<std::string>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISsSaISsEEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(461,11):remark #34051: REGISTER ALLOCATION : [_ZNSt8weak_ptrI9FlowModelED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:461

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rcx rdi]
        
    Routine temporaries
        Total         :      18
            Global    :       9
            Local     :       9
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4geom21CartesianGridGeometryEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<FlowModelMonitoringStatisticsUtilities, __gnu_cxx::_S_atomic>::reset<FlowModelMonitoringStatisticsUtilitiesSingleSpecies>(std::__shared_ptr<FlowModelMonitoringStatisticsUtilities, __gnu_cxx::_S_atomic> *, FlowModelMonitoringStatisticsUtilitiesSingleSpecies *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(887,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI38FlowModelMonitoringStatisticsUtilitiesLN9__gnu_cxx12_Lock_policyE2EE5resetI51FlowModelMonitoringStatisticsUtilitiesSingleSpeciesEEvPT_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:887

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rsi rdi]
        
    Routine temporaries
        Total         :      44
            Global    :      16
            Local     :      28
        Regenerable   :       5
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic>::reset<FlowModelBoundaryUtilitiesSingleSpecies>(std::__shared_ptr<FlowModelBoundaryUtilities, __gnu_cxx::_S_atomic> *, FlowModelBoundaryUtilitiesSingleSpecies *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(887,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI26FlowModelBoundaryUtilitiesLN9__gnu_cxx12_Lock_policyE2EE5resetI39FlowModelBoundaryUtilitiesSingleSpeciesEEvPT_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:887

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rsi rdi]
        
    Routine temporaries
        Total         :      44
            Global    :      16
            Local     :      28
        Regenerable   :       5
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<FlowModelSourceUtilities, __gnu_cxx::_S_atomic>::reset<FlowModelSourceUtilitiesSingleSpecies>(std::__shared_ptr<FlowModelSourceUtilities, __gnu_cxx::_S_atomic> *, FlowModelSourceUtilitiesSingleSpecies *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(887,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI24FlowModelSourceUtilitiesLN9__gnu_cxx12_Lock_policyE2EE5resetI37FlowModelSourceUtilitiesSingleSpeciesEEvPT_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:887

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rsi rdi]
        
    Routine temporaries
        Total         :      44
            Global    :      16
            Local     :      28
        Regenerable   :       5
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<EquationOfShearViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRules> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI35EquationOfShearViscosityMixingRulesED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<EquationOfBulkViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRules> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI34EquationOfBulkViscosityMixingRulesED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<EquationOfThermalConductivityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRules> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI40EquationOfThermalConductivityMixingRulesED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<FlowModelDiffusiveFluxUtilities, __gnu_cxx::_S_atomic>::reset<FlowModelDiffusiveFluxUtilitiesSingleSpecies>(std::__shared_ptr<FlowModelDiffusiveFluxUtilities, __gnu_cxx::_S_atomic> *, FlowModelDiffusiveFluxUtilitiesSingleSpecies *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(887,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI31FlowModelDiffusiveFluxUtilitiesLN9__gnu_cxx12_Lock_policyE2EE5resetI44FlowModelDiffusiveFluxUtilitiesSingleSpeciesEEvPT_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:887

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rsi rdi]
        
    Routine temporaries
        Total         :      44
            Global    :      16
            Local     :      28
        Regenerable   :       5
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI26EquationOfStateMixingRulesED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<FlowModelBasicUtilities, __gnu_cxx::_S_atomic>::reset<FlowModelBasicUtilitiesSingleSpecies>(std::__shared_ptr<FlowModelBasicUtilities, __gnu_cxx::_S_atomic> *, FlowModelBasicUtilitiesSingleSpecies *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(887,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI23FlowModelBasicUtilitiesLN9__gnu_cxx12_Lock_policyE2EE5resetI36FlowModelBasicUtilitiesSingleSpeciesEEvPT_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:887

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rsi rdi]
        
    Routine temporaries
        Total         :      44
            Global    :      16
            Local     :      28
        Regenerable   :       5
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelBasicUtilitiesSingleSpecies::FlowModelBasicUtilitiesSingleSpecies(FlowModelBasicUtilitiesSingleSpecies *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<EquationOfStateMixingRules> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelBasicUtilitiesSingleSpecies::FlowModelBasicUtilitiesSingleSpecies(FlowModelBasicUtilitiesSingleSpecies *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const std::shared_ptr<EquationOfStateMixingRules> *)) [87] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.hpp(22,9)
  -> INLINE: (20,21) FlowModelBasicUtilities::FlowModelBasicUtilities(FlowModelBasicUtilities *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const int &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp:(27,9) FlowModelBasicUtilities::FlowModelBasicUtilities(FlowModelBasicUtilities *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const int &)
      -> INLINE: (27,9) std::weak_ptr<FlowModel>::weak_ptr(std::weak_ptr<FlowModel> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (33,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (35,33) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (21,46) std::shared_ptr<EquationOfStateMixingRules>::shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *, const std::shared_ptr<EquationOfStateMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(1191,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.hpp(22,9):remark #34051: REGISTER ALLOCATION : [_ZN36FlowModelBasicUtilitiesSingleSpeciesC1ERKSsRKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKiS7_I26EquationOfStateMixingRulesE] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelBasicUtilitiesSingleSpecies.hpp:22

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      56
            Global    :      21
            Local     :      35
        Regenerable   :      10
        Spilled       :       7
        
    Routine stack
        Variables     :       9 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [1.00e+00 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count(std::__shared_count<__gnu_cxx::_S_atomic> *, const std::__shared_count<__gnu_cxx::_S_atomic> &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(551,7):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1ERKS2_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:551

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      14
            Global    :       8
            Local     :       6
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<FlowModelRiemannSolver, __gnu_cxx::_S_atomic>::reset<FlowModelRiemannSolverSingleSpecies>(std::__shared_ptr<FlowModelRiemannSolver, __gnu_cxx::_S_atomic> *, FlowModelRiemannSolverSingleSpecies *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(887,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI22FlowModelRiemannSolverLN9__gnu_cxx12_Lock_policyE2EE5resetI35FlowModelRiemannSolverSingleSpeciesEEvPT_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:887

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rsi rdi]
        
    Routine temporaries
        Total         :      44
            Global    :      16
            Local     :      28
        Regenerable   :       5
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelRiemannSolverSingleSpecies::FlowModelRiemannSolverSingleSpecies(FlowModelRiemannSolverSingleSpecies *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelRiemannSolverSingleSpecies::FlowModelRiemannSolverSingleSpecies(FlowModelRiemannSolverSingleSpecies *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &)) [90] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelRiemannSolverSingleSpecies.hpp(19,9)
  -> INLINE: (18,21) FlowModelRiemannSolver::FlowModelRiemannSolver(FlowModelRiemannSolver *const, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelRiemannSolver.hpp:(27,9) FlowModelRiemannSolver::FlowModelRiemannSolver(FlowModelRiemannSolver *, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &)
      -> INLINE: (27,9) std::weak_ptr<FlowModel>::weak_ptr(std::weak_ptr<FlowModel> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (32,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (34,33) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(1191,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelRiemannSolverSingleSpecies.hpp(19,9):remark #34051: REGISTER ALLOCATION : [_ZN35FlowModelRiemannSolverSingleSpeciesC1ERKSsRKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKi] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelRiemannSolverSingleSpecies.hpp:19

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r8 r13-r15]
        
    Routine temporaries
        Total         :      46
            Global    :      17
            Local     :      29
        Regenerable   :       7
        Spilled       :       5
        
    Routine stack
        Variables     :       9 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<EquationOfThermalConductivityMixingRulesManager, __gnu_cxx::_S_atomic>::reset<EquationOfThermalConductivityMixingRulesManager>(std::__shared_ptr<EquationOfThermalConductivityMixingRulesManager, __gnu_cxx::_S_atomic> *, EquationOfThermalConductivityMixingRulesManager *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(887,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI47EquationOfThermalConductivityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE5resetIS0_EEvPT_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:887

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      44
            Global    :      16
            Local     :      28
        Regenerable   :       5
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfThermalConductivityMixingRulesManager::~EquationOfThermalConductivityMixingRulesManager(EquationOfThermalConductivityMixingRulesManager *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfThermalConductivityMixingRulesManager::~EquationOfThermalConductivityMixingRulesManager(EquationOfThermalConductivityMixingRulesManager *)) [92] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_thermal_conductivity/EquationOfThermalConductivityMixingRulesManager.hpp(16,7)
  -> INLINE: (16,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,7) std::shared_ptr<EquationOfThermalConductivityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_thermal_conductivity/EquationOfThermalConductivityMixingRulesManager.hpp(16,7):remark #34051: REGISTER ALLOCATION : [_ZN47EquationOfThermalConductivityMixingRulesManagerD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_thermal_conductivity/EquationOfThermalConductivityMixingRulesManager.hpp:16

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :      33
            Global    :      17
            Local     :      16
        Regenerable   :       8
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfThermalConductivityMixingRulesManager::getEquationOfThermalConductivityMixingRules(std::shared_ptr<EquationOfThermalConductivityMixingRules> *, const EquationOfThermalConductivityMixingRulesManager *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfThermalConductivityMixingRulesManager::getEquationOfThermalConductivityMixingRules(std::shared_ptr<EquationOfThermalConductivityMixingRules> *, const EquationOfThermalConductivityMixingRulesManager *) const) [93] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_thermal_conductivity/EquationOfThermalConductivityMixingRulesManager.hpp(41,9)
  -> INLINE: (42,20) std::shared_ptr<EquationOfThermalConductivityMixingRules>::shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRules> *, const std::shared_ptr<EquationOfThermalConductivityMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_thermal_conductivity/EquationOfThermalConductivityMixingRulesManager.hpp(41,9):remark #34051: REGISTER ALLOCATION : [_ZNK47EquationOfThermalConductivityMixingRulesManager43getEquationOfThermalConductivityMixingRulesEv] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_thermal_conductivity/EquationOfThermalConductivityMixingRulesManager.hpp:41

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       8
            Local     :       7
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic>::operator=(std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic> *, std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic> &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(859,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI40EquationOfThermalConductivityMixingRulesLN9__gnu_cxx12_Lock_policyE2EEaSEOS3_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:859

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      15
            Local     :      15
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 4.7%]
            Writes    :       4 [3.35e+00 ~ 7.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<EquationOfShearViscosityMixingRulesManager, __gnu_cxx::_S_atomic>::reset<EquationOfShearViscosityMixingRulesManager>(std::__shared_ptr<EquationOfShearViscosityMixingRulesManager, __gnu_cxx::_S_atomic> *, EquationOfShearViscosityMixingRulesManager *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(887,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI42EquationOfShearViscosityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE5resetIS0_EEvPT_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:887

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      44
            Global    :      16
            Local     :      28
        Regenerable   :       5
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfShearViscosityMixingRulesManager::~EquationOfShearViscosityMixingRulesManager(EquationOfShearViscosityMixingRulesManager *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfShearViscosityMixingRulesManager::~EquationOfShearViscosityMixingRulesManager(EquationOfShearViscosityMixingRulesManager *)) [96] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_shear_viscosity/EquationOfShearViscosityMixingRulesManager.hpp(16,7)
  -> INLINE: (16,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,7) std::shared_ptr<EquationOfShearViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_shear_viscosity/EquationOfShearViscosityMixingRulesManager.hpp(16,7):remark #34051: REGISTER ALLOCATION : [_ZN42EquationOfShearViscosityMixingRulesManagerD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_shear_viscosity/EquationOfShearViscosityMixingRulesManager.hpp:16

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :      33
            Global    :      17
            Local     :      16
        Regenerable   :       8
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfShearViscosityMixingRulesManager::getEquationOfShearViscosityMixingRules(std::shared_ptr<EquationOfShearViscosityMixingRules> *, const EquationOfShearViscosityMixingRulesManager *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfShearViscosityMixingRulesManager::getEquationOfShearViscosityMixingRules(std::shared_ptr<EquationOfShearViscosityMixingRules> *, const EquationOfShearViscosityMixingRulesManager *) const) [97] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_shear_viscosity/EquationOfShearViscosityMixingRulesManager.hpp(41,9)
  -> INLINE: (42,20) std::shared_ptr<EquationOfShearViscosityMixingRules>::shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRules> *, const std::shared_ptr<EquationOfShearViscosityMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_shear_viscosity/EquationOfShearViscosityMixingRulesManager.hpp(41,9):remark #34051: REGISTER ALLOCATION : [_ZNK42EquationOfShearViscosityMixingRulesManager38getEquationOfShearViscosityMixingRulesEv] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_shear_viscosity/EquationOfShearViscosityMixingRulesManager.hpp:41

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       8
            Local     :       7
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic>::operator=(std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic> *, std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic> &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(859,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI35EquationOfShearViscosityMixingRulesLN9__gnu_cxx12_Lock_policyE2EEaSEOS3_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:859

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      15
            Local     :      15
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 4.7%]
            Writes    :       4 [3.35e+00 ~ 7.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4tbox8DatabaseEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::resize(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(668,4)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_vector.h(665,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEE6resizeEm] /usr/include/c++/4.8.5/bits/stl_vector.h:665

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8 r12-r15 zmm0]
        
    Routine temporaries
        Total         :      58
            Global    :      29
            Local     :      29
        Regenerable   :      11
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       4 [6.76e-02 ~ 0.2%]
            Writes    :       4 [2.89e-02 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(67,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EE7reserveEm] /usr/include/c++/4.8.5/bits/vector.tcc:67

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      34
            Global    :      18
            Local     :      16
        Regenerable   :       3
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPdSaIS0_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<Real *, std::allocator<Real *>>::~_Vector_base(std::_Vector_base<Real *, std::allocator<Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPdSaIS0_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<EquationOfBulkViscosityMixingRulesManager, __gnu_cxx::_S_atomic>::reset<EquationOfBulkViscosityMixingRulesManager>(std::__shared_ptr<EquationOfBulkViscosityMixingRulesManager, __gnu_cxx::_S_atomic> *, EquationOfBulkViscosityMixingRulesManager *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(887,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI41EquationOfBulkViscosityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE5resetIS0_EEvPT_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:887

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      44
            Global    :      16
            Local     :      28
        Regenerable   :       5
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfBulkViscosityMixingRulesManager::~EquationOfBulkViscosityMixingRulesManager(EquationOfBulkViscosityMixingRulesManager *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfBulkViscosityMixingRulesManager::~EquationOfBulkViscosityMixingRulesManager(EquationOfBulkViscosityMixingRulesManager *)) [107] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_bulk_viscosity/EquationOfBulkViscosityMixingRulesManager.hpp(16,7)
  -> INLINE: (16,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,7) std::shared_ptr<EquationOfBulkViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_bulk_viscosity/EquationOfBulkViscosityMixingRulesManager.hpp(16,7):remark #34051: REGISTER ALLOCATION : [_ZN41EquationOfBulkViscosityMixingRulesManagerD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_bulk_viscosity/EquationOfBulkViscosityMixingRulesManager.hpp:16

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :      33
            Global    :      17
            Local     :      16
        Regenerable   :       8
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfBulkViscosityMixingRulesManager::getEquationOfBulkViscosityMixingRules(std::shared_ptr<EquationOfBulkViscosityMixingRules> *, const EquationOfBulkViscosityMixingRulesManager *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfBulkViscosityMixingRulesManager::getEquationOfBulkViscosityMixingRules(std::shared_ptr<EquationOfBulkViscosityMixingRules> *, const EquationOfBulkViscosityMixingRulesManager *) const) [108] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_bulk_viscosity/EquationOfBulkViscosityMixingRulesManager.hpp(41,9)
  -> INLINE: (42,20) std::shared_ptr<EquationOfBulkViscosityMixingRules>::shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRules> *, const std::shared_ptr<EquationOfBulkViscosityMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_bulk_viscosity/EquationOfBulkViscosityMixingRulesManager.hpp(41,9):remark #34051: REGISTER ALLOCATION : [_ZNK41EquationOfBulkViscosityMixingRulesManager37getEquationOfBulkViscosityMixingRulesEv] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_bulk_viscosity/EquationOfBulkViscosityMixingRulesManager.hpp:41

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       8
            Local     :       7
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic>::operator=(std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic> *, std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic> &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(859,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI34EquationOfBulkViscosityMixingRulesLN9__gnu_cxx12_Lock_policyE2EEaSEOS3_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:859

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      15
            Local     :      15
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 4.7%]
            Writes    :       4 [3.35e+00 ~ 7.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<EquationOfStateMixingRulesManager, __gnu_cxx::_S_atomic>::reset<EquationOfStateMixingRulesManager>(std::__shared_ptr<EquationOfStateMixingRulesManager, __gnu_cxx::_S_atomic> *, EquationOfStateMixingRulesManager *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(887,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI33EquationOfStateMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE5resetIS0_EEvPT_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:887

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      44
            Global    :      16
            Local     :      28
        Regenerable   :       5
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesManager::~EquationOfStateMixingRulesManager(EquationOfStateMixingRulesManager *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesManager::~EquationOfStateMixingRulesManager(EquationOfStateMixingRulesManager *)) [111] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRulesManager.hpp(16,7)
  -> INLINE: (16,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (16,7) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRulesManager.hpp(16,7):remark #34051: REGISTER ALLOCATION : [_ZN33EquationOfStateMixingRulesManagerD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRulesManager.hpp:16

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :      33
            Global    :      17
            Local     :      16
        Regenerable   :       8
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: EquationOfStateMixingRulesManager::getEquationOfStateMixingRules(std::shared_ptr<EquationOfStateMixingRules> *, const EquationOfStateMixingRulesManager *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EquationOfStateMixingRulesManager::getEquationOfStateMixingRules(std::shared_ptr<EquationOfStateMixingRules> *, const EquationOfStateMixingRulesManager *) const) [112] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRulesManager.hpp(41,9)
  -> INLINE: (42,20) std::shared_ptr<EquationOfStateMixingRules>::shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *, const std::shared_ptr<EquationOfStateMixingRules> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRulesManager.hpp(41,9):remark #34051: REGISTER ALLOCATION : [_ZNK33EquationOfStateMixingRulesManager29getEquationOfStateMixingRulesEv] /home/akula/HAMeRS_IB/HAMeRS/include/util/mixing_rules/equations_of_state/EquationOfStateMixingRulesManager.hpp:41

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       8
            Local     :       7
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator=(std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *, std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(859,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrI26EquationOfStateMixingRulesLN9__gnu_cxx12_Lock_policyE2EEaSEOS3_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:859

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      15
            Local     :      15
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 4.7%]
            Writes    :       4 [3.35e+00 ~ 7.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::~FlowModelSingleSpecies(FlowModelSingleSpecies *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::~FlowModelSingleSpecies(FlowModelSingleSpecies *const)) [114] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelSingleSpecies.hpp(20,9)
  -> (20,9) FlowModelSingleSpecies::~FlowModelSingleSpecies(FlowModelSingleSpecies *)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelSingleSpecies.hpp(20,9):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpeciesD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelSingleSpecies.hpp:20

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rdi r13]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::~FlowModelSingleSpecies(FlowModelSingleSpecies *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::~FlowModelSingleSpecies(FlowModelSingleSpecies *)) [115] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelSingleSpecies.hpp(20,35)
  -> INLINE: (20,36) FlowModel::~FlowModel(FlowModel *const)
    -> /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp:(76,17) FlowModel::~FlowModel(FlowModel *)
  -> INLINE: (20,36) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<EquationOfShearViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<EquationOfShearViscosityMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfShearViscosityMixingRulesManager> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<EquationOfBulkViscosityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<EquationOfBulkViscosityMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfBulkViscosityMixingRulesManager> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<EquationOfThermalConductivityMixingRules>::~shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::shared_ptr<EquationOfThermalConductivityMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfThermalConductivityMixingRulesManager> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (20,36) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Offload optimizations [offload]

Optimization 'Type/class analysis' reduced: function size or variable count limit exceeded: use -override_limits / -Qoverride_limits to override_ZSt12_Vector_baseIdSaIdEE_R_V$378 vs. FlowModelSingleSpecies_R_V$98

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelSingleSpecies.hpp(20,35):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpeciesD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/single-species/FlowModelSingleSpecies.hpp:20

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbp rsi rdi r12-r13]
        
    Routine temporaries
        Total         :     372
            Global    :     132
            Local     :     240
        Regenerable   :      67
        Spilled       :       3
        
    Routine stack
        Variables     :       3 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::~_Vector_base(std::_Vector_base<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::printClassData(const FlowModelSingleSpecies *, std::ostream &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::printClassData(const FlowModelSingleSpecies *, std::ostream &) const) [118] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(490,1)
  -> (491,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (492,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (494,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (496,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (497,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, const void *)
  -> (498,8) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> (500,8) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (501,45) std::__shared_ptr<EquationOfStateMixingRulesManager, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRulesManager, __gnu_cxx::_S_atomic> *) const


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(490,1):remark #34051: REGISTER ALLOCATION : [_ZNK22FlowModelSingleSpecies14printClassDataERSo] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:490

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      37
            Global    :      15
            Local     :      22
        Regenerable   :      10
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::putToRestart(const FlowModelSingleSpecies *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::putToRestart(const FlowModelSingleSpecies *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [120] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(511,1)
  -> INLINE: (518,15) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (518,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (518,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (518,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (518,54) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (518,54) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (518,54)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2d2_V$18bf.0.1560->__vptr_V$6ee + EXPR_CONV.SI32.I64(70(SI32)) * 8(I64))))
  -> DELETED: (520,39) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (520,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (521,19) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> (521,33) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (521,33) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (521,33) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (521,33)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2d3_V$18c0.0.1560->__vptr_V$6ee + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (521,33) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (522,37) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (522,52)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2d4_V$18c1.0.1560->__vptr_V$135 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (528,9) std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (530,19) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (530,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (530,31) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (530,31) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (530,68) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (530,68) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (530,68)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2d9_V$18c7.0.1560->__vptr_V$6ee + EXPR_CONV.SI32.I64(70(SI32)) * 8(I64))))
  -> DELETED: (532,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (532,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (533,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> (533,37) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (533,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (533,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (533,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2da_V$18c8.0.1560->__vptr_V$6ee + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (533,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (534,51) std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (535,26)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2db_V$18c9.0.1560->__vptr_V$255 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (536,5) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (542,9) std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (544,19) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (544,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (544,31) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (544,31) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (544,67) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (544,67) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (544,67)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2de_V$18cd.0.1560->__vptr_V$6ee + EXPR_CONV.SI32.I64(70(SI32)) * 8(I64))))
  -> DELETED: (546,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (546,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (547,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> (547,37) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (547,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (547,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (547,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2df_V$18ce.0.1560->__vptr_V$6ee + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (547,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (548,50) std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (549,26)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2e0_V$18cf.0.1560->__vptr_V$27a + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (550,5) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (556,9) std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (558,19) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (558,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (558,31) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (558,31) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (558,73)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2e3_V$18d3.0.1560->__vptr_V$6ee + EXPR_CONV.SI32.I64(70(SI32)) * 8(I64))))
  -> INLINE: (558,73) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (558,73) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (560,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (560,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (561,23) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (561,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (561,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (561,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (561,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2e4_V$18d4.0.1560->__vptr_V$6ee + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> (561,37) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (562,56) std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (563,26)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2e5_V$18d5.0.1560->__vptr_V$2a0 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (564,5) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (569,42) std::__shared_ptr<FlowModelDiffusiveFluxUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelDiffusiveFluxUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (569,57)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2d5_V$18c2.0.1560->__vptr_V$178 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
  -> INLINE: (574,34) std::__shared_ptr<FlowModelSourceUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelSourceUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (574,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2d6_V$18c3.0.1560->__vptr_V$1e0 + EXPR_CONV.SI32.I64(9(SI32)) * 8(I64))))
  -> INLINE: (579,49) std::__shared_ptr<FlowModelMonitoringStatisticsUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelMonitoringStatisticsUtilities, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (584,38) std::__shared_ptr<FlowModelStatisticsUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelStatisticsUtilities, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (584,40) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (584,40) FlowModelStatisticsUtilities::putToRestart(const FlowModelStatisticsUtilities *, const std::shared_ptr<SAMRAI::tbox::Database> &) const
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:(63,43) std::vector<std::string, std::allocator<std::string>>::empty(const std::vector<std::string, std::allocator<std::string>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:(65,27) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:(65,45) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:(65,45) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:(65,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:(65,73) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:(65,73) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:(65,73)  EXPR_CONV.SI64.P64(*((SI64*) (__$U13_V$707.0.21.33309->__vptr_V$6ee + EXPR_CONV.SI32.I64(71(SI32)) * 8(I64))))


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(511,1):remark #34051: REGISTER ALLOCATION : [_ZNK22FlowModelSingleSpecies12putToRestartERKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:511

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rbp rsi rdi r14-r15]
        
    Routine temporaries
        Total         :     489
            Global    :     128
            Local     :     361
        Regenerable   :     160
        Spilled       :       4
        
    Routine stack
        Variables     :     135 bytes*
            Reads     :      25 [7.92e+00 ~ 4.8%]
            Writes    :      22 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::registerConservativeVariables(FlowModelSingleSpecies *, RungeKuttaLevelIntegrator *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::registerConservativeVariables(FlowModelSingleSpecies *, RungeKuttaLevelIntegrator *, const SAMRAI::hier::IntVector &, const SAMRAI::hier::IntVector &)) [121] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(596,1)
  -> (598,9) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (598,9) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (602,9) std::shared_ptr<SAMRAI::hier::BaseGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::hier::BaseGridGeometry> *)
  -> INLINE: (602,9) std::shared_ptr<SAMRAI::hier::BaseGridGeometry>::shared_ptr<SAMRAI::geom::CartesianGridGeometry, void>(std::shared_ptr<SAMRAI::hier::BaseGridGeometry> *, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (603,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (603,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (603,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (604,9) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (604,9) std::shared_ptr<SAMRAI::hier::BaseGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::hier::BaseGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (604,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (604,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (604,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (604,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (604,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2ed_V$18e4.0.1561->__vptr_V$18e9_2.78 + EXPR_CONV.SI32.I64(22(SI32)) * 8(I64))))
  -> INLINE: (604,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (604,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (604,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (607,9) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (607,9) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (611,9) std::shared_ptr<SAMRAI::hier::BaseGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::hier::BaseGridGeometry> *)
  -> INLINE: (611,9) std::shared_ptr<SAMRAI::hier::BaseGridGeometry>::shared_ptr<SAMRAI::geom::CartesianGridGeometry, void>(std::shared_ptr<SAMRAI::hier::BaseGridGeometry> *, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (612,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (612,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (612,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (613,9) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (613,9) std::shared_ptr<SAMRAI::hier::BaseGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::hier::BaseGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (613,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (613,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (613,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (613,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (613,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2ef_V$18e6.0.1561->__vptr_V$18e9_2.78 + EXPR_CONV.SI32.I64(22(SI32)) * 8(I64))))
  -> INLINE: (613,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (613,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (613,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (616,9) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (616,9) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (620,9) std::shared_ptr<SAMRAI::hier::BaseGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::hier::BaseGridGeometry> *)
  -> INLINE: (620,9) std::shared_ptr<SAMRAI::hier::BaseGridGeometry>::shared_ptr<SAMRAI::geom::CartesianGridGeometry, void>(std::shared_ptr<SAMRAI::hier::BaseGridGeometry> *, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (621,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (621,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (621,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (622,9) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (622,9) std::shared_ptr<SAMRAI::hier::BaseGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::hier::BaseGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (622,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (622,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (622,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (622,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (622,9)  EXPR_CONV.SI64.P64(*((SI64*) (__$U2f1_V$18e8.0.1561->__vptr_V$18e9_2.78 + EXPR_CONV.SI32.I64(22(SI32)) * 8(I64))))
  -> INLINE: (622,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (622,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (622,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(596,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies29registerConservativeVariablesEP25RungeKuttaLevelIntegratorRKN6SAMRAI4hier9IntVectorES6_] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:596

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :     356
            Global    :     118
            Local     :     238
        Regenerable   :     126
        Spilled       :       6
        
    Routine stack
        Variables     :      82 bytes*
            Reads     :      21 [1.20e+01 ~ 4.8%]
            Writes    :      24 [1.50e+01 ~ 6.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::hier::BaseGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::hier::BaseGridGeometry> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4hier16BaseGridGeometryEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::getNamesOfConservativeVariables(std::vector<std::string, std::allocator<std::string>> *, FlowModelSingleSpecies *, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::getNamesOfConservativeVariables(std::vector<std::string, std::allocator<std::string>> *, FlowModelSingleSpecies *, bool)) [123] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(631,1)
  -> (632,30) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
  -> (632,30) std::vector<std::string, std::allocator<std::string>>::vector(std::vector<std::string, std::allocator<std::string>> *)
  -> INLINE: (633,11) std::vector<std::string, std::allocator<std::string>>::reserve(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (637,15) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (637,15) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (637,15) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (637,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (637,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (637,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (638,15) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (638,15) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (638,15) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (638,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (638,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (638,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (639,15) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (639,15) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (639,15) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (639,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (639,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (639,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (643,15) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (643,15) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (643,15) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (643,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (643,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (643,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (644,15) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (644,15) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (644,15) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (644,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (644,25) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (644,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (645,15) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (645,15) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (645,15) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (645,25) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (645,25) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (645,25) std::allocator<char>::~allocator(std::allocator<char> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(633,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(633,11)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(633,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(637,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(637,15)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(637,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(643,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(643,15)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(643,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(644,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(644,15)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(644,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(631,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies31getNamesOfConservativeVariablesEb] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:631

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :     468
            Global    :     159
            Local     :     309
        Regenerable   :     113
        Spilled       :      11
        
    Routine stack
        Variables     :      42 bytes*
            Reads     :      28 [3.73e+00 ~ 1.5%]
            Writes    :      22 [1.29e+00 ~ 0.5%]
        Spills        :      40 bytes*
            Reads     :       8 [2.23e+00 ~ 0.9%]
            Writes    :       8 [2.23e+00 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::allocator_traits<std::allocator<std::string>>::_S_destroy<std::string>(std::allocator<std::string> &, std::string *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/alloc_traits.h(281,2):remark #34051: REGISTER ALLOCATION : [_ZNSt16allocator_traitsISaISsEE10_S_destroyISsEENSt9enable_ifIXsrNS1_16__destroy_helperIT_EE5valueEvE4typeERS0_PS5_] /usr/include/c++/4.8.5/bits/alloc_traits.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      20
            Global    :      10
            Local     :      10
        Regenerable   :       5
        Spilled       :       0
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::string, std::allocator<std::string>>::_M_deallocate(std::_Vector_base<std::string, std::allocator<std::string>> *, std::_Vector_base<std::string, std::allocator<std::string>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISsSaISsEE13_M_deallocateEPSsm] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::string, std::allocator<std::string>>::pointer>(std::_Vector_base<std::string, std::allocator<std::string>>::pointer, std::_Vector_base<std::string, std::allocator<std::string>>::pointer)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_construct.h(101,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Destroy_auxILb0EE9__destroyIPSsEEvT_S3_] /usr/include/c++/4.8.5/bits/stl_construct.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8 r12-r14]
        
    Routine temporaries
        Total         :      21
            Global    :      12
            Local     :       9
        Regenerable   :       5
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.96e+00 ~ 4.3%]
            Writes    :       3 [2.96e+00 ~ 4.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::string, std::allocator<std::string>>::_M_get_Tp_allocator(std::_Vector_base<std::string, std::allocator<std::string>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISsSaISsEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorISsSaISsEE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::string, std::allocator<std::string>>::_M_emplace_back_aux<std::move_iterator<std::_Vector_base<std::string, std::allocator<std::string>>::pointer>::value_type>(std::vector<std::string, std::allocator<std::string>> *, std::move_iterator<std::_Vector_base<std::string, std::allocator<std::string>>::pointer>::value_type &&)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(414,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(414,10)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(429,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/vector.tcc(401,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISsSaISsEE19_M_emplace_back_auxIISsEEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:401

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :      69
            Global    :      35
            Local     :      34
        Regenerable   :       9
        Spilled       :       8
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 2.1%]
            Writes    :       4 [3.94e+00 ~ 2.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::getNamesOfPrimitiveVariables(std::vector<std::string, std::allocator<std::string>> *, FlowModelSingleSpecies *, bool)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::getNamesOfPrimitiveVariables(std::vector<std::string, std::allocator<std::string>> *, FlowModelSingleSpecies *, bool)) [132] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(657,1)
  -> (660,30) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
  -> (660,30) std::vector<std::string, std::allocator<std::string>>::vector(std::vector<std::string, std::allocator<std::string>> *)
  -> INLINE: (661,11) std::vector<std::string, std::allocator<std::string>>::reserve(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (663,11) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (663,11) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (663,11) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (663,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (663,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (663,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (664,11) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (664,11) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (664,11) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (664,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (664,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (664,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (665,11) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (665,11) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (665,11) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (665,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (665,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (665,21) std::allocator<char>::~allocator(std::allocator<char> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(661,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(661,11)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(661,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(663,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(663,11)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(663,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(664,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(664,11)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(664,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(665,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(665,11)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(665,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(657,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies28getNamesOfPrimitiveVariablesEb] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:657

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     350
            Global    :     131
            Local     :     219
        Regenerable   :      71
        Spilled       :      10
        
    Routine stack
        Variables     :      27 bytes*
            Reads     :      16 [4.46e+00 ~ 1.1%]
            Writes    :      13 [2.02e+00 ~ 0.5%]
        Spills        :      32 bytes*
            Reads     :       7 [4.31e+00 ~ 1.0%]
            Writes    :       7 [4.31e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::getVariableTypesOfConservativeVariables(std::vector<std::string, std::allocator<std::string>> *, FlowModelSingleSpecies *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::getVariableTypesOfConservativeVariables(std::vector<std::string, std::allocator<std::string>> *, FlowModelSingleSpecies *)) [133] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(676,1)
  -> (677,30) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
  -> (677,30) std::vector<std::string, std::allocator<std::string>>::vector(std::vector<std::string, std::allocator<std::string>> *)
  -> INLINE: (678,11) std::vector<std::string, std::allocator<std::string>>::reserve(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (680,11) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (680,11) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (680,11) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (680,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (680,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (680,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (681,11) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (681,11) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (681,11) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (681,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (681,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (681,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (682,11) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (682,11) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (682,11) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (682,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (682,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (682,21) std::allocator<char>::~allocator(std::allocator<char> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(678,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(678,11)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(678,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(680,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(680,11)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(680,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(681,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(681,11)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(681,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(682,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(682,11)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(682,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(676,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies39getVariableTypesOfConservativeVariablesEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:676

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     348
            Global    :     132
            Local     :     216
        Regenerable   :      70
        Spilled       :      10
        
    Routine stack
        Variables     :      27 bytes*
            Reads     :      16 [4.46e+00 ~ 1.1%]
            Writes    :      13 [2.02e+00 ~ 0.5%]
        Spills        :      32 bytes*
            Reads     :       7 [4.31e+00 ~ 1.1%]
            Writes    :       7 [4.31e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::getVariableTypesOfPrimitiveVariables(std::vector<std::string, std::allocator<std::string>> *, FlowModelSingleSpecies *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::getVariableTypesOfPrimitiveVariables(std::vector<std::string, std::allocator<std::string>> *, FlowModelSingleSpecies *)) [134] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(693,1)
  -> (694,30) std::vector<std::string, std::allocator<std::string>>::~vector(std::vector<std::string, std::allocator<std::string>> *)
  -> (694,30) std::vector<std::string, std::allocator<std::string>>::vector(std::vector<std::string, std::allocator<std::string>> *)
  -> INLINE: (695,11) std::vector<std::string, std::allocator<std::string>>::reserve(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (697,11) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (697,11) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (697,11) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (697,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (697,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (697,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (698,11) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (698,11) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (698,11) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (698,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (698,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (698,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (699,11) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (699,11) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (699,11) std::vector<std::string, std::allocator<std::string>>::push_back(std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (699,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (699,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (699,21) std::allocator<char>::~allocator(std::allocator<char> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(695,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(695,11)
<Remainder>
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(695,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(697,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(697,11)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(697,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(698,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(698,11)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(698,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(699,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_dataplus->_M_p (272:14) and __first.__first->_M_p (297:17)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(699,11)
<Remainder>
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(699,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_p (539:9) and call:std::basic_string<char, std::char_traits<char>, std::alloca (249:5)
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(693,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies36getVariableTypesOfPrimitiveVariablesEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:693

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     348
            Global    :     132
            Local     :     216
        Regenerable   :      70
        Spilled       :      10
        
    Routine stack
        Variables     :      27 bytes*
            Reads     :      16 [4.46e+00 ~ 1.1%]
            Writes    :      13 [2.02e+00 ~ 0.5%]
        Spills        :      32 bytes*
            Reads     :       7 [4.31e+00 ~ 1.1%]
            Writes    :       7 [4.31e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::getConservativeVariables(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, FlowModelSingleSpecies *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::getConservativeVariables(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, FlowModelSingleSpecies *)) [135] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(710,1)
  -> (711,64) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> (711,64) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)
  -> INLINE: (712,28) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::reserve(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (714,28) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::push_back(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (715,28) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::push_back(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (716,28) std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::push_back(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(712,28)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(712,28)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(715,28)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(715,28)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(716,28)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(716,28)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(710,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies24getConservativeVariablesEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:710

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :     149
            Global    :      54
            Local     :      95
        Regenerable   :      26
        Spilled       :      10
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       6 [2.94e+00 ~ 0.9%]
            Writes    :       6 [2.94e+00 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::allocator_traits<std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::_S_destroy<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>(std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>> &, std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/alloc_traits.h(281,2):remark #34051: REGISTER ALLOCATION : [_ZNSt16allocator_traitsISaISt10shared_ptrIN6SAMRAI4pdat12CellVariableIdEEEEE10_S_destroyIS5_EENSt9enable_ifIXsrNS7_16__destroy_helperIT_EE5valueEvE4typeERS6_PSB_] /usr/include/c++/4.8.5/bits/alloc_traits.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      25
            Global    :      12
            Local     :      13
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::_M_deallocate(std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4pdat12CellVariableIdEEESaIS5_EE13_M_deallocateEPS5_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::pointer>(std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::pointer, std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::pointer)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_construct.h(101,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10shared_ptrIN6SAMRAI4pdat12CellVariableIdEEEEEvT_S9_] /usr/include/c++/4.8.5/bits/stl_construct.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 4.0%]
            Writes    :       4 [3.94e+00 ~ 4.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::_M_get_Tp_allocator(std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4pdat12CellVariableIdEEESaIS5_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorISt10shared_ptrIN6SAMRAI4pdat12CellVariableIdEEESaIS5_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4pdat12CellVariableIdEEESaIS5_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::_M_emplace_back_aux<const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::value_type &>(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *, const std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::value_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(414,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(429,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(401,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4pdat12CellVariableIdEEESaIS5_EE19_M_emplace_back_auxIIRKS5_EEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:401

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      51
            Global    :      23
            Local     :      28
        Regenerable   :       7
        Spilled       :       8
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 1.9%]
            Writes    :       4 [3.94e+00 ~ 1.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4pdat12CellVariableIdEEESaIS5_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       3
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [4.93e+00 ~ 4.5%]
            Writes    :       5 [4.93e+00 ~ 4.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>>::~_Vector_base(std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4pdat12CellVariableIdEEESaIS5_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::registerPatchWithDataContext(FlowModelSingleSpecies *, const SAMRAI::hier::Patch &, const std::shared_ptr<SAMRAI::hier::VariableContext> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::registerPatchWithDataContext(FlowModelSingleSpecies *, const SAMRAI::hier::Patch &, const std::shared_ptr<SAMRAI::hier::VariableContext> &)) [148] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(729,1)
  -> INLINE: (733,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (733,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (733,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (733,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (733,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (733,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (733,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (733,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (733,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (733,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (733,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (733,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (733,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (733,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (733,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (741,5) FlowModel::setDataContext(FlowModel *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp:(467,27) std::shared_ptr<SAMRAI::hier::VariableContext>::operator=(std::shared_ptr<SAMRAI::hier::VariableContext> *, const std::shared_ptr<SAMRAI::hier::VariableContext> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,46) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (747,46) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (748,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (748,9) std::static_pointer_cast<SAMRAI::pdat::CellData<Real>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (749,22) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(188,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U135_V$1222.0.1191.30340->__vptr_V$1224 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (749,35) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (749,35) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (751,18) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (751,32) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (751,34) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (757,31) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> INLINE: (758,21) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (758,38) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(637,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(638,17) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(638,36) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(640,32) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
        -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(640,39) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(253,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)
        -> INLINE: (239,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (239,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (761,17) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(903,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(904,21) SAMRAI::hier::IntVector::getNumBlocks(const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(905,45) SAMRAI::hier::BlockId::getBlockValue(const SAMRAI::hier::BlockId *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(906,42) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(906,42) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(906,51) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(906,51) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(907,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(907,33) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,31) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(908,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(908,33) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,31) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(911,18) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(912,18) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (762,22) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (762,22) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (762,36) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(637,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(638,17) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(638,36) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(640,32) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
        -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(640,39) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(253,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)
        -> INLINE: (239,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (239,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(758,38)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(758,38)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(239,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(758,38)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(761,17)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(906,51) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(761,17)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(761,17)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(761,17)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(761,17)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(761,17)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(762,36)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(762,36)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(239,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(762,36)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(729,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies28registerPatchWithDataContextERKN6SAMRAI4hier5PatchERKSt10shared_ptrINS1_15VariableContextEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:729

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     671
            Global    :     151
            Local     :     520
        Regenerable   :     183
        Spilled       :       8
        
    Routine stack
        Variables     :     597 bytes*
            Reads     :      59 [2.11e+01 ~ 5.0%]
            Writes    :      85 [3.71e+01 ~ 8.7%]
        Spills        :      16 bytes*
            Reads     :       2 [1.33e-01 ~ 0.0%]
            Writes    :       2 [1.33e-01 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::registerDerivedVariables(FlowModelSingleSpecies *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::registerDerivedVariables(FlowModelSingleSpecies *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> &)) [149] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(775,1)
  -> INLINE: (779,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (779,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (779,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (779,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (779,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (779,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (779,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (779,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (779,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (779,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (779,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (779,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (779,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (779,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (779,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (788,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (788,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (788,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (788,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (788,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (788,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (788,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (788,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (788,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (788,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (794,80) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::begin(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (795,13) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (795,13) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (795,16) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (795,16) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (796,12) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator++(std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *, int)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (798,16) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (798,25) SAMRAI::hier::IntVector::operator<(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (798,27) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
  -> INLINE: (799,16) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (799,25) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (801,13) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (801,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (801,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (801,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (801,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (801,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (801,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (801,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (801,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (801,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (801,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (801,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (801,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (801,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (801,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (801,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (801,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (801,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (810,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (810,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (810,36) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (810,36) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (810,48) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (810,48) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (810,48) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (810,51) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (812,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (812,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (812,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (812,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (812,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (812,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (812,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (813,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (813,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (813,40) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (813,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (813,51) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (814,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (814,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (814,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (815,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (815,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (815,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (818,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (818,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (818,36) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (818,36) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (818,55) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (818,55) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (818,55) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (818,58) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (820,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (820,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (820,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (820,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (820,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (820,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (820,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (821,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (821,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (821,40) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (821,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (821,58) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (822,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (822,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (822,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (823,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (823,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (823,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (826,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (826,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (826,36) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (826,36) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (826,48) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (826,48) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (826,48) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (826,51) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (828,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (828,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (828,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (828,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (828,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (828,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (828,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (829,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (829,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (829,40) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (829,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (829,51) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (830,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (830,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (830,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (831,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (831,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (831,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (834,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (834,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (834,36) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (834,36) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (834,51) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (834,51) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (834,51) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (834,54) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (836,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (836,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (836,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (836,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (836,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (836,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (836,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (837,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (837,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (837,40) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (837,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (837,54) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (838,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (838,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (838,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (839,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (839,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (839,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (842,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (842,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (842,36) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (842,36) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (842,51) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (842,51) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (842,51) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (842,54) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (844,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (844,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (844,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (844,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (844,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (844,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (844,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (845,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (845,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (845,40) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (845,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (845,54) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (846,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (846,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (846,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (847,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (847,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (847,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (850,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (850,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (850,36) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (850,36) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (850,57) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (850,57) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (850,57) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (850,60) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (852,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (852,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (852,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (852,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (852,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (852,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (852,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (853,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (853,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (853,40) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (853,60) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (854,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (854,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (854,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (855,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (855,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (855,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (858,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (858,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (858,36) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (858,36) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (858,57) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (858,57) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (858,57) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (858,60) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (860,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (860,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (860,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (860,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (860,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (860,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (860,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (861,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (861,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (861,40) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (861,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (861,60) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (862,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (862,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (862,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (863,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (863,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (863,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (866,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (866,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (866,36) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (866,36) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (866,57) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (866,57) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (866,57) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (866,60) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (868,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (868,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (868,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (868,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (868,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (868,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (868,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (869,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (869,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (869,40) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (869,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (869,60) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (870,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (870,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (870,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (871,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (871,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (871,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (874,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (874,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (874,36) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (874,36) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (874,59) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (874,59) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (874,59) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (874,62) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (876,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (876,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (876,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (876,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (876,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (876,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (876,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (877,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (877,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (877,40) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (877,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (877,62) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (878,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (878,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (878,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (879,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (879,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (879,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (882,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (882,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (882,36) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (882,36) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (882,56) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (882,56) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (882,56) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (882,59) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (884,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (884,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (884,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (884,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (884,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (884,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (884,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (885,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (885,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (885,40) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (885,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (885,59) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (886,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (886,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (886,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (887,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (887,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (887,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (890,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (890,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (890,36) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (890,36) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (890,56) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (890,56) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (890,56) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (890,59) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (892,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (892,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (892,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (892,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (892,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (892,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (892,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (893,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (893,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (893,40) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (893,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (893,59) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (894,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (894,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (894,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (895,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (895,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (895,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (898,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (898,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (898,36) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (898,36) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (898,56) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (898,56) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (898,56) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (898,59) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (900,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (900,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (900,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (900,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (900,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (900,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (900,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (901,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (901,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (901,40) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (901,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (901,59) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (902,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (902,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (902,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (903,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (903,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (903,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (906,36) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (906,36) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (906,36) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (906,36) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (906,55) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (906,55) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (906,55) std::__detail::operator!=<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true>(const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &, const std::__detail::_Node_iterator_base<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, true> &)
  -> INLINE: (906,58) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::end(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (908,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (908,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (908,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (908,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (908,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (908,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (908,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (909,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (909,40) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (909,40) std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::find(const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>> *, const std::unordered_map<std::string, SAMRAI::hier::IntVector, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>>::key_type &) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (909,40) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (909,58) std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true>::operator->(const std::__detail::_Node_const_iterator<std::__detail::_Hashtable_base<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__umap_traits<true>>::value_type, false, true> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (910,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (910,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (910,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (911,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (911,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (911,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/ostream(385,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(801,13)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(775,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies24registerDerivedVariablesERKSt13unordered_mapISsN6SAMRAI4hier9IntVectorESt4hashISsESt8equal_toISsESaISt4pairIKSsS3_EEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:775

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :    2718
            Global    :     668
            Local     :    2050
        Regenerable   :    1026
        Spilled       :      16
        
    Routine stack
        Variables     :    1684 bytes*
            Reads     :     203 [8.11e+01 ~ 6.0%]
            Writes    :     228 [1.91e+02 ~ 14.1%]
        Spills        :      80 bytes*
            Reads     :      10 [7.89e+00 ~ 0.6%]
            Writes    :      10 [3.52e+00 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)) [151] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2399,1)
  -> INLINE: (2402,23) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2404,38) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2404,40) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (2404,41) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2406,31) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2420,42) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2425,38) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2428,28) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2430,45) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2430,47) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (2430,48) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2432,31) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2446,49) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2451,45) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2454,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2454,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2454,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2454,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2454,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2454,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2456,28) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2458,38) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2458,40) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (2458,41) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2460,31) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2474,42) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2479,38) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2482,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2482,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2482,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2482,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2482,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2482,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2484,28) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2486,41) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2486,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (2486,44) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2488,31) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2502,45) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2507,41) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2510,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2510,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2510,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2510,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2510,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2510,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2512,28) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2514,41) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2514,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (2514,44) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2516,31) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2530,45) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2535,41) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2538,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2538,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2538,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2538,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2538,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2538,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2540,28) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2542,47) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2542,49) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (2542,50) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2544,31) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2558,51) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2563,47) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2566,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2566,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2566,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2566,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2566,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2566,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2567,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2567,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2567,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2567,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2567,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2567,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2569,28) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2571,47) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2571,49) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (2571,50) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2573,31) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2587,51) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2592,47) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2595,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2595,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2595,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2595,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2595,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2595,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2596,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2596,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2596,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2596,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2596,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2596,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2598,28) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2600,47) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2600,49) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (2600,50) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2602,31) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2616,51) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2621,47) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2624,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2624,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2624,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2624,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2624,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2624,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2625,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2625,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2625,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2625,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2625,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2625,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2627,28) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2629,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2629,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2629,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2629,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2629,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2629,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2630,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2630,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2630,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2630,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2630,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2630,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2632,28) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2634,46) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2634,48) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (2634,49) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2636,31) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2650,50) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2655,46) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2658,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2658,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2658,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2658,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2658,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2658,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2659,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2659,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2659,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2659,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2659,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2659,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2661,28) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2663,46) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2663,48) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (2663,49) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2665,31) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2679,50) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2684,46) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2687,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2687,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2687,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2687,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2687,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2687,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2688,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2688,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2688,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2688,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2688,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2688,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2690,28) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2692,46) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2692,48) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (2692,49) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2694,31) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2708,50) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2713,46) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2716,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2716,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2716,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2716,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2716,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2716,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2717,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2717,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2717,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2717,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2717,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2717,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2719,28) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2721,45) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2721,47) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (2721,48) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2723,31) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2737,49) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (2742,45) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2745,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2745,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2745,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2745,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2745,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2745,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2746,9) FlowModelSingleSpecies::setNumberOfSubGhosts(FlowModelSingleSpecies *, const SAMRAI::hier::IntVector &, const std::string &, const std::string &)
  -> INLINE: (2746,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2746,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2746,45) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2746,45) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2746,45) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2399,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies20setNumberOfSubGhostsERKN6SAMRAI4hier9IntVectorERKSsS6_] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:2399

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :    1352
            Global    :     337
            Local     :    1015
        Regenerable   :     377
        Spilled       :      15
        
    Routine stack
        Variables     :     732 bytes*
            Reads     :      60 [5.31e-01 ~ 0.7%]
            Writes    :      40 [0.00e+00 ~ 0.0%]
        Spills        :      72 bytes*
            Reads     :      12 [5.66e-03 ~ 0.0%]
            Writes    :      12 [5.66e-03 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const) [152] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(860,4)
  -> INLINE: (866,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (867,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (868,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (868,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (872,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (874,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (874,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(865,10)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(867,38)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(873,10)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(860,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier9IntVectorgtERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:860

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rsi rdi r8-r14]
        
    Routine temporaries
        Total         :      37
            Global    :      20
            Local     :      17
        Regenerable   :       1
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       6 [1.04e+00 ~ 2.0%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<int, std::allocator<int>>::_M_deallocate(std::_Vector_base<int, std::allocator<int>> *, std::_Vector_base<int, std::allocator<int>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)) [158] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(555,4)
  -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between this (558:18) and *(this+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(555,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVectormLEi] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:555

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8-r11]
        
    Routine temporaries
        Total         :      32
            Global    :      13
            Local     :      19
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator<(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator<(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const) [159] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(800,4)
  -> INLINE: (806,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (807,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (808,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (808,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (812,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (814,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (814,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(805,10)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(807,38)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(813,10)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(800,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier9IntVectorltERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:800

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rsi rdi r8-r14]
        
    Routine temporaries
        Total         :      37
            Global    :      20
            Local     :      17
        Regenerable   :       1
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       6 [1.04e+00 ~ 2.0%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::unregisterPatch(FlowModelSingleSpecies *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::unregisterPatch(FlowModelSingleSpecies *)) [160] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(922,1)
  -> INLINE: (926,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (926,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (926,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (926,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (926,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (926,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (926,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (926,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (926,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (926,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (926,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (926,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (926,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (926,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (926,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (932,39) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (932,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (932,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (933,39) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (933,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (933,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (934,39) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (934,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (934,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (935,39) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (935,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (935,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (936,39) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (936,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (936,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (937,39) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (937,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (937,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (938,39) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (938,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (938,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (939,39) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (939,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (939,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (940,39) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (940,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (940,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (941,39) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (941,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (941,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (942,39) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (942,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (942,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (943,39) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (943,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (943,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (944,39) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (944,41) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (944,42) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (946,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (947,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (948,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (949,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (950,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (951,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (952,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (953,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (954,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (955,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (956,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (957,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (958,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (959,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (960,40) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (962,43) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (962,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (963,43) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (963,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (964,43) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (964,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (965,43) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (965,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (966,43) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (966,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (967,43) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (967,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (968,43) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (968,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (969,43) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (969,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (970,43) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (970,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (971,43) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (971,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (972,43) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (972,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (973,43) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (973,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (974,43) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (974,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (975,43) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (975,45) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (977,21) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (978,28) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (979,21) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (980,24) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (981,24) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (982,30) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (983,30) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (984,30) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (985,29) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (986,29) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (987,29) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (988,28) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (1003,42)  EXPR_CONV.SI64.P64(*((SI64*) (__$U391_V$1a32.0.1569->__vptr_V$178 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (1003,42) std::__shared_ptr<FlowModelDiffusiveFluxUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelDiffusiveFluxUtilities, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (1004,34)  EXPR_CONV.SI64.P64(*((SI64*) (__$U392_V$1a33.0.1569->__vptr_V$1e0 + EXPR_CONV.SI32.I64(5(SI32)) * 8(I64))))
  -> INLINE: (1004,34) std::__shared_ptr<FlowModelSourceUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelSourceUtilities, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1009,5) FlowModel::clearDataContext(FlowModel *)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp:(476,27) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::reset(std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(936,41)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U390_V.U390_V.U390_V.U390_V.U390_V (558:18) and *(U390_V.U390_V.U390_V.U390_V.U390_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(936,41)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(937,41)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U390_V.U390_V.U390_V.U390_V.U390_V (558:18) and *(U390_V.U390_V.U390_V.U390_V.U390_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(937,41)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(938,41)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U390_V.U390_V.U390_V.U390_V.U390_V (558:18) and *(U390_V.U390_V.U390_V.U390_V.U390_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(938,41)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(939,41)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U390_V.U390_V.U390_V.U390_V.U390_V (558:18) and *(U390_V.U390_V.U390_V.U390_V.U390_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(939,41)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(940,41)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U390_V.U390_V.U390_V.U390_V.U390_V (558:18) and *(U390_V.U390_V.U390_V.U390_V.U390_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(940,41)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(941,41)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U390_V.U390_V.U390_V.U390_V.U390_V (558:18) and *(U390_V.U390_V.U390_V.U390_V.U390_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(941,41)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(942,41)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U390_V.U390_V.U390_V.U390_V.U390_V (558:18) and *(U390_V.U390_V.U390_V.U390_V.U390_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(942,41)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(943,41)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U390_V.U390_V.U390_V.U390_V.U390_V (558:18) and *(U390_V.U390_V.U390_V.U390_V.U390_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(943,41)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(944,41)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U390_V.U390_V.U390_V.U390_V.U390_V (558:18) and *(U390_V.U390_V.U390_V.U390_V.U390_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(944,41)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(990,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(922,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies15unregisterPatchEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:922

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r14 zmm0]
        
    Routine temporaries
        Total         :     981
            Global    :     158
            Local     :     823
        Regenerable   :     208
        Spilled       :       4
        
    Routine stack
        Variables     :     679 bytes*
            Reads     :     123 [1.15e+02 ~ 10.7%]
            Writes    :     116 [7.47e+01 ~ 7.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(162,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIiSaIiEEaSERKS1_] /usr/include/c++/4.8.5/bits/vector.tcc:162

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      56
            Global    :      22
            Local     :      34
        Regenerable   :       1
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::allocateMemoryForDerivedCellData(FlowModelSingleSpecies *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::allocateMemoryForDerivedCellData(FlowModelSingleSpecies *)) [162] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1018,1)
  -> (1019,34) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (1019,36) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (1019,37) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> INLINE: (1023,18) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1026,33) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::CellData<Real>>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1027,68) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1027,80) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1032,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1032,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1032,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1032,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1032,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1032,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1032,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1032,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1032,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1032,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1032,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1032,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1032,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1032,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1032,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1039,41) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (1039,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (1039,44) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> INLINE: (1043,18) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1046,40) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::CellData<Real>>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1047,65) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1052,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1052,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1052,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1052,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1052,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1052,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1052,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1052,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1052,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1052,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1052,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1052,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1052,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1052,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1052,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1059,34) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (1059,36) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (1059,37) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> INLINE: (1063,18) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1066,33) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::CellData<Real>>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1067,65) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1072,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1072,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1072,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1072,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1072,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1072,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1072,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1072,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1072,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1072,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1072,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1072,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1072,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1072,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1072,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1079,37) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (1079,39) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (1079,40) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> INLINE: (1083,18) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1086,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::CellData<Real>>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1087,65) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1092,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1092,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1092,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1092,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1092,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1092,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1092,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1092,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1092,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1092,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1092,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1092,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1092,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1092,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1092,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1099,37) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (1099,39) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (1099,40) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> INLINE: (1103,18) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1106,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::CellData<Real>>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1107,65) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1112,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1112,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1112,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1112,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1112,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1112,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1112,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1112,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1112,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1112,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1112,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1112,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1112,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1112,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1112,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1119,43) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (1119,45) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (1119,46) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> INLINE: (1123,18) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1126,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::CellData<Real>>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1127,73) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1132,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1132,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1132,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1132,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1132,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1132,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1132,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1132,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1132,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1132,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1132,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1132,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1132,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1132,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1132,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1139,43) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (1139,45) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (1139,46) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> INLINE: (1143,18) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1146,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::CellData<Real>>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1147,73) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1152,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1152,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1152,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1152,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1152,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1152,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1152,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1152,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1152,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1152,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1152,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1152,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1152,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1152,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1152,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1159,43) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (1159,45) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (1159,46) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> INLINE: (1163,18) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1166,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::CellData<Real>>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1167,73) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1172,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1172,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1172,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1172,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1172,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1172,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1172,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1172,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1172,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1172,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1172,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1172,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1172,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1172,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1172,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1179,42) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (1179,44) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (1179,45) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> INLINE: (1183,18) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1186,41) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::CellData<Real>>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1187,65) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1192,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1192,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1192,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1192,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1192,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1192,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1192,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1192,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1192,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1192,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1192,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1192,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1192,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1192,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1192,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1199,42) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (1199,44) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (1199,45) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> INLINE: (1203,18) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1206,41) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::CellData<Real>>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1207,65) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1212,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1212,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1212,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1212,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1212,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1212,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1212,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1212,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1212,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1212,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1212,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1212,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1212,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1212,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1212,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1219,42) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (1219,44) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (1219,45) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> INLINE: (1223,18) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1226,41) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::CellData<Real>>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1227,65) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1232,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1232,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1232,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1232,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1232,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1232,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1232,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1232,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1232,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1232,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1232,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1232,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1232,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1232,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1232,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1239,41) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (1239,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (1239,44) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> INLINE: (1243,18) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1246,40) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::CellData<Real>>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1247,65) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (1252,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1252,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1252,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1252,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1252,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1252,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1252,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1252,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1252,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1252,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1252,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1252,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1252,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1252,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1252,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1018,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies32allocateMemoryForDerivedCellDataEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:1018

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :    3803
            Global    :     884
            Local     :    2919
        Regenerable   :    1407
        Spilled       :       5
        
    Routine stack
        Variables     :    5124 bytes*
            Reads     :     347 [6.44e+01 ~ 5.7%]
            Writes    :     659 [2.10e+02 ~ 18.7%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::CellData<Real> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(449,2):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC1IPN6SAMRAI4pdat8CellDataIdEEEET_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:449

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      28
            Global    :      10
            Local     :      18
        Regenerable   :       2
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       2 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)) [164] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(79,1)
  -> (73,17) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
  -> INLINE: (73,17) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (84,11) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (84,11) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (84,11) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (84,11) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (85,16) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (85,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (85,16) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (87,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::ArrayData<Real>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::ArrayData<Real>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::ArrayData<Real> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
        -> (456,8) SAMRAI::pdat::ArrayData<Real>::~ArrayData(SAMRAI::pdat::ArrayData<Real> *)
  -> INLINE: (87,37) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (87,52) SAMRAI::pdat::ArrayData<Real>::ArrayData(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Box &, unsigned int)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(91,18) std::allocator<double>::~allocator(std::allocator<double> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(94,40) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::allocator(std::allocator<double> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(102,45) std::allocator<double>::~allocator(std::allocator<double> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(88,52)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(88,52)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(88,52)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(88,52)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(88,52)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(79,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdEC1ERKNS_4hier3BoxEiRKNS3_9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:79

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     188
            Global    :      52
            Local     :     136
        Regenerable   :      35
        Spilled       :       6
        
    Routine stack
        Variables     :      51 bytes*
            Reads     :       9 [5.67e+00 ~ 2.5%]
            Writes    :      13 [6.00e+00 ~ 2.7%]
        Spills        :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [1.00e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat9ArrayDataIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::~ArrayData(SAMRAI::pdat::ArrayData<Real> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::~ArrayData(SAMRAI::pdat::ArrayData<Real> *)) [167] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(155,1)
  -> INLINE: (159,1) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(155,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:155

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rdi r13]
        
    Routine temporaries
        Total         :      12
            Global    :       8
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__enable_shared_from_this_helper<__gnu_cxx::_S_atomic>(const std::__shared_count<__gnu_cxx::_S_atomic> &, ...)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(724,5):remark #34051: REGISTER ALLOCATION : [_ZSt32__enable_shared_from_this_helperILN9__gnu_cxx12_Lock_policyE2EEvRKSt14__shared_countIXT_EEz] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:724

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::computeDerivedCellData(FlowModelSingleSpecies *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::computeDerivedCellData(FlowModelSingleSpecies *)) [171] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1266,1)
  -> INLINE: (1270,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1270,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1270,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1270,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1270,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1270,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1270,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1270,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1270,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1270,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1270,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1270,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1270,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1270,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1270,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1281,9) FlowModelSingleSpecies::setDerivedCellVariableGhostBoxes(FlowModelSingleSpecies *)
  -> (1285,34) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1285,36) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1285,37) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1289,13) FlowModelSingleSpecies::computeCellDataOfVelocity(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (1295,41) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1295,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1295,44) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1299,13) FlowModelSingleSpecies::computeCellDataOfInternalEnergyWithVelocity(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (1305,34) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1305,36) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1305,37) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1309,13) FlowModelSingleSpecies::computeCellDataOfPressureWithInternalEnergy(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (1315,37) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1315,39) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1315,40) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1319,13) FlowModelSingleSpecies::computeCellDataOfSoundSpeedWithPressure(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (1325,37) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1325,39) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1325,40) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1329,13) FlowModelSingleSpecies::computeCellDataOfTemperatureWithPressure(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (1335,43) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1335,45) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1335,46) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1339,13) FlowModelSingleSpecies::computeCellDataOfConvectiveFluxWithVelocityAndPressure(FlowModelSingleSpecies *, const DIRECTION::TYPE &, const SAMRAI::hier::Box &)
  -> (1346,43) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1346,45) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1346,46) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1350,13) FlowModelSingleSpecies::computeCellDataOfConvectiveFluxWithVelocityAndPressure(FlowModelSingleSpecies *, const DIRECTION::TYPE &, const SAMRAI::hier::Box &)
  -> (1357,43) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1357,45) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1357,46) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1361,13) FlowModelSingleSpecies::computeCellDataOfConvectiveFluxWithVelocityAndPressure(FlowModelSingleSpecies *, const DIRECTION::TYPE &, const SAMRAI::hier::Box &)
  -> (1368,42) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (1368,44) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1368,45) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1372,13) FlowModelSingleSpecies::computeCellDataOfMaxWaveSpeedWithVelocityAndSoundSpeed(FlowModelSingleSpecies *, const DIRECTION::TYPE &, const SAMRAI::hier::Box &)
  -> INLINE: (1379,42) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(866,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(867,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(872,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1379,44) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1379,45) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1383,13) FlowModelSingleSpecies::computeCellDataOfMaxWaveSpeedWithVelocityAndSoundSpeed(FlowModelSingleSpecies *, const DIRECTION::TYPE &, const SAMRAI::hier::Box &)
  -> INLINE: (1390,42) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(866,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(867,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(872,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1390,44) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1390,45) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1394,13) FlowModelSingleSpecies::computeCellDataOfMaxWaveSpeedWithVelocityAndSoundSpeed(FlowModelSingleSpecies *, const DIRECTION::TYPE &, const SAMRAI::hier::Box &)
  -> INLINE: (1401,41) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(866,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(867,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(872,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (1401,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1401,44) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1405,13) FlowModelSingleSpecies::computeCellDataOfMaxDiffusivityWithPressureAndTemperature(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1285,36)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18) and *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1285,36)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1295,43)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18) and *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1295,43)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1305,36)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18) and *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1305,36)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1315,39)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18) and *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1315,39)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1325,39)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18) and *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1325,39)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1335,45)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18) and *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1335,45)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1346,45)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18) and *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1346,45)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1357,45)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18) and *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1357,45)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1368,44)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18) and *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1368,44)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1379,44)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18) and *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1379,44)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(865,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1379,42)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(867,38) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1379,42)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(873,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1379,42)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1390,44)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18) and *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1390,44)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(865,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1390,42)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(867,38) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1390,42)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(873,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1390,42)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1401,43)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18) and *(U3df_V.U3df_V.U3df_V.U3df_V.U3df_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1401,43)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(865,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1401,41)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(867,38) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1401,41)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(873,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1401,41)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1266,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies22computeDerivedCellDataEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:1266

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     725
            Global    :     189
            Local     :     536
        Regenerable   :     172
        Spilled       :       6
        
    Routine stack
        Variables     :     493 bytes*
            Reads     :      93 [1.07e+02 ~ 11.8%]
            Writes    :      57 [1.65e+01 ~ 1.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::computeCellDataOfMaxWaveSpeedWithVelocityAndSoundSpeed(FlowModelSingleSpecies *, const DIRECTION::TYPE &, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::computeCellDataOfMaxWaveSpeedWithVelocityAndSoundSpeed(FlowModelSingleSpecies *, const DIRECTION::TYPE &, const SAMRAI::hier::Box &)) [172] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4106,1)
  -> (4109,46) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (4109,48) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (4109,49) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (4124,28) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> (4126,31) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (4126,33) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (4127,33) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (4135,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (4135,48) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
  -> INLINE: (4135,65) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (4136,33) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (4136,42) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (4141,21) FlowModelSingleSpecies::computeCellDataOfVelocity(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (4146,21) FlowModelSingleSpecies::computeCellDataOfSoundSpeedWithPressure(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> INLINE: (4150,61) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4150,63) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4151,53) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4151,55) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4152,56) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4152,58) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4154,27) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4160,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4161,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4163,88) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4164,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4165,98) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4176,62) std::abs(double)
  -> INLINE: (4179,32) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4185,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4186,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4187,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4188,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4190,88) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4191,88) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4192,95) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4194,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4195,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4196,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4198,98) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4199,98) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4200,105) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4218,66) std::abs(double)
  -> INLINE: (4222,32) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4228,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4229,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4230,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4231,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4232,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4233,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4235,88) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4236,88) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4237,88) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4238,95) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4239,95) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4241,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4242,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4243,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4244,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4245,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4247,98) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4248,98) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4249,98) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4250,105) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4251,105) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4277,70) std::abs(double)
  -> INLINE: (4288,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4288,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4288,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4288,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4288,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4288,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4288,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4288,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4288,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4288,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4288,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4288,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4288,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4288,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4288,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4296,46) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (4296,48) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (4296,49) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (4311,28) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> (4313,31) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (4313,33) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (4314,33) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (4322,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (4322,48) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
  -> INLINE: (4322,65) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (4323,33) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (4323,42) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (4328,21) FlowModelSingleSpecies::computeCellDataOfVelocity(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (4333,21) FlowModelSingleSpecies::computeCellDataOfSoundSpeedWithPressure(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> INLINE: (4337,61) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4337,63) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4338,53) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4338,55) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4339,56) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4339,58) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4341,27) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4343,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4343,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4343,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4343,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4343,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4343,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4343,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4343,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4343,21) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4343,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4343,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4343,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4343,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4343,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4343,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4348,32) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4354,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4355,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4356,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4357,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4359,88) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4360,88) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4361,95) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4363,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4364,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4365,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4367,98) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4368,98) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4369,105) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4387,66) std::abs(double)
  -> INLINE: (4391,32) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4397,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4398,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4399,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4400,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4401,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4402,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4404,88) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4405,88) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4406,88) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4407,95) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4408,95) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4410,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4411,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4412,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4413,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4414,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4416,98) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4417,98) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4418,98) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4419,105) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4420,105) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4446,70) std::abs(double)
  -> INLINE: (4457,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4457,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4457,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4457,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4457,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4457,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4457,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4457,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4457,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4457,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4457,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4457,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4457,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4457,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4457,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4465,46) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (4465,48) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (4465,49) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (4480,28) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> (4482,31) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (4482,33) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (4483,33) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (4491,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (4491,48) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
  -> INLINE: (4491,65) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (4492,33) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (4492,42) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (4497,21) FlowModelSingleSpecies::computeCellDataOfVelocity(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (4502,21) FlowModelSingleSpecies::computeCellDataOfSoundSpeedWithPressure(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> INLINE: (4506,61) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4506,63) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4507,53) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4507,55) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4508,56) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4508,58) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4510,27) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4510,58) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4512,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4512,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4512,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4512,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4512,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4512,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4512,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4512,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4512,21) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4512,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4512,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4512,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4512,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4512,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4512,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4517,32) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4523,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4524,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4525,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4526,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4527,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4528,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4530,88) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4531,88) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4532,88) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4533,95) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4534,95) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4536,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4537,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4538,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4539,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4540,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4542,98) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4543,98) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4544,98) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4545,105) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4546,105) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4572,70) std::abs(double)
  -> INLINE: (4583,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4583,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4583,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4583,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4583,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4583,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4583,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4583,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4583,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4583,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4583,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4583,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4583,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4583,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4583,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4169,21)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4169,21)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4169,21)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4169,21)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4169,21)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4169,21)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4203,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4206,25)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4206,25)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4206,25)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4206,25)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4206,25)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4206,25)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4254,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4256,25)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4259,29)
      <Peeled loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4259,29)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4259,29)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4259,29)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4259,29)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4259,29)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4372,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4375,25)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4375,25)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4375,25)
   <Remainder loop for vectorization, Multiversioned v1>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4375,25)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4375,25)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4375,25)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4423,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4425,25)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4428,29)
      <Peeled loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4428,29)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4428,29)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4428,29)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4428,29)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4428,29)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4549,21)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4551,25)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4554,29)
      <Peeled loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4554,29)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4554,29)
      <Remainder loop for vectorization, Multiversioned v1>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4554,29)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4554,29)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4554,29)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4106,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies54computeCellDataOfMaxWaveSpeedWithVelocityAndSoundSpeedERKN9DIRECTION4TYPEERKN6SAMRAI4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:4106

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm8]
        
    Routine temporaries
        Total         :    2672
            Global    :     708
            Local     :    1964
        Regenerable   :     720
        Spilled       :     168
        
    Routine stack
        Variables     :    2879 bytes*
            Reads     :     148 [5.01e+00 ~ 4.0%]
            Writes    :     279 [2.00e+01 ~ 15.9%]
        Spills        :    1288 bytes*
            Reads     :     521 [4.97e-01 ~ 0.4%]
            Writes    :     242 [3.09e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)) [173] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(186,4)
  -> INLINE: (189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(186,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier9IntVectoraSERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:186

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      59
            Global    :      23
            Local     :      36
        Regenerable   :       1
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [2.19e-03 ~ 0.0%]
            Writes    :       1 [2.19e-03 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const) [174] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(598,4)
  -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(598,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier3Box5emptyEv] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:598

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      17
            Global    :      10
            Local     :       7
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const) [175] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(281,4)
  -> INLINE: (284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
    -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(285,11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between __p1->d_index[i] (268:10) and rhs->d_index[i] (268:10)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(285,11)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(281,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier5IndexmiERKS1_] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8-r10 r13-r14]
        
    Routine temporaries
        Total         :      27
            Global    :      13
            Local     :      14
        Regenerable   :       0
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::computeCellDataOfSoundSpeedWithPressure(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::computeCellDataOfSoundSpeedWithPressure(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)) [176] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3360,1)
  -> INLINE: (3361,37) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(866,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(867,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(872,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3361,39) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3361,40) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (3371,17) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (3371,17) FlowModelSingleSpecies::getCellDataOfDensity(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (3375,17) FlowModelSingleSpecies::computeCellDataOfPressureWithInternalEnergy(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (3379,38) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (3379,38) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (3380,35) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3380,81) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3381,73) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3381,73) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3383,39) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3383,69) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3387,45) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3387,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U506_V$1d5a.0.1589->__vptr_V$135 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3387,67) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3392,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U507_V$1d5b.0.1589->__vptr_V$12b + EXPR_CONV.SI32.I64(9(SI32)) * 8(I64))))
  -> INLINE: (3395,9) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3395,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3399,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3399,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3399,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3399,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3399,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3399,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3399,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3399,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3399,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3399,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3399,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3399,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3399,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3399,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (3399,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3361,39)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U504_V.U504_V.U504_V.U504_V.U504_V+i*4) (558:18) and *(U504_V.U504_V.U504_V.U504_V.U504_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3361,39)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(865,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3361,37)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(867,38) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3361,37)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(873,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3361,37)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3381,73)
   remark #15523: loop was not vectorized: loop control variable ti was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3360,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies39computeCellDataOfSoundSpeedWithPressureERKN6SAMRAI4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:3360

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     463
            Global    :     126
            Local     :     337
        Regenerable   :     143
        Spilled       :       8
        
    Routine stack
        Variables     :     509 bytes*
            Reads     :      46 [1.76e+01 ~ 7.8%]
            Writes    :      60 [2.64e+01 ~ 11.8%]
        Spills        :      16 bytes*
            Reads     :       4 [1.63e-01 ~ 0.1%]
            Writes    :       4 [1.63e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::_M_deallocate(std::_Vector_base<const Real *, std::allocator<const Real *>> *, std::_Vector_base<const Real *, std::allocator<const Real *>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EE13_M_deallocateEPS1_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::_M_get_Tp_allocator(std::_Vector_base<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::size(const std::vector<const Real *, std::allocator<const Real *>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorIPKdSaIS1_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::getCellDataOfDensity(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::getCellDataOfDensity(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)) [184] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2848,1)
  -> INLINE: (2850,58) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2850,58) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2851,9) std::static_pointer_cast<SAMRAI::pdat::CellData<Real>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2852,22) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(188,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U135_V$1222.0.1191.30329->__vptr_V$1224 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2852,35) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (2852,35) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2848,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies20getCellDataOfDensityEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:2848

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      72
            Global    :      32
            Local     :      40
        Regenerable   :      14
        Spilled       :       3
        
    Routine stack
        Variables     :      24 bytes*
            Reads     :       2 [1.00e+00 ~ 1.2%]
            Writes    :       3 [2.00e+00 ~ 2.5%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::computeCellDataOfVelocity(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::computeCellDataOfVelocity(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)) [185] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2894,1)
  -> INLINE: (2895,34) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(866,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(867,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(872,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2895,36) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2895,37) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2909,24) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (2911,27) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2911,29) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2912,29) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2920,36) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2920,44) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (2920,61) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2921,29) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2921,38) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2926,17) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (2926,17) FlowModelSingleSpecies::getCellDataOfDensity(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (2929,17) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (2929,17) FlowModelSingleSpecies::getCellDataOfMomentum(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> INLINE: (2932,37) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2932,39) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2934,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2940,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2941,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2943,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2944,78) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2947,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2947,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2950,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2950,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2963,28) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2969,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2970,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2971,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2972,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2974,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2975,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2976,61) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2978,78) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2979,78) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2980,85) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2983,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2983,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2984,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2984,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2987,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2987,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2988,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2988,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3008,28) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3014,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3015,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3016,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3017,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3018,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3019,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3021,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3022,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3023,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3024,61) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3025,61) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3027,78) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3028,78) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3029,78) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3030,85) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3031,85) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3034,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3034,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3035,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3035,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3036,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3036,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3039,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3039,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3040,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3040,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3041,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3041,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3070,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3070,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3074,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3074,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3074,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3074,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3074,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3074,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3074,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3074,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3074,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3074,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3074,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3074,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3074,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3074,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (3074,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2895,36)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U4df_V.U4df_V.U4df_V.U4df_V.U4df_V (558:18) and *(U4df_V.U4df_V.U4df_V.U4df_V.U4df_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2895,36)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(865,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2895,34)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(867,38) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2895,34)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(873,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2895,34)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2909,24)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2911,29)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U4e3_V.U4e3_V.U4e3_V.U4e3_V.U4e3_V (558:18) and *(U4e3_V.U4e3_V.U4e3_V.U4e3_V.U4e3_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2911,29)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2920,44)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2954,17)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2954,17)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2954,17)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2954,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2954,17)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2954,17)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2991,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between u[idx_velocity] (3003:25) and v[idx_velocity] (3004:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2994,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between u[idx_velocity] (3003:25) and v[idx_velocity] (3004:25)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2994,21)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3044,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between u[idx_velocity] (3061:29) and w[idx_velocity] (3063:29)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3046,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between u[idx_velocity] (3061:29) and w[idx_velocity] (3063:29)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3049,25)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between u[idx_velocity] (3061:29) and w[idx_velocity] (3063:29)
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2894,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies25computeCellDataOfVelocityERKN6SAMRAI4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:2894

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm7]
        
    Routine temporaries
        Total         :     851
            Global    :     246
            Local     :     605
        Regenerable   :     189
        Spilled       :      50
        
    Routine stack
        Variables     :     729 bytes*
            Reads     :      78 [1.76e+01 ~ 7.1%]
            Writes    :      72 [2.61e+01 ~ 10.5%]
        Spills        :     360 bytes*
            Reads     :      65 [3.78e+00 ~ 1.5%]
            Writes    :      52 [1.11e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::computeCellDataOfConvectiveFluxWithVelocityAndPressure(FlowModelSingleSpecies *, const DIRECTION::TYPE &, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::computeCellDataOfConvectiveFluxWithVelocityAndPressure(FlowModelSingleSpecies *, const DIRECTION::TYPE &, const SAMRAI::hier::Box &)) [186] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3467,1)
  -> (3470,47) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (3470,49) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (3470,50) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (3485,28) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> (3487,31) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (3487,33) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (3488,33) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (3496,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (3496,48) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
  -> INLINE: (3496,65) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (3497,33) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (3497,42) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (3501,36) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3501,36) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3502,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3505,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3505,59) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3505,61) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (3509,21) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (3509,21) FlowModelSingleSpecies::getCellDataOfMomentum(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (3512,21) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (3512,21) FlowModelSingleSpecies::getCellDataOfTotalEnergy(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (3516,21) FlowModelSingleSpecies::computeCellDataOfVelocity(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (3521,21) FlowModelSingleSpecies::computeCellDataOfPressureWithInternalEnergy(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> INLINE: (3525,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3525,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3526,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3526,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3528,27) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3534,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3535,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3537,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3538,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3539,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3540,100) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3543,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3543,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3546,46) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3546,48) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3558,28) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3559,28) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3560,28) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3563,32) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3569,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3570,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3571,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3572,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3574,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3575,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3576,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3578,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3579,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3580,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3582,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3583,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3584,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3586,100) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3587,100) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3588,107) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3591,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3591,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3592,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3592,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3595,46) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3595,48) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3615,32) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3616,32) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3617,32) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3618,32) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3622,32) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3628,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3629,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3630,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3631,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3632,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3633,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3635,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3636,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3637,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3638,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3639,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3641,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3642,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3643,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3644,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3645,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3647,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3648,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3649,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3650,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3651,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3653,100) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3654,100) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3655,100) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3656,107) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3657,107) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3660,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3660,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3661,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3661,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3662,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3662,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3665,46) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3665,48) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3695,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3696,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3697,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3698,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3699,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (3706,13) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (3706,13) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3706,13) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3710,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3710,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3710,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3710,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3710,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3710,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3710,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3710,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3710,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3710,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3710,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3710,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3710,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3710,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3710,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3718,47) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (3718,49) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (3718,50) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (3732,28) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> (3734,31) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (3734,33) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (3735,33) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (3743,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (3743,48) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
  -> INLINE: (3743,65) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (3744,33) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (3744,42) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (3748,36) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3748,36) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3749,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3752,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3752,59) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3752,61) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (3756,21) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (3756,21) FlowModelSingleSpecies::getCellDataOfMomentum(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (3759,21) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (3759,21) FlowModelSingleSpecies::getCellDataOfTotalEnergy(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (3763,21) FlowModelSingleSpecies::computeCellDataOfVelocity(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (3768,21) FlowModelSingleSpecies::computeCellDataOfPressureWithInternalEnergy(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> INLINE: (3772,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3772,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3773,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3773,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3775,27) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3777,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3777,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3777,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3777,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3777,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3777,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3777,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3777,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3777,21) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3777,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3777,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3777,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3777,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3777,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3777,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3782,32) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3788,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3789,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3790,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3791,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3793,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3794,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3795,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3797,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3798,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3799,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3801,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3802,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3803,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3805,100) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3806,100) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3807,107) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3810,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3810,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3811,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3811,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3814,46) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3814,48) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3834,32) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3835,32) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3836,32) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3837,32) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3841,32) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3847,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3848,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3849,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3850,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3851,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3852,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3854,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3855,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3856,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3857,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3858,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3860,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3861,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3862,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3863,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3864,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3866,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3867,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3868,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3869,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3870,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3872,100) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3873,100) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3874,100) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3875,107) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3876,107) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3879,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3879,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3880,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3880,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3881,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3881,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3884,46) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3884,48) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3914,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3915,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3916,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3917,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3918,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (3925,13) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (3925,13) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3925,13) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3929,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3929,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3929,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3929,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3929,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3929,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3929,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3929,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3929,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3929,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3929,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3929,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3929,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3929,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3929,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3937,47) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> (3937,49) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (3937,50) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
  -> (3952,28) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> (3954,31) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (3954,33) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
  -> (3955,33) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (3963,40) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (3963,48) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
  -> INLINE: (3963,65) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (3964,33) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (3964,42) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (3968,36) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3968,36) std::vector<Real *, std::allocator<Real *>>::vector(std::vector<Real *, std::allocator<Real *>> *)
  -> (3969,21) std::vector<Real *, std::allocator<Real *>>::reserve(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (3972,25) std::vector<Real *, std::allocator<Real *>>::push_back(std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3972,59) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3972,61) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (3976,21) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (3976,21) FlowModelSingleSpecies::getCellDataOfMomentum(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (3979,21) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (3979,21) FlowModelSingleSpecies::getCellDataOfTotalEnergy(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (3983,21) FlowModelSingleSpecies::computeCellDataOfVelocity(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (3988,21) FlowModelSingleSpecies::computeCellDataOfPressureWithInternalEnergy(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> INLINE: (3992,44) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3992,46) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3993,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3993,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3995,27) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3995,58) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3997,21) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3997,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3997,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3997,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3997,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3997,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3997,21) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3997,21) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3997,21) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (3997,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3997,21) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3997,21) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3997,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3997,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3997,21) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4002,32) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4008,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4009,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4010,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4011,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4012,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4013,57) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4015,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4016,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4017,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4018,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4019,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4021,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4022,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4023,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4024,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4025,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4027,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4028,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4029,82) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4030,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4031,89) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4033,100) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4034,100) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4035,100) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4036,107) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4037,107) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4040,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4040,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4041,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4041,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4042,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4042,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4045,46) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4045,48) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4075,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (4076,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (4077,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (4078,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> INLINE: (4079,36) std::vector<Real *, std::allocator<Real *>>::operator[](std::vector<Real *, std::allocator<Real *>> *, std::vector<Real *, std::allocator<Real *>>::size_type)
  -> (4086,13) std::vector<Real *, std::allocator<Real *>>::~vector(std::vector<Real *, std::allocator<Real *>> *)
  -> INLINE: (4086,13) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4086,13) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4090,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4090,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4090,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4090,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4090,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4090,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4090,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4090,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4090,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4090,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4090,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4090,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4090,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4090,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4090,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3503,17)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3550,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between F_x.F_x.F_x.F_x[0][idx_convective_flux_x] (3558:28) and F_x.F_x.F_x.F_x[2][idx_convective_flux_x] (3560:28)
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3598,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between F_x.F_x.F_x.F_x[0][idx_convective_flux_x] (3615:32) and F_x.F_x.F_x.F_x[3][idx_convective_flux_x] (3618:32)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3601,25)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between F_x.F_x.F_x.F_x[0][idx_convective_flux_x] (3615:32) and F_x.F_x.F_x.F_x[3][idx_convective_flux_x] (3618:32)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3668,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between F_x.F_x.F_x.F_x[0][idx_convective_flux_x] (3695:36) and F_x.F_x.F_x.F_x[4][idx_convective_flux_x] (3699:36)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3670,25)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between F_x.F_x.F_x.F_x[0][idx_convective_flux_x] (3695:36) and F_x.F_x.F_x.F_x[4][idx_convective_flux_x] (3699:36)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3673,29)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between F_x.F_x.F_x.F_x[0][idx_convective_flux_x] (3695:36) and F_x.F_x.F_x.F_x[4][idx_convective_flux_x] (3699:36)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3750,17)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3817,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between F_y.F_y.F_y.F_y[0][idx_convective_flux_y] (3834:32) and F_y.F_y.F_y.F_y[3][idx_convective_flux_y] (3837:32)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3820,25)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between F_y.F_y.F_y.F_y[0][idx_convective_flux_y] (3834:32) and F_y.F_y.F_y.F_y[3][idx_convective_flux_y] (3837:32)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3887,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between F_y.F_y.F_y.F_y[0][idx_convective_flux_y] (3914:36) and F_y.F_y.F_y.F_y[4][idx_convective_flux_y] (3918:36)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3889,25)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between F_y.F_y.F_y.F_y[0][idx_convective_flux_y] (3914:36) and F_y.F_y.F_y.F_y[4][idx_convective_flux_y] (3918:36)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3892,29)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between F_y.F_y.F_y.F_y[0][idx_convective_flux_y] (3914:36) and F_y.F_y.F_y.F_y[4][idx_convective_flux_y] (3918:36)
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3970,17)
   remark #15523: loop was not vectorized: loop control variable ei was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4048,21)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between F_z.F_z.F_z.F_z[0][idx_convective_flux_z] (4075:36) and F_z.F_z.F_z.F_z[4][idx_convective_flux_z] (4079:36)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4050,25)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between F_z.F_z.F_z.F_z[0][idx_convective_flux_z] (4075:36) and F_z.F_z.F_z.F_z[4][idx_convective_flux_z] (4079:36)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4053,29)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between F_z.F_z.F_z.F_z[0][idx_convective_flux_z] (4075:36) and F_z.F_z.F_z.F_z[4][idx_convective_flux_z] (4079:36)
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3467,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies54computeCellDataOfConvectiveFluxWithVelocityAndPressureERKN9DIRECTION4TYPEERKN6SAMRAI4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:3467

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm8]
        
    Routine temporaries
        Total         :    2350
            Global    :     685
            Local     :    1665
        Regenerable   :     709
        Spilled       :     177
        
    Routine stack
        Variables     :    3071 bytes*
            Reads     :     169 [5.12e+00 ~ 3.9%]
            Writes    :     291 [2.02e+01 ~ 15.4%]
        Spills        :    1360 bytes*
            Reads     :     251 [1.99e+00 ~ 1.5%]
            Writes    :     196 [4.63e-01 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::getCellDataOfMomentum(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::getCellDataOfMomentum(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)) [187] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2863,1)
  -> INLINE: (2865,59) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2865,59) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2866,9) std::static_pointer_cast<SAMRAI::pdat::CellData<Real>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2867,22) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(188,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U135_V$1222.0.1191.30318->__vptr_V$1224 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2867,35) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (2867,35) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2863,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies21getCellDataOfMomentumEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:2863

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      72
            Global    :      32
            Local     :      40
        Regenerable   :      14
        Spilled       :       3
        
    Routine stack
        Variables     :      24 bytes*
            Reads     :       2 [1.00e+00 ~ 1.2%]
            Writes    :       3 [2.00e+00 ~ 2.5%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::getCellDataOfTotalEnergy(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::getCellDataOfTotalEnergy(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)) [188] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2878,1)
  -> INLINE: (2880,63) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2880,63) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2881,9) std::static_pointer_cast<SAMRAI::pdat::CellData<Real>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2882,22) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(188,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U135_V$1222.0.1191.30307->__vptr_V$1224 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:(190,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2882,35) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (2882,35) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2878,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies24getCellDataOfTotalEnergyEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:2878

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      72
            Global    :      32
            Local     :      40
        Regenerable   :      14
        Spilled       :       3
        
    Routine stack
        Variables     :      24 bytes*
            Reads     :       2 [1.00e+00 ~ 1.2%]
            Writes    :       3 [2.00e+00 ~ 2.5%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::computeCellDataOfPressureWithInternalEnergy(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::computeCellDataOfPressureWithInternalEnergy(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)) [189] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3307,1)
  -> INLINE: (3308,34) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(866,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(867,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(872,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3308,36) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3308,37) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (3318,17) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (3318,17) FlowModelSingleSpecies::getCellDataOfDensity(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (3322,17) FlowModelSingleSpecies::computeCellDataOfInternalEnergyWithVelocity(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (3326,38) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (3326,38) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (3327,35) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3327,81) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3328,73) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3328,73) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3330,39) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3330,69) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3334,45) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3334,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U4fe_V$1d4a.0.1588->__vptr_V$135 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3334,67) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3339,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U4ff_V$1d4b.0.1588->__vptr_V$12b + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (3342,9) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3342,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3346,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3346,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3346,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3346,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3346,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3346,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3346,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3346,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3346,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3346,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3346,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3346,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3346,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3346,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (3346,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3308,36)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U4fc_V.U4fc_V.U4fc_V.U4fc_V.U4fc_V+i*4) (558:18) and *(U4fc_V.U4fc_V.U4fc_V.U4fc_V.U4fc_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3308,36)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(865,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3308,34)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(867,38) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3308,34)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(873,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3308,34)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3328,73)
   remark #15523: loop was not vectorized: loop control variable ti was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3307,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies43computeCellDataOfPressureWithInternalEnergyERKN6SAMRAI4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:3307

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     463
            Global    :     126
            Local     :     337
        Regenerable   :     143
        Spilled       :       8
        
    Routine stack
        Variables     :     509 bytes*
            Reads     :      46 [1.76e+01 ~ 7.8%]
            Writes    :      60 [2.64e+01 ~ 11.8%]
        Spills        :      16 bytes*
            Reads     :       4 [1.63e-01 ~ 0.1%]
            Writes    :       4 [1.63e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::computeCellDataOfInternalEnergyWithVelocity(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::computeCellDataOfInternalEnergyWithVelocity(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)) [190] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3088,1)
  -> (3089,41) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (3089,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3089,44) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3104,24) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (3106,27) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> INLINE: (3106,29) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3107,29) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3115,36) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3115,44) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (3115,61) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (3116,29) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (3116,38) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (3121,17) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (3121,17) FlowModelSingleSpecies::getCellDataOfDensity(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (3124,17) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (3124,17) FlowModelSingleSpecies::getCellDataOfTotalEnergy(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (3128,17) FlowModelSingleSpecies::computeCellDataOfVelocity(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> INLINE: (3132,51) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3132,53) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3133,37) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3133,39) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3134,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3134,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (3137,38) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (3137,38) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (3138,35) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3138,81) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3139,73) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3139,73) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3141,39) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3141,69) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3144,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3150,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3151,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3153,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3154,78) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3155,92) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3158,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3158,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3173,28) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3179,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3180,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3181,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3182,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3184,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3185,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3186,61) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3188,78) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3189,78) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3190,85) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3192,92) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3193,92) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3194,99) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3197,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3197,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3198,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3198,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3221,28) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (3227,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3228,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3229,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3230,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3231,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3232,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3234,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3235,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3236,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3237,61) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3238,61) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3240,78) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3241,78) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3242,78) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3243,85) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3244,85) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3246,92) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3247,92) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3248,92) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3249,99) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3250,99) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3253,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3253,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3254,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3254,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3255,42) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (3255,44) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3289,9) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3289,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3289,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3293,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3293,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3293,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3293,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3293,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3293,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3293,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3293,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3293,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3293,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3293,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3293,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3293,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3293,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (3293,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3089,43)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U4ed_V.U4ed_V.U4ed_V.U4ed_V.U4ed_V (558:18) and *(U4ed_V.U4ed_V.U4ed_V.U4ed_V.U4ed_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3089,43)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3104,24)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3106,29)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between U4f1_V.U4f1_V.U4f1_V.U4f1_V.U4f1_V (558:18) and *(U4f1_V.U4f1_V.U4f1_V.U4f1_V.U4f1_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3106,29)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3115,44)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3139,73)
   remark #15523: loop was not vectorized: loop control variable ti was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3162,17)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3162,17)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3162,17)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3162,17)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3162,17)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 4  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3162,17)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3201,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between epsilon[i+num_subghosts_0_internal_energy+(j+num_subghosts_1_int (3216:25) and epsilon[i+num_subghosts_0_internal_energy+(j+num_subghosts_1_int (3216:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3204,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between epsilon[i+num_subghosts_0_internal_energy+(j+num_subghosts_1_int (3216:25) and E[i+num_ghosts_0+(j+num_ghosts_1)*ghostcell_dim_0] (3216:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3258,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between epsilon[i+num_subghosts_0_internal_energy+(j+num_subghosts_1_int (3280:29) and epsilon[i+num_subghosts_0_internal_energy+(j+num_subghosts_1_int (3280:29)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3260,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between epsilon[i+num_subghosts_0_internal_energy+(j+num_subghosts_1_int (3280:29) and epsilon[i+num_subghosts_0_internal_energy+(j+num_subghosts_1_int (3280:29)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3263,25)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between epsilon[i+num_subghosts_0_internal_energy+(j+num_subghosts_1_int (3280:29) and E[i+num_ghosts_0+(j+num_ghosts_1)*ghostcell_dim_0+((k+num_ghosts (3280:29)
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3088,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies43computeCellDataOfInternalEnergyWithVelocityERKN6SAMRAI4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:3088

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     937
            Global    :     287
            Local     :     650
        Regenerable   :     206
        Spilled       :      62
        
    Routine stack
        Variables     :     753 bytes*
            Reads     :      73 [1.54e+01 ~ 6.6%]
            Writes    :      77 [2.66e+01 ~ 11.5%]
        Spills        :     448 bytes*
            Reads     :     106 [4.29e+00 ~ 1.9%]
            Writes    :      68 [9.76e-01 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::setDerivedCellVariableGhostBoxes(FlowModelSingleSpecies *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::setDerivedCellVariableGhostBoxes(FlowModelSingleSpecies *)) [191] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2756,1)
  -> (2757,34) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2757,36) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2757,37) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2760,33) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2761,38) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2761,64) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2764,41) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2764,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2764,44) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2767,40) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2768,45) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2768,78) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2771,34) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2771,36) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2771,37) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2774,33) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2775,38) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2775,64) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2778,37) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2778,39) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2778,40) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2781,36) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2782,41) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2782,70) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2785,37) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2785,39) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2785,40) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2788,36) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2789,41) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2789,70) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2792,43) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2792,45) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2792,46) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2795,42) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2796,47) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2796,82) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2799,43) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2799,45) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2799,46) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2802,42) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2803,47) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2803,82) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2806,43) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2806,45) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2806,46) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2809,42) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2810,47) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2810,82) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (2813,42) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (2813,44) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2813,45) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2816,41) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2817,46) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2817,80) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2820,42) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(866,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(867,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(872,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2820,44) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2820,45) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2823,41) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2824,46) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
  -> (2824,80) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2827,42) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(866,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(867,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(872,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2827,44) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2827,45) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2830,41) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2831,46) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2831,80) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2834,41) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(866,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(867,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(872,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2834,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (2834,44) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (2837,40) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
  -> INLINE: (2838,45) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2838,78) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2757,36)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2757,36)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2757,36)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2764,43)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2764,43)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2764,43)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2771,36)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2771,36)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2771,36)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2778,39)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2778,39)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2778,39)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2785,39)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2785,39)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2785,39)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2792,45)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2792,45)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2792,45)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2799,45)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2799,45)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2799,45)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2806,45)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2806,45)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2806,45)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2813,44)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2813,44)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2813,44)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2820,44)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2820,44)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2820,44)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(865,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2820,42)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(867,38) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2820,42)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(873,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2820,42)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2827,44)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2827,44)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2827,44)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(865,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2827,42)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(867,38) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2827,42)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(873,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2827,42)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2834,43)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2834,43)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2834,43)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(865,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2834,41)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(867,38) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2834,41)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(873,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2834,41)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2756,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies32setDerivedCellVariableGhostBoxesEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:2756

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm1]
        
    Routine temporaries
        Total         :     776
            Global    :     242
            Local     :     534
        Regenerable   :     137
        Spilled       :       5
        
    Routine stack
        Variables     :     632 bytes*
            Reads     :      68 [4.28e+01 ~ 2.5%]
            Writes    :      12 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const) [192] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(636,4)
  -> INLINE: (637,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (638,17) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (638,36) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (640,32) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (640,39) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(253,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)
      -> INLINE: (239,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (239,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(638,11)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(641,32)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(239,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(641,39)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(636,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier3Box11numberCellsEv] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:636

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rsi rdi r8 r13]
        
    Routine temporaries
        Total         :      79
            Global    :      17
            Local     :      62
        Regenerable   :      13
        Spilled       :       2
        
    Routine stack
        Variables     :      56 bytes*
            Reads     :      13 [3.69e+00 ~ 4.7%]
            Writes    :      12 [2.25e+00 ~ 2.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)) [193] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(901,4)
  -> INLINE: (903,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (904,21) SAMRAI::hier::IntVector::getNumBlocks(const SAMRAI::hier::IntVector *) const
  -> INLINE: (905,45) SAMRAI::hier::BlockId::getBlockValue(const SAMRAI::hier::BlockId *) const
  -> INLINE: (906,42) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (906,42) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (906,51) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (906,51) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (907,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (907,33) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,31) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (908,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
  -> INLINE: (908,33) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,31) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (911,18) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (912,18) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(904,12)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(906,51)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(912,18)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(912,18)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(913,18)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(913,18)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(901,4):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4hier3Box4growERKNS0_9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:901

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8-r11]
        
    Routine temporaries
        Total         :     101
            Global    :      25
            Local     :      76
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::computeCellDataOfTemperatureWithPressure(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::computeCellDataOfTemperatureWithPressure(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)) [194] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3413,1)
  -> INLINE: (3414,37) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(866,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(867,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(868,71) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(872,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(874,59) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (3414,39) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (3414,40) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (3424,17) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (3424,17) FlowModelSingleSpecies::getCellDataOfDensity(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (3428,17) FlowModelSingleSpecies::computeCellDataOfPressureWithInternalEnergy(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (3432,38) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (3432,38) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (3433,35) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3433,81) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3434,73) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3434,73) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (3436,39) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3436,69) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (3440,45) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3440,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U50e_V$1d6b.0.1590->__vptr_V$135 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (3440,67) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (3445,17)  EXPR_CONV.SI64.P64(*((SI64*) (__$U50f_V$1d6c.0.1590->__vptr_V$12b + EXPR_CONV.SI32.I64(24(SI32)) * 8(I64))))
  -> INLINE: (3448,9) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3448,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3452,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3452,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3452,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3452,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3452,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3452,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (3452,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (3452,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3452,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3452,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (3452,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (3452,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3452,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3452,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (3452,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3414,39)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between *(U50c_V.U50c_V.U50c_V.U50c_V.U50c_V+i*4) (558:18) and *(U50c_V.U50c_V.U50c_V.U50c_V.U50c_V+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3414,39)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(865,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3414,37)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(867,38) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3414,37)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(873,10) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3414,37)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3434,73)
   remark #15523: loop was not vectorized: loop control variable ti was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(3413,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies40computeCellDataOfTemperatureWithPressureERKN6SAMRAI4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:3413

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     463
            Global    :     126
            Local     :     337
        Regenerable   :     143
        Spilled       :       8
        
    Routine stack
        Variables     :     509 bytes*
            Reads     :      46 [1.76e+01 ~ 7.8%]
            Writes    :      60 [2.64e+01 ~ 11.8%]
        Spills        :      16 bytes*
            Reads     :       4 [1.63e-01 ~ 0.1%]
            Writes    :       4 [1.63e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::computeCellDataOfMaxDiffusivityWithPressureAndTemperature(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::computeCellDataOfMaxDiffusivityWithPressureAndTemperature(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)) [195] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4598,1)
  -> INLINE: (4599,10) std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4600,10) std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4601,10) std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4603,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4603,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4603,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4603,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4603,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4603,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (4603,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4603,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4603,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4603,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4603,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4603,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4603,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4603,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4603,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4603,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4603,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4611,41) SAMRAI::hier::IntVector::operator>(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
  -> INLINE: (4611,43) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> INLINE: (4611,44) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (4626,24) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
  -> (4628,27) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (4628,29) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
  -> (4629,29) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> INLINE: (4637,36) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (4637,44) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
  -> INLINE: (4637,61) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (4638,29) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
  -> (4638,38) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> (4643,17) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (4643,17) FlowModelSingleSpecies::getCellDataOfDensity(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (4647,17) FlowModelSingleSpecies::computeCellDataOfPressureWithInternalEnergy(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (4652,17) FlowModelSingleSpecies::computeCellDataOfTemperatureWithPressure(FlowModelSingleSpecies *, const SAMRAI::hier::Box &)
  -> (4661,61) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (4661,61) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (4661,61) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<SAMRAI::pdat::CellData<Real>>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4664,61) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (4664,61) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (4664,61) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<SAMRAI::pdat::CellData<Real>>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4667,61) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (4667,61) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (4667,61) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<SAMRAI::pdat::CellData<Real>>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4670,61) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (4670,61) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (4670,61) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<SAMRAI::pdat::CellData<Real>>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, SAMRAI::pdat::CellData<Real> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4674,49) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4674,51) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4675,39) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4675,41) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4676,63) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4676,65) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4677,47) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4677,49) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4678,46) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4678,48) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4679,52) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (4679,54) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (4682,38) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (4682,38) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> INLINE: (4683,35) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4683,81) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (4684,73) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (4684,73) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (4686,39) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4686,69) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (4690,38) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (4690,38) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (4691,54) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
  -> INLINE: (4692,74) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (4693,92) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (4693,92) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (4695,58) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4696,60) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (4700,38) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (4700,38) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (4701,53) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
  -> INLINE: (4702,73) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (4703,91) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (4703,91) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (4705,57) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4706,59) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (4710,38) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (4710,38) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (4711,59) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
  -> INLINE: (4712,79) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (4713,97) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (4713,97) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (4715,63) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4716,65) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (4720,45) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4720,45)  EXPR_CONV.SI64.P64(*((SI64*) (__$U584_V$1f60.0.1593->__vptr_V$135 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4720,67) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4726,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U585_V$1f61.0.1593->__vptr_V$12b + EXPR_CONV.SI32.I64(39(SI32)) * 8(I64))))
  -> INLINE: (4729,55) std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfShearViscosityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4729,55)  EXPR_CONV.SI64.P64(*((SI64*) (__$U586_V$1f62.0.1593->__vptr_V$255 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4729,86) std::__shared_ptr<EquationOfShearViscosity, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfShearViscosity, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4735,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U587_V$1f63.0.1593->__vptr_V$250 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (4738,54) std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfBulkViscosityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4738,54)  EXPR_CONV.SI64.P64(*((SI64*) (__$U588_V$1f64.0.1593->__vptr_V$27a + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4738,84) std::__shared_ptr<EquationOfBulkViscosity, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfBulkViscosity, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4744,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U589_V$1f65.0.1593->__vptr_V$276 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (4747,60) std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfThermalConductivityMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4747,60)  EXPR_CONV.SI64.P64(*((SI64*) (__$U58a_V$1f66.0.1593->__vptr_V$2a0 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (4747,96) std::__shared_ptr<EquationOfThermalConductivity, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfThermalConductivity, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (4753,21)  EXPR_CONV.SI64.P64(*((SI64*) (__$U58b_V$1f67.0.1593->__vptr_V$29b + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (4755,23) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4761,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4762,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4764,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4765,92) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4774,50) std::max<double>(const double &, const double &)
  -> INLINE: (4777,50) std::max<double>(const double &, const double &)
  -> INLINE: (4781,28) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4787,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4788,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4789,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4790,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4792,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4793,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4794,61) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4796,92) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4797,92) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4798,99) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4812,54) std::max<double>(const double &, const double &)
  -> INLINE: (4815,54) std::max<double>(const double &, const double &)
  -> INLINE: (4820,28) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (4826,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4827,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4828,50) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4829,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4830,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4831,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4833,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4834,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4835,54) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4836,61) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4837,61) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4839,92) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4840,92) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4841,92) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4842,99) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4843,99) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (4862,58) std::max<double>(const double &, const double &)
  -> INLINE: (4865,58) std::max<double>(const double &, const double &)
  -> INLINE: (4873,9) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4873,9) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4873,9) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4873,9) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4873,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4873,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4873,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4873,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4873,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4877,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4877,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4877,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4877,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4877,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4877,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4877,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (4877,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (4877,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4877,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4877,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (4877,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (4877,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (4877,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (4877,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (4877,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4684,73)
   remark #15523: loop was not vectorized: loop control variable ti was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4693,92)
   remark #15523: loop was not vectorized: loop control variable ti was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4703,91)
   remark #15523: loop was not vectorized: loop control variable ti was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4713,97)
   remark #15523: loop was not vectorized: loop control variable ti was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4768,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between D_max[idx_max_diffusivity] (4774:21) and kappa[idx_max_diffusivity] (4777:21)
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4800,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between D_max[idx_max_diffusivity] (4812:25) and D_max[idx_max_diffusivity] (4815:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4803,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between D_max[idx_max_diffusivity] (4812:25) and kappa[idx_max_diffusivity] (4815:25)
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4845,17)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between D_max[idx_max_diffusivity] (4862:29) and D_max[idx_max_diffusivity] (4865:29)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4847,21)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between D_max[idx_max_diffusivity] (4862:29) and D_max[idx_max_diffusivity] (4865:29)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4850,25)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between D_max[idx_max_diffusivity] (4862:29) and kappa[idx_max_diffusivity] (4865:29)
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(4598,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies57computeCellDataOfMaxDiffusivityWithPressureAndTemperatureERKN6SAMRAI4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:4598

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm8]
        
    Routine temporaries
        Total         :    1284
            Global    :     311
            Local     :     973
        Regenerable   :     391
        Spilled       :      39
        
    Routine stack
        Variables     :    1310 bytes*
            Reads     :      92 [1.57e+01 ~ 5.1%]
            Writes    :     153 [5.60e+01 ~ 18.2%]
        Spills        :     264 bytes*
            Reads     :      62 [1.45e+00 ~ 0.5%]
            Writes    :      42 [6.47e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::_M_emplace_back_aux<std::remove_reference<std::vector<const Real *, std::allocator<const Real *>>::value_type &>::type>(std::vector<const Real *, std::allocator<const Real *>> *, std::remove_reference<std::vector<const Real *, std::allocator<const Real *>>::value_type &>::type &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(401,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EE19_M_emplace_back_auxIIS1_EEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:401

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      33
            Global    :      16
            Local     :      17
        Regenerable   :       2
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/vector.tcc(67,5):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EE7reserveEm] /usr/include/c++/4.8.5/bits/vector.tcc:67

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      34
            Global    :      18
            Local     :      16
        Regenerable   :       3
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<const Real *, std::allocator<const Real *>>::~_Vector_base(std::_Vector_base<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIPKdSaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIPKdSaIS1_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::getCellData(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *, const std::string &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::getCellData(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *, const std::string &)) [202] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1419,1)
  -> INLINE: (1423,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1423,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1423,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1423,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1423,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1423,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1423,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1423,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1423,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1423,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1423,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1423,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1423,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1423,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1423,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1429,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (1429,46) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1431,22) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1433,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1433,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1433,21) FlowModelSingleSpecies::getCellDataOfDensity(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> INLINE: (1435,27) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1437,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1437,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1437,21) FlowModelSingleSpecies::getCellDataOfMomentum(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> INLINE: (1439,27) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1441,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1441,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1441,21) FlowModelSingleSpecies::getCellDataOfTotalEnergy(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> INLINE: (1443,27) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1447,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1447,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1447,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1447,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1447,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1447,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1447,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1447,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1447,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1447,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1447,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1447,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1447,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1447,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1447,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1452,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1454,27) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1458,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1458,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1458,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1458,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1458,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1458,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1458,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1458,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1458,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1458,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1458,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1458,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1458,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1458,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1458,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1463,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1465,27) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1469,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1469,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1469,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1469,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1469,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1469,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1469,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1469,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1469,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1469,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1469,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1469,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1469,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1469,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1469,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1474,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1476,27) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1480,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1480,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1480,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1480,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1480,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1480,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1480,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1480,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1480,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1480,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1480,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1480,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1480,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1480,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1480,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1485,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1487,27) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1491,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1491,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1491,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1491,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1491,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1491,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1491,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1491,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1491,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1491,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1491,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1491,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1491,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1491,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1491,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1496,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1498,27) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1502,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1502,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1502,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1502,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1502,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1502,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1502,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1502,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1502,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1502,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1502,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1502,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1502,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1502,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1502,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1507,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1509,27) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1513,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1513,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1513,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1513,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1513,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1513,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1513,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1513,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1513,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1513,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1513,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1513,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1513,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1513,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1513,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1518,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1520,27) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1524,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1524,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1524,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1524,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1524,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1524,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1524,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1524,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1524,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1524,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1524,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1524,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1524,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1524,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1524,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1529,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1531,27) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1535,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1535,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1535,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1535,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1535,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1535,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1535,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1535,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1535,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1535,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1535,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1535,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1535,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1535,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1535,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1540,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1542,27) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1546,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1546,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1546,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1546,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1546,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1546,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1546,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1546,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1546,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1546,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1546,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1546,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1546,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1546,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1546,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1551,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1553,27) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1557,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1557,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1557,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1557,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1557,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1557,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1557,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1557,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1557,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1557,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1557,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1557,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1557,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1557,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1557,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1562,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1564,27) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1568,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1568,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1568,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1568,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1568,13) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1568,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1568,13) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1568,13) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1568,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1568,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1568,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1568,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1568,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1568,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1568,13) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1573,19) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::pdat::CellData<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1577,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1577,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1577,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1577,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1577,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1577,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1577,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1577,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1577,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1577,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1577,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1577,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1577,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1577,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1577,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1577,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1577,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Offload optimizations [offload]

OpenMP Construct at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1419,1)
remark #16219: Some OpenMP processing was skipped to constrain compile time. Consider overriding limits (-qoverride-limits).

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1419,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies11getCellDataERKSs] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:1419

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :    3960
            Global    :     933
            Local     :    3027
        Regenerable   :    1568
        Spilled       :       6
        
    Routine stack
        Variables     :    5762 bytes*
            Reads     :     329 [7.54e+00 ~ 5.1%]
            Writes    :     715 [2.18e+01 ~ 14.7%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_string<char, std::char_traits<char>, std::allocator<char>>::_S_construct<char *>(char *, char *, const std::allocator<char> &, std::forward_iterator_tag)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/basic_string.tcc(126,7):remark #34051: REGISTER ALLOCATION : [_ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag] /usr/include/c++/4.8.5/bits/basic_string.tcc:126

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      13
            Local     :      17
        Regenerable   :       7
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::char_traits<char>::length(const std::char_traits<char>::char_type *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(259,7):remark #34051: REGISTER ALLOCATION : [_ZNSt11char_traitsIcE6lengthEPKc] /usr/include/c++/4.8.5/bits/char_traits.h:259

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       7
            Local     :       5
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator=(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> &&)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(859,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12__shared_ptrIN6SAMRAI4pdat8CellDataIdEELN9__gnu_cxx12_Lock_policyE2EEaSEOS6_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:859

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      30
            Global    :      15
            Local     :      15
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 4.7%]
            Writes    :       4 [3.35e+00 ~ 7.9%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf(std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/iosfwd(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEED1Ev] /usr/include/c++/4.8.5/iosfwd:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word *, int)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/ext/atomicity.h(79,3):remark #34051: REGISTER ALLOCATION : [_ZN17_INTERNAL9e24af839__gnu_cxx27__exchange_and_add_dispatchEPii] /usr/include/c++/4.8.5/ext/atomicity.h:79

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      16
            Global    :       8
            Local     :       8
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__shared_count<__gnu_cxx::_S_atomic>::operator=(std::__shared_count<__gnu_cxx::_S_atomic> *, const std::__shared_count<__gnu_cxx::_S_atomic> &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(558,7):remark #34051: REGISTER ALLOCATION : [_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:558

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rbp rsi rdi r12-r13]
        
    Routine temporaries
        Total         :      29
            Global    :      15
            Local     :      14
        Regenerable   :       5
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::getCellData(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, FlowModelSingleSpecies *, const std::vector<std::string, std::allocator<std::string>> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::getCellData(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, FlowModelSingleSpecies *, const std::vector<std::string, std::allocator<std::string>> &)) [217] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1594,1)
  -> DELETED: (1595,69) std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>::~allocator(std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>> *)
  -> (1596,40) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)
  -> DELETED: (1596,40) std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>::~allocator(std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>> *)
  -> INLINE: (1596,40) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type, const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::allocator_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1596,40) std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>::allocator(std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1596,40) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (1598,53) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (1598,53) std::vector<std::string, std::allocator<std::string>>::size(const std::vector<std::string, std::allocator<std::string>> *) const
  -> INLINE: (1600,18) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::operator[](std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
  -> INLINE: (1600,23) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::operator=(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1600,23) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1600,50) std::vector<std::string, std::allocator<std::string>>::operator[](const std::vector<std::string, std::allocator<std::string>> *, std::vector<std::string, std::allocator<std::string>>::size_type) const
  -> INDIRECT- (VIRTUAL): (1600,50)  FlowModelSingleSpecies::getCellData(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *, const std::string &) (1572)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(494,8) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1596,40)
   remark #15527: loop was not vectorized: function call to ?1memset cannot be vectorized   [ /usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17) ]
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1598,53)
   remark #15523: loop was not vectorized: loop control variable vi was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1594,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies11getCellDataERKSt6vectorISsSaISsEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:1594

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      86
            Global    :      29
            Local     :      57
        Regenerable   :      10
        Spilled       :       7
        
    Routine stack
        Variables     :      40 bytes*
            Reads     :       7 [2.66e+01 ~ 7.7%]
            Writes    :       8 [3.20e+01 ~ 9.2%]
        Spills        :      16 bytes*
            Reads     :       3 [5.76e+00 ~ 1.7%]
            Writes    :       2 [1.39e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::~_Vector_base(std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEESaIS5_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/stl_vector.h(416,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEESaIS5_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      25
            Global    :      13
            Local     :      12
        Regenerable   :       3
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [4.93e+00 ~ 4.5%]
            Writes    :       5 [4.93e+00 ~ 4.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::getSpeciesCellData(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, FlowModelSingleSpecies *, const std::string &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::getSpeciesCellData(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, FlowModelSingleSpecies *, const std::string &)) [223] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1613,1)
  -> INLINE: (1614,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1614,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1614,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1614,5) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1614,5) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1614,5) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1614,5) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1614,5) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1614,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1614,5) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1614,5) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1614,5) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1614,5) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> INLINE: (1614,5) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1618,60) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1613,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies18getSpeciesCellDataERKSs] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:1613

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     298
            Global    :      74
            Local     :     224
        Regenerable   :     117
        Spilled       :       6
        
    Routine stack
        Variables     :     421 bytes*
            Reads     :      24 [6.84e+00 ~ 5.3%]
            Writes    :      51 [2.33e+01 ~ 18.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEESaIS5_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::fillCellDataOfConservativeVariablesWithZero(FlowModelSingleSpecies *, const std::shared_ptr<SAMRAI::pdat::CellData<int>> &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::fillCellDataOfConservativeVariablesWithZero(FlowModelSingleSpecies *, const std::shared_ptr<SAMRAI::pdat::CellData<int>> &, int)) [225] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1631,1)
  -> INLINE: (1635,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1635,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1635,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1635,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1635,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1635,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1635,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1635,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1635,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1635,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1635,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1635,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1635,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1635,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1635,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1651,24) std::operator!=<SAMRAI::pdat::CellData<int>>(const std::shared_ptr<SAMRAI::pdat::CellData<int>> &, std::nullptr_t)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1658,30) std::__shared_ptr<SAMRAI::pdat::CellData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1658,32) SAMRAI::pdat::CellData<int>::getPointer(SAMRAI::pdat::CellData<int> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<int>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1660,25) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1660,41) std::__shared_ptr<SAMRAI::pdat::CellData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1660,43) SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1661,29) SAMRAI::hier::IntVector::operator=(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(189,16) std::vector<int, std::allocator<int>>::operator=(std::vector<int, std::allocator<int>> *, const std::vector<int, std::allocator<int>> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1661,45) std::__shared_ptr<SAMRAI::pdat::CellData<int>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<int>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1661,47) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (1661,61) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(637,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(638,17) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(638,36) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(640,32) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(284,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)
        -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (267,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(640,39) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(253,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)
        -> INLINE: (239,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (239,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> (1664,61) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (1664,61) FlowModelSingleSpecies::getCellDataOfDensity(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (1665,62) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (1665,62) FlowModelSingleSpecies::getCellDataOfMomentum(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> (1666,66) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (1666,66) FlowModelSingleSpecies::getCellDataOfTotalEnergy(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> INLINE: (1669,29) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1669,31) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1670,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1670,36) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1672,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1672,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1672,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1672,15) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1675,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1675,38) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1679,51) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1681,46) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1685,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1716,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1719,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1719,38) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1720,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1720,38) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1724,51) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1725,51) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1727,46) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1728,46) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1729,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1733,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1734,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1735,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1778,20) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (1781,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1781,38) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1782,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1782,38) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1783,36) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1783,38) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (1787,51) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1788,51) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1789,51) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1791,46) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1792,46) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1793,46) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1794,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1795,53) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1799,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1800,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1801,58) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1802,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (1803,65) SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(256,22) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1661,61)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(267,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1661,61)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(239,42) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1661,61)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1688,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho[idx] (1696:21) and E[idx] (1698:21)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1688,13)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1705,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho[idx] (1710:17) and E[idx] (1712:17)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1705,13)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1737,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho[idx] (1751:25) and E[idx] (1754:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1740,17)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between rho[idx] (1751:25) and E[idx] (1754:25)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1740,17)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1761,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho[idx] (1770:21) and E[idx] (1773:21)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1764,17)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between rho[idx] (1770:21) and E[idx] (1773:21)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1764,17)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1805,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho[idx] (1823:29) and E[idx] (1827:29)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1807,17)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between rho[idx] (1823:29) and E[idx] (1827:29)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1810,21)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between rho[idx] (1823:29) and E[idx] (1827:29)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1810,21)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1835,13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between rho[idx] (1847:25) and E[idx] (1851:25)

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1837,17)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between rho[idx] (1847:25) and E[idx] (1851:25)

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1840,21)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between rho[idx] (1847:25) and E[idx] (1851:25)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1840,21)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1631,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies43fillCellDataOfConservativeVariablesWithZeroERKSt10shared_ptrIN6SAMRAI4pdat8CellDataIiEEEi] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:1631

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     758
            Global    :     222
            Local     :     536
        Regenerable   :     197
        Spilled       :      38
        
    Routine stack
        Variables     :     673 bytes*
            Reads     :      74 [1.99e+01 ~ 3.0%]
            Writes    :      80 [2.82e+01 ~ 4.3%]
        Spills        :     256 bytes*
            Reads     :      53 [1.38e+01 ~ 2.1%]
            Writes    :      45 [8.93e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::updateCellDataOfConservativeVariables(FlowModelSingleSpecies *, const std::shared_ptr<SAMRAI::pdat::CellData<int>> &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::updateCellDataOfConservativeVariables(FlowModelSingleSpecies *, const std::shared_ptr<SAMRAI::pdat::CellData<int>> &, int)) [226] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1868,1)
  -> INLINE: (1875,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1875,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1875,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1875,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1875,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1875,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1875,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1875,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1875,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1875,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1875,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1875,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1875,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1875,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1875,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1868,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies37updateCellDataOfConservativeVariablesERKSt10shared_ptrIN6SAMRAI4pdat8CellDataIiEEEi] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:1868

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     301
            Global    :      75
            Local     :     226
        Regenerable   :     119
        Spilled       :       6
        
    Routine stack
        Variables     :     421 bytes*
            Reads     :      24 [5.19e+00 ~ 4.8%]
            Writes    :      51 [1.77e+01 ~ 16.4%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::getCellDataOfConservativeVariables(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, FlowModelSingleSpecies *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::getCellDataOfConservativeVariables(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, FlowModelSingleSpecies *)) [227] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1888,1)
  -> INLINE: (1892,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1892,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1892,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1892,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1892,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1892,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1892,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1892,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1892,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1892,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1892,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1892,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1892,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1892,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1892,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1898,60) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)
  -> (1898,60) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)
  -> INLINE: (1899,15) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::reserve(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1901,15) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1901,15) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::push_back(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1901,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (1901,25) FlowModelSingleSpecies::getCellDataOfDensity(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> INLINE: (1902,15) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1902,15) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::push_back(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1902,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (1902,25) FlowModelSingleSpecies::getCellDataOfMomentum(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> INLINE: (1903,15) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1903,15) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::push_back(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1903,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (1903,25) FlowModelSingleSpecies::getCellDataOfTotalEnergy(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1899,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1899,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1901,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1901,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1902,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1902,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1888,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies34getCellDataOfConservativeVariablesEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:1888

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     503
            Global    :     127
            Local     :     376
        Regenerable   :     153
        Spilled       :      13
        
    Routine stack
        Variables     :     437 bytes*
            Reads     :      38 [1.16e+01 ~ 2.6%]
            Writes    :      65 [2.64e+01 ~ 5.9%]
        Spills        :      56 bytes*
            Reads     :      11 [4.52e+00 ~ 1.0%]
            Writes    :      11 [4.52e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::allocator_traits<std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::_S_destroy<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>(std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>> &, std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/alloc_traits.h(281,2):remark #34051: REGISTER ALLOCATION : [_ZNSt16allocator_traitsISaISt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEEEE10_S_destroyIS5_EENSt9enable_ifIXsrNS7_16__destroy_helperIT_EE5valueEvE4typeERS6_PSB_] /usr/include/c++/4.8.5/bits/alloc_traits.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      25
            Global    :      12
            Local     :      13
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::_M_deallocate(std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEESaIS5_EE13_M_deallocateEPS5_m] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy_aux<false>::__destroy<std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::pointer>(std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::pointer, std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::pointer)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_construct.h(101,2):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Destroy_auxILb0EE9__destroyIPSt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEEEEvT_S9_] /usr/include/c++/4.8.5/bits/stl_construct.h:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 4.0%]
            Writes    :       4 [3.94e+00 ~ 4.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::_M_get_Tp_allocator(std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseISt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEESaIS5_EE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size(const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *) const

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(646,7):remark #34051: REGISTER ALLOCATION : [_ZNKSt6vectorISt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEESaIS5_EE4sizeEv] /usr/include/c++/4.8.5/bits/stl_vector.h:646

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       0
            Local     :      12
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::_M_emplace_back_aux<std::move_iterator<std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::pointer>::value_type>(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::move_iterator<std::_Vector_base<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::pointer>::value_type &&)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(414,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(429,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(401,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEESaIS5_EE19_M_emplace_back_auxIIS5_EEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:401

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      49
            Global    :      23
            Local     :      26
        Regenerable   :       5
        Spilled       :       8
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 1.9%]
            Writes    :       4 [3.94e+00 ~ 1.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::getCellDataOfPrimitiveVariables(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, FlowModelSingleSpecies *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::getCellDataOfPrimitiveVariables(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, FlowModelSingleSpecies *)) [236] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1914,1)
  -> INLINE: (1918,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1918,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1918,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1918,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1918,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1918,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1918,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1918,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1918,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1918,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1918,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1918,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1918,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1918,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1918,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1924,60) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::~vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)
  -> (1924,60) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::vector(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *)
  -> INLINE: (1925,15) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::reserve(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::size_type)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1927,15) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1927,15) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::push_back(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1927,25) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> (1927,25) FlowModelSingleSpecies::getCellDataOfDensity(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, FlowModelSingleSpecies *)
  -> INLINE: (1928,10) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1930,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1930,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1930,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1930,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1930,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1930,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1930,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1930,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1930,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1930,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1930,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1930,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1930,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1930,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1930,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1935,15) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::push_back(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1936,10) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1938,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1938,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1938,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1938,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1938,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1938,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1938,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1938,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1938,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1938,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1938,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1938,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1938,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1938,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1938,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1943,15) std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::push_back(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::value_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1925,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1925,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1927,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1927,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1914,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies31getCellDataOfPrimitiveVariablesEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:1914

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     999
            Global    :     232
            Local     :     767
        Regenerable   :     377
        Spilled       :      16
        
    Routine stack
        Variables     :    1247 bytes*
            Reads     :      72 [2.12e+01 ~ 4.1%]
            Writes    :     159 [8.04e+01 ~ 15.8%]
        Spills        :      80 bytes*
            Reads     :      12 [2.65e+00 ~ 0.5%]
            Writes    :      12 [2.65e+00 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::_M_emplace_back_aux<const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::value_type &>(std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>> *, const std::vector<std::shared_ptr<SAMRAI::pdat::CellData<Real>>, std::allocator<std::shared_ptr<SAMRAI::pdat::CellData<Real>>>>::value_type &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_uninitialized.h(74,23) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(414,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between __cur->_M_ptr (790:16) and __first.__first->_M_ptr (793:2)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_construct.h(102,4) inlined into /usr/include/c++/4.8.5/bits/vector.tcc(429,2)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __first->_M_refcount->_M_pi (545:2) and *__mem (68:6)
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/vector.tcc(401,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorISt10shared_ptrIN6SAMRAI4pdat8CellDataIdEEESaIS5_EE19_M_emplace_back_auxIIRKS5_EEEvDpOT_] /usr/include/c++/4.8.5/bits/vector.tcc:401

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rbp rsi rdi r12-r15]
        
    Routine temporaries
        Total         :      51
            Global    :      23
            Local     :      28
        Regenerable   :       7
        Spilled       :       8
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.94e+00 ~ 1.9%]
            Writes    :       4 [3.94e+00 ~ 1.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::packDerivedDataIntoDoubleBuffer(const FlowModelSingleSpecies *, double *, const SAMRAI::hier::Patch &, const SAMRAI::hier::Box &, const std::string &, int, double) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::packDerivedDataIntoDoubleBuffer(const FlowModelSingleSpecies *, double *, const SAMRAI::hier::Patch &, const SAMRAI::hier::Box &, const std::string &, int, double) const) [238] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1961,1)
  -> INLINE: (1962,10) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (1964,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1964,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1964,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1964,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1964,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1964,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (1964,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1964,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1964,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (1964,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (1964,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1964,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1964,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (1964,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (1964,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1964,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1980,48) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (1982,23) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1984,50) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1984,50) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1985,13) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (1985,13) std::static_pointer_cast<SAMRAI::pdat::CellData<Real>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1986,23) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
  -> (1986,36) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (1986,36) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1988,50) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1988,50) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1989,13) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (1989,13) std::static_pointer_cast<SAMRAI::pdat::CellData<Real>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1990,23) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
  -> (1990,36) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (1990,36) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1992,50) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (1992,50) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1993,13) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (1993,13) std::static_pointer_cast<SAMRAI::pdat::CellData<Real>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (1994,23) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
  -> (1994,36) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (1994,36) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2006,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2006,50) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (2007,52) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2010,47) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2010,49) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2011,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2011,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2012,41) SAMRAI::tbox::Dimension::operator>(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2012,77) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2012,79) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2013,41) SAMRAI::tbox::Dimension::operator>(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2013,77) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2013,79) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2014,52) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2014,54) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (2016,39) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
  -> INLINE: (2016,53) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (2019,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (2019,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (2020,31) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
  -> INLINE: (2020,77) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (2021,69) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (2021,69) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (2023,35) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2023,65) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (2026,19) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2028,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2028,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INDIRECT- (VIRTUAL): (2037,77)  EXPR_CONV.SI64.P64(*((SI64*) (__$U451_V$1bb5.0.1579->__vptr_V$135 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (2037,77) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2037,99) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2041,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U452_V$1bb6.0.1579->__vptr_V$12b + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (2044,24) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2046,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2046,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2048,48) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2048,48) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2052,36) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2055,38) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2060,81) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2060,81)  EXPR_CONV.SI64.P64(*((SI64*) (__$U455_V$1bbe.0.1579->__vptr_V$135 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (2060,103) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2064,29)  EXPR_CONV.SI64.P64(*((SI64*) (__$U456_V$1bbf.0.1579->__vptr_V$12b + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (2068,24) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2070,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2070,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2072,48) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2072,48) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2074,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2074,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2078,40) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2079,40) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2079,53) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2082,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2083,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2083,57) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2089,85) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2089,85)  EXPR_CONV.SI64.P64(*((SI64*) (__$U459_V$1bc8.0.1579->__vptr_V$135 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (2089,107) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2093,33)  EXPR_CONV.SI64.P64(*((SI64*) (__$U45a_V$1bc9.0.1579->__vptr_V$12b + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (2100,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2100,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2100,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2100,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2101,28) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2103,50) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2103,50) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2104,13) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (2104,13) std::static_pointer_cast<SAMRAI::pdat::CellData<Real>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2105,23) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
  -> (2105,36) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (2105,36) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2107,50) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2107,50) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2108,13) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (2108,13) std::static_pointer_cast<SAMRAI::pdat::CellData<Real>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2109,23) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
  -> (2109,36) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (2109,36) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2111,50) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2111,50) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2112,13) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (2112,13) std::static_pointer_cast<SAMRAI::pdat::CellData<Real>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2113,23) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
  -> (2113,36) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (2113,36) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2125,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2125,50) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (2126,52) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2129,47) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2129,49) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2130,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2130,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2131,41) SAMRAI::tbox::Dimension::operator>(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2131,77) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2131,79) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2132,41) SAMRAI::tbox::Dimension::operator>(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2132,77) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2132,79) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2133,52) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2133,54) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (2135,39) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
  -> INLINE: (2135,53) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> (2138,34) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (2138,34) std::vector<const Real *, std::allocator<const Real *>>::vector(std::vector<const Real *, std::allocator<const Real *>> *)
  -> (2139,31) std::vector<const Real *, std::allocator<const Real *>>::reserve(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::size_type)
  -> INLINE: (2139,77) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (2140,69) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (2140,69) std::vector<double, std::allocator<double>>::size(const std::vector<double, std::allocator<double>> *) const
  -> INLINE: (2142,35) std::vector<const Real *, std::allocator<const Real *>>::push_back(std::vector<const Real *, std::allocator<const Real *>> *, std::vector<const Real *, std::allocator<const Real *>>::value_type &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2142,65) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (2145,19) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2147,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2147,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INDIRECT- (VIRTUAL): (2156,64)  EXPR_CONV.SI64.P64(*((SI64*) (__$U466_V$1be6.0.1579->__vptr_V$135 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (2156,64) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2156,86) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2160,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U467_V$1be7.0.1579->__vptr_V$12b + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (2162,77) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2162,77)  EXPR_CONV.SI64.P64(*((SI64*) (__$U468_V$1be8.0.1579->__vptr_V$135 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (2162,99) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2166,25)  EXPR_CONV.SI64.P64(*((SI64*) (__$U469_V$1be9.0.1579->__vptr_V$12b + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (2169,24) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2171,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2171,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2173,48) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2173,48) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2177,36) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2180,38) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2185,68) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2185,68)  EXPR_CONV.SI64.P64(*((SI64*) (__$U46c_V$1bf2.0.1579->__vptr_V$135 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (2185,90) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2189,29)  EXPR_CONV.SI64.P64(*((SI64*) (__$U46d_V$1bf3.0.1579->__vptr_V$12b + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (2191,81) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2191,81)  EXPR_CONV.SI64.P64(*((SI64*) (__$U46e_V$1bf4.0.1579->__vptr_V$135 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (2191,103) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2195,29)  EXPR_CONV.SI64.P64(*((SI64*) (__$U46f_V$1bf5.0.1579->__vptr_V$12b + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (2199,24) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2201,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2201,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2203,48) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2203,48) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2205,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2205,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2209,40) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2210,40) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2210,53) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2213,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2214,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2214,57) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2220,72) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2220,72)  EXPR_CONV.SI64.P64(*((SI64*) (__$U472_V$1bff.0.1579->__vptr_V$135 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (2220,94) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2224,33)  EXPR_CONV.SI64.P64(*((SI64*) (__$U473_V$1c00.0.1579->__vptr_V$12b + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (2226,85) std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfStateMixingRules, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2226,85)  EXPR_CONV.SI64.P64(*((SI64*) (__$U474_V$1c01.0.1579->__vptr_V$135 + EXPR_CONV.SI32.I64(2(SI32)) * 8(I64))))
  -> INLINE: (2226,107) std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<EquationOfState, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (2230,33)  EXPR_CONV.SI64.P64(*((SI64*) (__$U475_V$1c02.0.1579->__vptr_V$12b + EXPR_CONV.SI32.I64(8(SI32)) * 8(I64))))
  -> INLINE: (2237,5) std::vector<const Real *, std::allocator<const Real *>>::~vector(std::vector<const Real *, std::allocator<const Real *>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2237,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2237,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2237,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2238,28) std::operator==<char, std::char_traits<char>, std::allocator<char>>(const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &, const char *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2240,50) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2240,50) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2241,13) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (2241,13) std::static_pointer_cast<SAMRAI::pdat::CellData<Real>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2242,23) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
  -> (2242,36) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (2242,36) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2244,50) std::shared_ptr<SAMRAI::hier::PatchData>::~shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2244,50) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2245,13) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
  -> INLINE: (2245,13) std::static_pointer_cast<SAMRAI::pdat::CellData<Real>, SAMRAI::hier::PatchData>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2246,23) SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const
  -> (2246,36) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (2246,36) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2256,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2256,50) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> (2257,52) SAMRAI::hier::Box::numberCells(SAMRAI::hier::IntVector *, const SAMRAI::hier::Box *) const
  -> INLINE: (2260,47) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2260,49) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (2261,48) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2261,50) SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(128,19) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> (2263,39) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
  -> INLINE: (2263,53) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (2265,19) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2267,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2267,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2276,24) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2278,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2278,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2280,48) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2280,48) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2284,36) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2287,38) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2293,24) SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const
  -> INLINE: (2295,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2295,44) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2297,48) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2297,48) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2299,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2299,52) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2303,40) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2304,40) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2304,53) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2307,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2308,42) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2308,57) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (2317,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2317,5) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2320,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2320,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2320,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2320,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2320,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2320,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2320,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2320,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2320,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2320,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2320,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2320,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2320,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2320,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2320,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2320,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2320,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2320,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2021,69)
   remark #15523: loop was not vectorized: loop control variable ti was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2028,44)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2046,44)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2048,48)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2070,44)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2072,48)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2074,52)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2140,69)
   remark #15523: loop was not vectorized: loop control variable ti was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2147,44)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2171,44)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2173,48)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2201,44)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2203,48)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2205,52)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2267,44)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2278,44)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2280,48)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2295,44)
   remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2297,48)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2299,52)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         remark #25478: While Loop Unrolled by 4  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/basic_string.h(1725,18):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(1961,1):remark #34051: REGISTER ALLOCATION : [_ZNK22FlowModelSingleSpecies31packDerivedDataIntoDoubleBufferEPdRKN6SAMRAI4hier5PatchERKNS2_3BoxERKSsid] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:1961

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   27[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm11]
        
    Routine temporaries
        Total         :    1644
            Global    :     344
            Local     :    1300
        Regenerable   :     485
        Spilled       :      26
        
    Routine stack
        Variables     :    1801 bytes*
            Reads     :     154 [5.38e+01 ~ 5.7%]
            Writes    :     180 [6.55e+01 ~ 7.0%]
        Spills        :     160 bytes*
            Reads     :      45 [6.57e+01 ~ 7.0%]
            Writes    :      30 [1.07e+01 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4hier8VariableEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Patch::getPatchData(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::hier::Patch *, const std::shared_ptr<SAMRAI::hier::Variable> &, const std::shared_ptr<SAMRAI::hier::VariableContext> &) const) [240] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h(185,4)
  -> INDIRECT- (VIRTUAL): (188,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U135_V$1222.0.1191->__vptr_V$1224 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
  -> INLINE: (190,26) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr(std::shared_ptr<SAMRAI::hier::PatchData> *, const std::shared_ptr<SAMRAI::hier::PatchData> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (190,26) std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::operator[](const std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>> *, std::vector<std::shared_ptr<SAMRAI::hier::PatchData>, std::allocator<std::shared_ptr<SAMRAI::hier::PatchData>>>::size_type) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h(185,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier5Patch12getPatchDataERKSt10shared_ptrINS0_8VariableEERKS2_INS0_15VariableContextEE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h:185

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rbp rsi rdi r12 r15]
        
    Routine temporaries
        Total         :      30
            Global    :      16
            Local     :      14
        Regenerable   :       2
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const) [241] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(679,4)
  -> INLINE: (681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(679,4):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4hier3Box6offsetERKNS0_5IndexE] /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:679

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r11 r14-r15]
        
    Routine temporaries
        Total         :      59
            Global    :      16
            Local     :      43
        Regenerable   :       0
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      32 bytes*
            Reads     :       4 [3.60e+00 ~ 2.8%]
            Writes    :       4 [3.60e+00 ~ 2.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::registerPlotQuantities(FlowModelSingleSpecies *, const std::shared_ptr<ExtendedVisItDataWriter> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::registerPlotQuantities(FlowModelSingleSpecies *, const std::shared_ptr<ExtendedVisItDataWriter> &)) [242] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2340,1)
  -> INLINE: (2341,10) std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::hier::VariableContext, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (2343,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2343,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2343,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2343,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2343,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2343,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (2343,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2343,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2343,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (2343,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (2343,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2343,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2343,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2343,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2343,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2343,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2352,17) std::__shared_ptr<ExtendedVisItDataWriter, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<ExtendedVisItDataWriter, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (2352,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2352,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2352,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2352,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2352,19) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2352,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2352,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2353,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2353,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2353,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2354,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2354,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2354,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2356,12) std::shared_ptr<SAMRAI::hier::Variable>::shared_ptr<SAMRAI::pdat::CellVariable<Real>, void>(std::shared_ptr<SAMRAI::hier::Variable> *, const std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (2356,12) std::shared_ptr<SAMRAI::hier::Variable>::~shared_ptr(std::shared_ptr<SAMRAI::hier::Variable> *)
  -> INLINE: (2357,12) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2357,12) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2357,12) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (2357,12)  EXPR_CONV.SI64.P64(*((SI64*) (__$U488_V$1c32.0.1580->__vptr_V$1224 + EXPR_CONV.SI32.I64(15(SI32)) * 8(I64))))
  -> INLINE: (2375,17) std::__shared_ptr<ExtendedVisItDataWriter, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<ExtendedVisItDataWriter, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (2375,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2375,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2375,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2375,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2375,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2375,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2375,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2375,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2375,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2375,47) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2375,47) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2376,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2376,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2376,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2377,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2377,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2377,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2377,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2377,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2377,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2379,17) std::__shared_ptr<ExtendedVisItDataWriter, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<ExtendedVisItDataWriter, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (2379,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2379,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2379,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2379,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2379,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2379,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2379,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2379,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2379,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2379,47) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2379,47) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2380,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2380,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2380,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2381,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2381,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2381,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2381,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2381,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2381,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2383,17) std::__shared_ptr<ExtendedVisItDataWriter, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<ExtendedVisItDataWriter, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (2383,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2383,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2383,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2383,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2383,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2383,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2383,19) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2383,19) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2383,47) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2383,47) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2383,47) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2384,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2384,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2384,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2385,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2385,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (2385,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2385,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (2385,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (2385,9) std::allocator<char>::~allocator(std::allocator<char> *)


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(2340,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies22registerPlotQuantitiesERKSt10shared_ptrI23ExtendedVisItDataWriterE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:2340

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     825
            Global    :     232
            Local     :     593
        Regenerable   :     323
        Spilled       :       8
        
    Routine stack
        Variables     :     503 bytes*
            Reads     :      59 [2.26e+01 ~ 6.7%]
            Writes    :      73 [2.46e+01 ~ 7.2%]
        Spills        :      16 bytes*
            Reads     :       2 [1.30e-01 ~ 0.0%]
            Writes    :       2 [1.30e-01 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::~_Sp_counted_base(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::~_Sp_counted_base(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(113,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:113

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_base<__gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_base<__gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(124,7):remark #34051: REGISTER ALLOCATION : [_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:124

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::_M_get_Tp_allocator(std::_Vector_base<double, std::allocator<double>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<double, std::allocator<double>>::_M_deallocate(std::_Vector_base<double, std::allocator<double>> *, std::_Vector_base<double, std::allocator<double>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4tbox5TimerEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4pdat12CellVariableIdEEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,43):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat15CellDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat15CellDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(407,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat15CellDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:407

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(412,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat15CellDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:412

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdi r12]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(423,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat15CellDataFactoryIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:423

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      22
            Global    :      11
            Local     :      11
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,43):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8CellDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8CellDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(407,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8CellDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:407

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(412,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8CellDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:412

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdi r12]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(423,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat8CellDataIdEESaIS3_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:423

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      22
            Global    :      11
            Local     :      11
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rbx rdi]
        
    Routine temporaries
        Total         :      14
            Global    :       8
            Local     :       6
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::ArrayData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat9ArrayDataIdEELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellGeometry>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellGeometry>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,43):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat12CellGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellGeometry>::type>::type>, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr_inplace(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellGeometry>::type>::type>, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(403,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat12CellGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:403

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellGeometry>::type>::type>, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellGeometry>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(407,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat12CellGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:407

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       0
            Local     :      13
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellGeometry>::type>::type>, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellGeometry>::type>::type>, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(412,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat12CellGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:412

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdi r12]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellGeometry>::type>::type>, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellGeometry, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellGeometry>::type>::type>, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(423,7):remark #34051: REGISTER ALLOCATION : [_ZNSt23_Sp_counted_ptr_inplaceIN6SAMRAI4pdat12CellGeometryESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:423

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rcx rsi rdi]
        
    Routine temporaries
        Total         :      22
            Global    :      11
            Local     :      11
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellVariable<Real> *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<SAMRAI::pdat::CellVariable<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat12CellVariableIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellVariable<Real> *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<SAMRAI::pdat::CellVariable<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat12CellVariableIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellVariable<Real> *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<SAMRAI::pdat::CellVariable<Real> *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat12CellVariableIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellVariable<Real> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::CellVariable<Real> *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat12CellVariableIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellVariable<Real> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::CellVariable<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat12CellVariableIdEELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfStateMixingRulesManager *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<EquationOfStateMixingRulesManager *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP33EquationOfStateMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      35
            Global    :      17
            Local     :      18
        Regenerable   :       8
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfStateMixingRulesManager *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<EquationOfStateMixingRulesManager *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP33EquationOfStateMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfStateMixingRulesManager *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<EquationOfStateMixingRulesManager *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP33EquationOfStateMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfStateMixingRulesManager *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<EquationOfStateMixingRulesManager *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP33EquationOfStateMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfStateMixingRulesManager *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<EquationOfStateMixingRulesManager *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP33EquationOfStateMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfShearViscosityMixingRulesManager *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<EquationOfShearViscosityMixingRulesManager *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP42EquationOfShearViscosityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      35
            Global    :      17
            Local     :      18
        Regenerable   :       8
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfShearViscosityMixingRulesManager *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<EquationOfShearViscosityMixingRulesManager *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP42EquationOfShearViscosityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfShearViscosityMixingRulesManager *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<EquationOfShearViscosityMixingRulesManager *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP42EquationOfShearViscosityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfShearViscosityMixingRulesManager *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<EquationOfShearViscosityMixingRulesManager *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP42EquationOfShearViscosityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfShearViscosityMixingRulesManager *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<EquationOfShearViscosityMixingRulesManager *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP42EquationOfShearViscosityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfBulkViscosityMixingRulesManager *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<EquationOfBulkViscosityMixingRulesManager *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP41EquationOfBulkViscosityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      35
            Global    :      17
            Local     :      18
        Regenerable   :       8
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfBulkViscosityMixingRulesManager *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<EquationOfBulkViscosityMixingRulesManager *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP41EquationOfBulkViscosityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfBulkViscosityMixingRulesManager *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<EquationOfBulkViscosityMixingRulesManager *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP41EquationOfBulkViscosityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfBulkViscosityMixingRulesManager *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<EquationOfBulkViscosityMixingRulesManager *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP41EquationOfBulkViscosityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfBulkViscosityMixingRulesManager *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<EquationOfBulkViscosityMixingRulesManager *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP41EquationOfBulkViscosityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfThermalConductivityMixingRulesManager *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<EquationOfThermalConductivityMixingRulesManager *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP47EquationOfThermalConductivityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r12]
        
    Routine temporaries
        Total         :      35
            Global    :      17
            Local     :      18
        Regenerable   :       8
        Spilled       :       3
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfThermalConductivityMixingRulesManager *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<EquationOfThermalConductivityMixingRulesManager *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP47EquationOfThermalConductivityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfThermalConductivityMixingRulesManager *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<EquationOfThermalConductivityMixingRulesManager *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP47EquationOfThermalConductivityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfThermalConductivityMixingRulesManager *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<EquationOfThermalConductivityMixingRulesManager *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP47EquationOfThermalConductivityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<EquationOfThermalConductivityMixingRulesManager *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<EquationOfThermalConductivityMixingRulesManager *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP47EquationOfThermalConductivityMixingRulesManagerLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelRiemannSolverSingleSpecies *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<FlowModelRiemannSolverSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP35FlowModelRiemannSolverSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelRiemannSolverSingleSpecies *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<FlowModelRiemannSolverSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP35FlowModelRiemannSolverSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelRiemannSolverSingleSpecies *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<FlowModelRiemannSolverSingleSpecies *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP35FlowModelRiemannSolverSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelRiemannSolverSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelRiemannSolverSingleSpecies *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP35FlowModelRiemannSolverSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelRiemannSolverSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelRiemannSolverSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP35FlowModelRiemannSolverSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelBasicUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<FlowModelBasicUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP36FlowModelBasicUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelBasicUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<FlowModelBasicUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP36FlowModelBasicUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelBasicUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<FlowModelBasicUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP36FlowModelBasicUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelBasicUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelBasicUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP36FlowModelBasicUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelBasicUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelBasicUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP36FlowModelBasicUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelDiffusiveFluxUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<FlowModelDiffusiveFluxUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP44FlowModelDiffusiveFluxUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelDiffusiveFluxUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<FlowModelDiffusiveFluxUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP44FlowModelDiffusiveFluxUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelDiffusiveFluxUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<FlowModelDiffusiveFluxUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP44FlowModelDiffusiveFluxUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelDiffusiveFluxUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelDiffusiveFluxUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP44FlowModelDiffusiveFluxUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelDiffusiveFluxUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelDiffusiveFluxUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP44FlowModelDiffusiveFluxUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelSourceUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<FlowModelSourceUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP37FlowModelSourceUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelSourceUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<FlowModelSourceUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP37FlowModelSourceUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelSourceUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<FlowModelSourceUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP37FlowModelSourceUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelSourceUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelSourceUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP37FlowModelSourceUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelSourceUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelSourceUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP37FlowModelSourceUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelBoundaryUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<FlowModelBoundaryUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP39FlowModelBoundaryUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelBoundaryUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<FlowModelBoundaryUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP39FlowModelBoundaryUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelBoundaryUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<FlowModelBoundaryUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP39FlowModelBoundaryUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelBoundaryUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelBoundaryUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP39FlowModelBoundaryUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelBoundaryUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelBoundaryUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP39FlowModelBoundaryUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelMonitoringStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<FlowModelMonitoringStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP51FlowModelMonitoringStatisticsUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelMonitoringStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<FlowModelMonitoringStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP51FlowModelMonitoringStatisticsUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelMonitoringStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<FlowModelMonitoringStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP51FlowModelMonitoringStatisticsUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelMonitoringStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelMonitoringStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP51FlowModelMonitoringStatisticsUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelMonitoringStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelMonitoringStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP51FlowModelMonitoringStatisticsUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<FlowModelStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP41FlowModelStatisticsUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<FlowModelStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP41FlowModelStatisticsUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<FlowModelStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP41FlowModelStatisticsUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP41FlowModelStatisticsUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelStatisticsUtilitiesSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP41FlowModelStatisticsUtilitiesSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelImmersedBoundaryMethodSingleSpecies *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<FlowModelImmersedBoundaryMethodSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP44FlowModelImmersedBoundaryMethodSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelImmersedBoundaryMethodSingleSpecies *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<FlowModelImmersedBoundaryMethodSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP44FlowModelImmersedBoundaryMethodSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelImmersedBoundaryMethodSingleSpecies *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<FlowModelImmersedBoundaryMethodSingleSpecies *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP44FlowModelImmersedBoundaryMethodSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelImmersedBoundaryMethodSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelImmersedBoundaryMethodSingleSpecies *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP44FlowModelImmersedBoundaryMethodSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<FlowModelImmersedBoundaryMethodSingleSpecies *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<FlowModelImmersedBoundaryMethodSingleSpecies *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIP44FlowModelImmersedBoundaryMethodSingleSpeciesLN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic>::_M_dispose(std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(290,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8CellDataIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      20
            Global    :       7
            Local     :      13
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic>::_M_destroy(std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(294,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8CellDataIdEELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:294

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic>::_M_get_deleter(std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic> *, const std::type_info &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(298,7):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8CellDataIdEELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:298

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic> *const)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8CellDataIdEELN9__gnu_cxx12_Lock_policyE2EED0Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic>::~_Sp_counted_ptr(std::_Sp_counted_ptr<SAMRAI::pdat::CellData<Real> *, __gnu_cxx::_S_atomic> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(281,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15_Sp_counted_ptrIPN6SAMRAI4pdat8CellDataIdEELN9__gnu_cxx12_Lock_policyE2EED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr_base.h:281

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       7
            Global    :       0
            Local     :       7
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(150,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::growAsNeeded(const SAMRAI::tbox::MessageStream *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::growAsNeeded(const SAMRAI::tbox::MessageStream *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(362,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::copyDataIn(SAMRAI::tbox::MessageStream *, const void *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::copyDataIn(SAMRAI::tbox::MessageStream *, const void *, size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(398,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(128,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getWriteBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getWriteBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(215,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::pack<__gnu_cxx::__alloc_traits<std::allocator<double>>::value_type>(SAMRAI::tbox::MessageStream *, const __gnu_cxx::__alloc_traits<std::allocator<double>>::value_type *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::pack<__gnu_cxx::__alloc_traits<std::allocator<double>>::value_type>(SAMRAI::tbox::MessageStream *, const __gnu_cxx::__alloc_traits<std::allocator<double>>::value_type *, size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(262,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::MessageStream::getReadBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::MessageStream::getReadBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h(193,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::operator==(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(73,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::operator>(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::operator>(const SAMRAI::tbox::Dimension *, const SAMRAI::tbox::Dimension &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(93,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(137,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Database::getVector(SAMRAI::tbox::Database *, const std::string &, std::vector<double, std::allocator<double>> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Database::getVector(SAMRAI::tbox::Database *, const std::string &, std::vector<double, std::allocator<double>> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h(1470,4)

===========================================================================

Begin optimization report for: SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h(1486,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BlockId::getBlockValue(const SAMRAI::hier::BlockId *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BlockId::getBlockValue(const SAMRAI::hier::BlockId *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BlockId.h(119,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BlockId.h(155,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getNumBlocks(const SAMRAI::hier::IntVector *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::getNumBlocks(const SAMRAI::hier::IntVector *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(215,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator[](SAMRAI::hier::IntVector *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(253,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(269,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(340,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(756,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(148,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(162,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(175,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(193,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(238,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(251,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::Index &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(265,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(297,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(315,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator[](SAMRAI::hier::Index *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator[](SAMRAI::hier::Index *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(476,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(502,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(515,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(724,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(150,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(159,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getBeginBlock(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getBeginBlock(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(215,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::getEndBlock(const SAMRAI::hier::Transformation *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::getEndBlock(const SAMRAI::hier::Transformation *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(223,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Transformation::rotateIndex(SAMRAI::hier::Index &, SAMRAI::hier::Transformation::RotationIdentifier)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Transformation::rotateIndex(SAMRAI::hier::Index &, SAMRAI::hier::Transformation::RotationIdentifier)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h(336,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(495,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(515,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(622,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(652,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(753,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::operator=(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::operator=(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1166,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::Box_from_DatabaseBox(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::Box_from_DatabaseBox(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1182,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1212,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1229,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1248,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1298,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(692,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(703,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(159,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(170,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(201,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h(271,7)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(94,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getGhostCellWidth(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(103,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h(245,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Patch.h(93,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellIndex::operator+=(SAMRAI::pdat::CellIndex *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellIndex::operator+=(SAMRAI::pdat::CellIndex *, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h(83,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h(254,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellIterator::operator*(const SAMRAI::pdat::CellIterator *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellIterator::operator*(const SAMRAI::pdat::CellIterator *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h(76,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h(121,4)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<int>::getPointer(SAMRAI::pdat::CellData<int> *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellData<int>::getPointer(SAMRAI::pdat::CellData<int> *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(125,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellVariable<Real>::~CellVariable(SAMRAI::pdat::CellVariable<Real> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellVariable<Real>::~CellVariable(SAMRAI::pdat::CellVariable<Real> *)) [1195] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp(57,1)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp(57,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat12CellVariableIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp:57

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      18
            Global    :       6
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellVariable<Real>::~CellVariable(SAMRAI::pdat::CellVariable<Real> *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellVariable<Real>::~CellVariable(SAMRAI::pdat::CellVariable<Real> *const)) [1196] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp(56,21)
  -> INLINE: (56,21) SAMRAI::pdat::CellVariable<Real>::~CellVariable(SAMRAI::pdat::CellVariable<Real> *)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp(56,21):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat12CellVariableIdED0Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp:56

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rdi r15]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellVariable<Real>::fineBoundaryRepresentsVariable(const SAMRAI::pdat::CellVariable<Real> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellVariable<Real>::fineBoundaryRepresentsVariable(const SAMRAI::pdat::CellVariable<Real> *) const) [1197] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp(86,1)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp(86,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat12CellVariableIdE30fineBoundaryRepresentsVariableEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp:86

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellVariable<Real>::dataLivesOnPatchBorder(const SAMRAI::pdat::CellVariable<Real> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellVariable<Real>::dataLivesOnPatchBorder(const SAMRAI::pdat::CellVariable<Real> *) const) [1198] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp(101,1)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp(101,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat12CellVariableIdE22dataLivesOnPatchBorderEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellVariable.cpp:101

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::getSizeOfData(const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellData<Real>::getSizeOfData(const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(55,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::~CellData(SAMRAI::pdat::CellData<Real> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::~CellData(SAMRAI::pdat::CellData<Real> *)) [1200] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(111,1)
  -> INLINE: (112,1) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(111,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:111

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rbp rdi r15]
        
    Routine temporaries
        Total         :      32
            Global    :      13
            Local     :      19
        Regenerable   :       4
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::~CellData(SAMRAI::pdat::CellData<Real> *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::~CellData(SAMRAI::pdat::CellData<Real> *const)) [1201] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(110,17)
  -> INLINE: (110,17) SAMRAI::pdat::CellData<Real>::~CellData(SAMRAI::pdat::CellData<Real> *)
    -> INLINE: (112,1) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(110,17):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdED0Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:110

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    7[ rax rdx rcx rbx rdi r14-r15]
        
    Routine temporaries
        Total         :      33
            Global    :      13
            Local     :      20
        Regenerable   :       4
        Spilled       :       3
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(117,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellData<Real>::getPointer(SAMRAI::pdat::CellData<Real> *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(125,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::copy(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::PatchData &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::copy(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::PatchData &)) [1204] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(212,1)
  -> INDIRECT- (VIRTUAL): (217,18)  SAMRAI::pdat::CellData<Real>::copy2(const SAMRAI::pdat::CellData<Real> *, SAMRAI::hier::PatchData &) const (1210)
  -> INLINE: (219,35) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (219,37) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (219,61) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (219,63) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (220,16) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (221,16) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (221,18) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(312,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(327,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
  -> INLINE: (221,23) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(221,16)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(222,18)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(212,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE4copyERKNS_4hier9PatchDataE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:212

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r11 r13 r15]
        
    Routine temporaries
        Total         :     173
            Global    :      60
            Local     :     113
        Regenerable   :      37
        Spilled       :       4
        
    Routine stack
        Variables     :     273 bytes*
            Reads     :      17 [9.01e+00 ~ 8.2%]
            Writes    :      10 [1.11e+00 ~ 1.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::copy2(const SAMRAI::pdat::CellData<Real> *, SAMRAI::hier::PatchData &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::copy2(const SAMRAI::pdat::CellData<Real> *, SAMRAI::hier::PatchData &) const) [1205] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(230,1)
  -> INLINE: (237,32) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (237,34) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (237,58) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (237,60) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (238,13) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (239,20) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (239,22) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(312,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(327,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(64,35) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(66,30) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(67,36) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(70,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(71,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(78,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(79,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(80,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(84,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(85,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(97,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(99,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(99,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,52) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(319,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
          -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(199,15) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (239,27) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(239,13)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(77,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(119,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between dst_b[nd] (188:10) and dst_b[m] (230:16)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(196,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between vdst (31:4) and vdst (31:4)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between vdst (31:4) and vsrc (31:4)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,53) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,67) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(240,22)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(230,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8CellDataIdE5copy2ERNS_4hier9PatchDataE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:230

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     519
            Global    :     140
            Local     :     379
        Regenerable   :      35
        Spilled       :      18
        
    Routine stack
        Variables     :     392 bytes*
            Reads     :     114 [2.09e+02 ~ 10.3%]
            Writes    :      44 [1.54e+02 ~ 7.6%]
        Spills        :      96 bytes*
            Reads     :      21 [2.28e+01 ~ 1.1%]
            Writes    :      21 [1.27e+01 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::copy(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::copy(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)) [1206] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(257,1)
  -> INLINE: (258,10) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (264,24)  SAMRAI::pdat::CellData<Real>::copy2(const SAMRAI::pdat::CellData<Real> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const (1212)
  -> INDIRECT- (VIRTUAL): (266,11)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.204085_V$1284.0.1211->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (266,42) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INLINE: (268,16) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (268,18) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(451,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,7) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (268,23) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (269,13)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.204085_V$1284.0.1211->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (270,13)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.204085_V$1284.0.1211->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (272,10) SAMRAI::pdat::CellData<Real>::copyWithRotation(SAMRAI::pdat::CellData<Real> *, const SAMRAI::pdat::CellData<Real> &, const SAMRAI::pdat::CellOverlap &)
    -> INLINE: (320,35) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INDIRECT- (VIRTUAL): (321,46)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_204118_V$12db.0.1222.46964->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
    -> INDIRECT- (VIRTUAL): (323,7)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_204118_V$12db.0.1222.46964->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (323,35) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
    -> INDIRECT- (VIRTUAL): (324,35)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_204118_V$12db.0.1222.46964->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
    -> INLINE: (326,28) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
    -> INDIRECT- (VIRTUAL): (327,4)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_204118_V$12db.0.1222.46964->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (338,63) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (339,12) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (339,12) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (339,29) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (339,29) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (339,36) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: (340,38) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: (344,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (345,30) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (345,47) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (346,29) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (346,46) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (350,18) SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h:(124,22) SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(256,37) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (350,18) SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h:(124,22) SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(256,37) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (352,42) SAMRAI::pdat::CellIterator::operator*(const SAMRAI::pdat::CellIterator *) const
    -> INLINE: (354,13) SAMRAI::hier::Transformation::rotateIndex(SAMRAI::hier::Index &, SAMRAI::hier::Transformation::RotationIdentifier)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h:(337,25) SAMRAI::hier::Index::operator[](SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h:(337,36) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (355,23) SAMRAI::pdat::CellIndex::operator+=(SAMRAI::pdat::CellIndex *, const SAMRAI::hier::IntVector &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(85,7) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: (358,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (358,25) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
        -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (358,43) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (358,55) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
        -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (275,10) std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Timer, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(452,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(269,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(358,18) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(350,18) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         remark #25478: While Loop Unrolled by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(357,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between src (358:43) and this->d_array->_M_start[myoffset+ci.ci.ci.ci[0]-this->d_index[0] (358:25)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(273,10)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(257,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE4copyERKNS_4hier9PatchDataERKNS3_10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:257

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     411
            Global    :     100
            Local     :     311
        Regenerable   :      80
        Spilled       :      13
        
    Routine stack
        Variables     :     512 bytes*
            Reads     :      62 [4.66e+02 ~ 6.0%]
            Writes    :      22 [9.25e+00 ~ 0.1%]
        Spills        :      56 bytes*
            Reads     :      12 [2.08e+02 ~ 2.7%]
            Writes    :      10 [2.01e+02 ~ 2.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)) [1207] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(391,1)
  -> INLINE: (392,23) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INLINE: (392,90) SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const
  -> INLINE: (392,102) SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(762,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(763,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,72) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(768,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,60) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (392,105) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (392,134) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (392,162) SAMRAI::hier::Transformation::getBeginBlock(const SAMRAI::hier::Transformation *) const
  -> INLINE: (392,178) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
  -> INLINE: (392,196) SAMRAI::hier::Transformation::getEndBlock(const SAMRAI::hier::Transformation *) const
  -> INLINE: (394,7) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: (294,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (295,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (297,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: (298,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: (312,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: (320,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (325,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> (327,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
  -> INLINE: (403,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> (411,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
  -> INLINE: (415,55) SAMRAI::hier::Transformation::getOffset(const SAMRAI::hier::Transformation *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(761,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(393,102)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(763,38) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(393,102)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(769,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(393,102)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(395,7)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(404,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(311,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(391,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdE4copyERKS2_RKNS_4hier3BoxERKNS5_14TransformationE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:391

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     229
            Global    :      72
            Local     :     157
        Regenerable   :      47
        Spilled       :       7
        
    Routine stack
        Variables     :     418 bytes*
            Reads     :      11 [5.40e+00 ~ 5.9%]
            Writes    :      10 [6.70e-01 ~ 0.7%]
        Spills        :      24 bytes*
            Reads     :       6 [2.30e-01 ~ 0.3%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)) [1208] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(59,1)
  -> INLINE: (64,35) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (66,30) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (67,36) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (70,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (71,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (78,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (79,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (80,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (84,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (85,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (97,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (99,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (99,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (100,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (100,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (100,52) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(319,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
      -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (199,15) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
  -> INLINE: (208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(77,47)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(79,24)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(80,26)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(81,26)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(98,53)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(98,53)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(100,31)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(100,31)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,52)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,31)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,31)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(119,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between dst_b[nd] (188:10) and dst_b[m] (230:16)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(196,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between vdst (31:4) and vdst (31:4)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between vdst (31:4) and vsrc (31:4)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,53)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,67) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(59,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat27ArrayDataOperationUtilitiesIdNS0_13CopyOperationIdEEE25doArrayDataOperationOnBoxERNS0_9ArrayDataIdEERKS6_RKNS_4hier3BoxERKNSA_9IntVectorEjjjRKS3_] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:59

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     297
            Global    :      96
            Local     :     201
        Regenerable   :       8
        Spilled       :      20
        
    Routine stack
        Variables     :     120 bytes*
            Reads     :      50 [3.48e+02 ~ 9.1%]
            Writes    :      29 [2.98e+02 ~ 7.8%]
        Spills        :     112 bytes*
            Reads     :      20 [4.38e+01 ~ 1.1%]
            Writes    :      20 [2.80e+01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::copy2(const SAMRAI::pdat::CellData<Real> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::copy2(const SAMRAI::pdat::CellData<Real> *, SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &) const) [1209] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(283,1)
  -> INDIRECT- (VIRTUAL): (290,8)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.204143_V$128e.0.1212->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (290,39) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INLINE: (293,20) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (293,22) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(451,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(452,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,7) SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::Transformation &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(453,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (293,27) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INDIRECT- (VIRTUAL): (294,10)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.204143_V$128e.0.1212->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (295,10)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.204143_V$128e.0.1212->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (297,14) SAMRAI::pdat::CellData<Real>::copyWithRotation(SAMRAI::pdat::CellData<Real> *, const SAMRAI::pdat::CellData<Real> &, const SAMRAI::pdat::CellOverlap &)
    -> INLINE: (320,35) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INDIRECT- (VIRTUAL): (321,46)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_204118_V$12db.0.1222.46880->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
    -> INDIRECT- (VIRTUAL): (323,7)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_204118_V$12db.0.1222.46880->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (323,35) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
    -> INDIRECT- (VIRTUAL): (324,35)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_204118_V$12db.0.1222.46880->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
    -> INLINE: (326,28) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
    -> INDIRECT- (VIRTUAL): (327,4)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_204118_V$12db.0.1222.46880->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
    -> INLINE: (338,63) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (339,12) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (339,12) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: (339,29) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (339,29) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: (339,36) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: (340,38) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: (344,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (345,30) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (345,47) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (346,29) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (346,46) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
    -> INLINE: (350,18) SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h:(124,22) SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(256,37) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (350,18) SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h:(124,22) SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(256,37) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
            -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (352,42) SAMRAI::pdat::CellIterator::operator*(const SAMRAI::pdat::CellIterator *) const
    -> INLINE: (354,13) SAMRAI::hier::Transformation::rotateIndex(SAMRAI::hier::Index &, SAMRAI::hier::Transformation::RotationIdentifier)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h:(337,25) SAMRAI::hier::Index::operator[](SAMRAI::hier::Index *, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h:(337,36) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: (355,23) SAMRAI::pdat::CellIndex::operator+=(SAMRAI::pdat::CellIndex *, const SAMRAI::hier::IntVector &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(85,7) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: (358,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (358,25) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
        -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (358,43) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
    -> INLINE: (358,55) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
        -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(452,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(294,22)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(358,18) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(350,18) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         remark #25478: While Loop Unrolled by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(357,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between src (358:43) and this->d_array->_M_start[myoffset+ci.ci.ci.ci[0]-this->d_index[0] (358:25)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
         <Remainder>
         LOOP END
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(298,14)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(283,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8CellDataIdE5copy2ERNS_4hier9PatchDataERKNS3_10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:283

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     384
            Global    :      92
            Local     :     292
        Regenerable   :      70
        Spilled       :      14
        
    Routine stack
        Variables     :     512 bytes*
            Reads     :      62 [6.02e+02 ~ 6.1%]
            Writes    :      22 [1.19e+01 ~ 0.1%]
        Spills        :      64 bytes*
            Reads     :      12 [2.40e+02 ~ 2.4%]
            Writes    :      10 [2.30e+02 ~ 2.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::copyDepth(SAMRAI::pdat::CellData<Real> *, int, const SAMRAI::pdat::CellData<Real> &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::copyDepth(SAMRAI::pdat::CellData<Real> *, int, const SAMRAI::pdat::CellData<Real> &, int)) [1210] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(381,1)
  -> INLINE: (384,32) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (384,34) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (384,55) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (384,57) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (385,13) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (386,13) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (386,15) SAMRAI::pdat::ArrayData<Real>::copyDepth(SAMRAI::pdat::ArrayData<Real> *, unsigned int, const SAMRAI::pdat::ArrayData<Real> &, unsigned int, const SAMRAI::hier::Box &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(485,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(485,52) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(487,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(488,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(506,16) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(513,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(518,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(520,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::CopyOperation<Real> &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(64,35) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(66,30) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(67,36) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(70,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(71,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(78,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(79,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(80,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(84,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(85,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(97,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(99,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(99,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(100,52) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(319,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
          -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(199,15) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (386,36) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(386,13)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(505,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #25401: memcopy(with guard) generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(505,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(505,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(77,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(196,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between vdst (31:4) and vdst (31:4)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between vdst (31:4) and vsrc (31:4)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,53) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,67) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(387,15)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(505,7):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(381,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE9copyDepthEiRKS2_i] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:381

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     540
            Global    :     143
            Local     :     397
        Regenerable   :      34
        Spilled       :      14
        
    Routine stack
        Variables     :     392 bytes*
            Reads     :     114 [1.93e+02 ~ 10.5%]
            Writes    :      44 [1.41e+02 ~ 7.6%]
        Spills        :      64 bytes*
            Reads     :      12 [6.36e+00 ~ 0.3%]
            Writes    :      12 [2.59e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::canEstimateStreamSizeFromBox(const SAMRAI::pdat::CellData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::canEstimateStreamSizeFromBox(const SAMRAI::pdat::CellData<Real> *) const) [1211] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(402,1)
  -> INLINE: (403,11) SAMRAI::pdat::ArrayData<Real>::canEstimateStreamSizeFromBox()
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,22) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,55) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,88) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,123) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,157) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(64,189) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(402,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8CellDataIdE28canEstimateStreamSizeFromBoxEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:402

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rcx rsi rdi]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :      17
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::getDataStreamSize(const SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::getDataStreamSize(const SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::BoxOverlap &) const) [1212] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(410,1)
  -> INLINE: (415,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (415,19) SAMRAI::pdat::ArrayData<Real>::getDataStreamSize(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(770,21) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(771,14) SAMRAI::tbox::MessageStream::getSizeof<bool>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(772,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(773,14) SAMRAI::tbox::MessageStream::getSizeof<char>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(774,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(775,14) SAMRAI::tbox::MessageStream::getSizeof<dcomplex>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(776,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(777,14) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(778,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(779,14) SAMRAI::tbox::MessageStream::getSizeof<float>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(780,28) std::type_info::operator==(const std::type_info *, const std::type_info &) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(781,14) SAMRAI::tbox::MessageStream::getSizeof<int>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(784,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (416,7)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.204577_V$1297.0.1215->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (417,7)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.204577_V$1297.0.1215->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(410,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8CellDataIdE17getDataStreamSizeERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:410

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :      51
            Global    :      23
            Local     :      28
        Regenerable   :      13
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::packStream(const SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::packStream(const SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &) const) [1213] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(434,1)
  -> INDIRECT- (VIRTUAL): (439,8)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.205243_V$129b.0.1216->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (439,39) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INLINE: (441,13) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> (441,15) SAMRAI::pdat::ArrayData<Real>::packStream(const SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &) const
  -> INDIRECT- (VIRTUAL): (441,34)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.205243_V$129b.0.1216->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (442,10)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.205243_V$129b.0.1216->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> (444,7) SAMRAI::pdat::CellData<Real>::packWithRotation(const SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::pdat::CellOverlap &) const


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(434,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8CellDataIdE10packStreamERNS_4tbox13MessageStreamERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:434

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rsi rdi r13-r15]
        
    Routine temporaries
        Total         :      32
            Global    :      16
            Local     :      16
        Regenerable   :       0
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::packWithRotation(const SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::pdat::CellOverlap &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::packWithRotation(const SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::pdat::CellOverlap &) const) [1214] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(453,1)
  -> INLINE: (457,31) SAMRAI::hier::PatchData::getDim(const SAMRAI::hier::PatchData *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/PatchData.h:(246,20) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INDIRECT- (VIRTUAL): (458,46)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_205463_V$12f0.0.1223->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (460,7)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_205463_V$12f0.0.1223->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (460,35) SAMRAI::hier::Transformation::getRotation(const SAMRAI::hier::Transformation *) const
  -> INDIRECT- (VIRTUAL): (461,35)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_205463_V$12f0.0.1223->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (463,24) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INDIRECT- (VIRTUAL): (464,4)  EXPR_CONV.SI64.P64(*((SI64*) (overlap_205463_V$12f0.0.1223->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(4(SI32)) * 8(I64))))
  -> INLINE: (475,22) SAMRAI::pdat::CellData<Real>::getDepth(const SAMRAI::pdat::CellData<Real> *) const
  -> DELETED: (478,22) std::allocator<double>::~allocator(std::allocator<double> *)
  -> DELETED: (478,29) std::allocator<double>::~allocator(std::allocator<double> *)
  -> INLINE: (478,29) std::allocator<double>::allocator(std::allocator<double> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (478,29) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (478,29) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
  -> INLINE: (481,63) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (482,12) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (482,12) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (482,29) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (482,29) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (482,36) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
  -> INLINE: (483,38) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (487,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (492,21) SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h:(124,22) SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(256,37) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (492,21) SAMRAI::pdat::CellIterator::operator!=(const SAMRAI::pdat::CellIterator *, const SAMRAI::pdat::CellIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIterator.h:(124,22) SAMRAI::pdat::CellIndex::operator!=(const SAMRAI::pdat::CellIndex *, const SAMRAI::pdat::CellIndex &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(256,37) SAMRAI::hier::Index::operator!=(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(163,22) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
          -> INLINE: (150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (494,36) SAMRAI::pdat::CellIterator::operator*(const SAMRAI::pdat::CellIterator *) const
  -> INLINE: (495,16) SAMRAI::hier::Transformation::rotateIndex(SAMRAI::hier::Index &, SAMRAI::hier::Transformation::RotationIdentifier)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h:(337,25) SAMRAI::hier::Index::operator[](SAMRAI::hier::Index *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Transformation.h:(337,36) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (496,26) SAMRAI::pdat::CellIndex::operator+=(SAMRAI::pdat::CellIndex *, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellIndex.h:(85,7) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (498,22) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (498,29) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (498,37) SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,18) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(251,19) SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const
      -> INLINE: (197,25) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (505,11) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (505,11) SAMRAI::tbox::MessageStream::pack<__gnu_cxx::__alloc_traits<std::allocator<double>>::value_type>(SAMRAI::tbox::MessageStream *, const __gnu_cxx::__alloc_traits<std::allocator<double>>::value_type *, size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(265,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(266,10) SAMRAI::tbox::MessageStream::copyDataIn(SAMRAI::tbox::MessageStream *, const void *, size_t)
      -> INLINE: (399,12) SAMRAI::tbox::MessageStream::growAsNeeded(const SAMRAI::tbox::MessageStream *) const
      -> INLINE: (403,25) std::vector<char, std::allocator<char>>::insert<const char *, void>(std::vector<char, std::allocator<char>> *, std::vector<char, std::allocator<char>>::iterator, const char *, const char *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (403,32) std::vector<char, std::allocator<char>>::end(std::vector<char, std::allocator<char>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: (406,41) std::vector<char, std::allocator<char>>::size(const std::vector<char, std::allocator<char>> *) const
  -> INLINE: (505,23) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(479,29)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(479,29)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(479,29)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(498,30)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(488,20)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(489,10)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(493,21)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(492,21)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(497,26)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
            remark #25478: While Loop Unrolled by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(499,37)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
            remark #25439: unrolled with remainder by 2  
            remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(499,37)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(493,21)
            remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(567,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(453,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8CellDataIdE16packWithRotationERNS_4tbox13MessageStreamERKNS0_11CellOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:453

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     343
            Global    :      92
            Local     :     251
        Regenerable   :      65
        Spilled       :      15
        
    Routine stack
        Variables     :     488 bytes*
            Reads     :      45 [1.90e+03 ~ 9.7%]
            Writes    :      30 [8.39e+01 ~ 0.4%]
        Spills        :      80 bytes*
            Reads     :      37 [5.84e+02 ~ 3.0%]
            Writes    :      11 [2.31e+02 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<char, std::allocator<char>>::_M_deallocate(std::_Vector_base<char, std::allocator<char>> *, std::_Vector_base<char, std::allocator<char>>::pointer, std::size_t)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(172,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm] /usr/include/c++/4.8.5/bits/stl_vector.h:172

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<char, std::allocator<char>>::_M_get_Tp_allocator(std::_Vector_base<char, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv] /usr/include/c++/4.8.5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::packStream(const SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::packStream(const SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &) const) [1220] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(870,1)
  -> INLINE: (875,26) SAMRAI::tbox::MessageStream::getWriteBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(217,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(219,25) std::vector<char, std::allocator<char>>::resize(std::vector<char, std::allocator<char>> *, std::vector<char, std::allocator<char>>::size_type)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(219,32) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(220,41) std::vector<char, std::allocator<char>>::size(const std::vector<char, std::allocator<char>> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(223,55) std::vector<char, std::allocator<char>>::operator[](std::vector<char, std::allocator<char>> *, std::vector<char, std::allocator<char>>::size_type)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(223,56) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
  -> INLINE: (878,59) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (879,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (879,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (879,25) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (879,25) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (879,32) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
  -> INLINE: (880,26) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (882,7) SAMRAI::pdat::ArrayData<Real>::packBuffer(const SAMRAI::pdat::ArrayData<Real> *, Real *, const SAMRAI::hier::Box &) const
    -> INLINE: (1294,4) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<Real> &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(272,41) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(275,53) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(278,44) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(280,49) SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(283,43) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(289,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(290,30) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(294,40) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(307,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,35) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(397,15) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (884,25) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,29) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,45) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (884,27) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(220,12) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(288,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between pack_box.pack_box (606:16) and pack_box.pack_box (606:16)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(319,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between dat_b[nd] (387:10) and dat_b[m] (425:16)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(394,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between buffer[buf_counter+i0] (31:4) and buffer[buf_counter+i0] (31:4)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between buffer[buf_counter+i0] (31:4) and src_ptr[dat_counter+i0] (31:4)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(406,34) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(412,16) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(885,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(885,27)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(883,7)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_algobase.h(372,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(703,7):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/stl_algobase.h(703,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(870,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat9ArrayDataIdE10packStreamERNS_4tbox13MessageStreamERKNS_4hier12BoxContainerERKNS6_14TransformationE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:870

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     453
            Global    :     104
            Local     :     349
        Regenerable   :      28
        Spilled       :      22
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :      85 [1.39e+03 ~ 7.8%]
            Writes    :      21 [9.36e+02 ~ 5.2%]
        Spills        :     128 bytes*
            Reads     :      34 [3.40e+02 ~ 1.9%]
            Writes    :      33 [1.36e+02 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::unpackStream(SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::unpackStream(SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)) [1221] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(513,1)
  -> INLINE: (518,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (518,12) SAMRAI::pdat::ArrayData<Real>::unpackStream(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(935,32) SAMRAI::tbox::MessageStream::getReadBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(195,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(198,61) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(938,59) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,25) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,25) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(939,32) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(940,7) SAMRAI::pdat::ArrayData<Real>::unpackBuffer(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)
      -> INLINE: (1313,4) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<Real> &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(272,41) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(275,53) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(278,44) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(280,49) SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(283,43) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(289,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(290,30) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(294,40) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(307,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,35) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(397,15) SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(940,34) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(941,25) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator->(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,29) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(171,45) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(941,27) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INDIRECT- (VIRTUAL): (518,33)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.205491_V$129f.0.1217->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (519,7)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.205491_V$129f.0.1217->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(220,12) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(288,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between this->d_empty_flag (606:16) and this->d_empty_flag (599:11)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(319,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between dat_b[nd] (387:10) and dat_b[m] (425:16)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(394,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between dst_ptr[dat_counter+i0] (31:4) and dst_ptr[dat_counter+i0] (31:4)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[dat_counter+i0] (31:4) and buffer[buf_counter+i0] (31:4)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(406,34) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(412,16) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(519,12)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(513,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE12unpackStreamERNS_4tbox13MessageStreamERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:513

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     364
            Global    :      85
            Local     :     279
        Regenerable   :      17
        Spilled       :      20
        
    Routine stack
        Variables     :     104 bytes*
            Reads     :      38 [6.46e+02 ~ 6.5%]
            Writes    :      16 [5.08e+02 ~ 5.1%]
        Spills        :     112 bytes*
            Reads     :      23 [1.86e+02 ~ 1.9%]
            Writes    :      21 [7.82e+01 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::sum(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::sum(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::PatchData &, const SAMRAI::hier::BoxOverlap &)) [1222] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(534,1)
  -> INLINE: (552,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (552,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (552,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (552,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (552,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (552,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (552,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (552,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> INLINE: (552,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (552,7) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (552,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (552,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (552,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (552,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (557,41)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.205765_V$12a3.0.1218->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (559,10)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.205765_V$12a3.0.1218->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INLINE: (560,40) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator*(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (561,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (561,19) SAMRAI::pdat::ArrayData<Real>::isInitialized(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (562,16) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (562,18) SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(750,54) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(751,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(751,11) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(751,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(751,20) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(751,27) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(752,7) SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(752,16) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(751,11) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(563,18)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(534,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE3sumERKNS_4hier9PatchDataERKNS3_10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:534

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     379
            Global    :      90
            Local     :     289
        Regenerable   :     142
        Spilled       :       6
        
    Routine stack
        Variables     :     469 bytes*
            Reads     :      41 [6.93e+00 ~ 4.5%]
            Writes    :      54 [2.76e+01 ~ 18.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)) [1223] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(703,1)
  -> INLINE: (705,18) SAMRAI::hier::IntVector::operator==(const SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(762,43) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(763,59) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,44) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(764,72) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(768,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,41) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(770,60) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (705,21) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (705,50) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (707,7) SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)
    -> INLINE: (558,15) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (559,13) SAMRAI::hier::Box::isSpatiallyEqual(const SAMRAI::hier::Box *, const SAMRAI::hier::Box &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,21) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(754,43) SAMRAI::hier::Index::operator==(const SAMRAI::hier::Index *, const SAMRAI::hier::Index &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,47) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(150,56) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,27) SAMRAI::hier::BlockId::operator==(const SAMRAI::hier::BlockId *, const SAMRAI::hier::BlockId &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,51) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(755,66) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (561,37) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
    -> INLINE: (562,47) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
    -> INLINE: (577,15) SAMRAI::pdat::SumOperation<Real>::operator()(const SAMRAI::pdat::SumOperation<Real> *, Real &, const Real &) const
    -> INLINE: (585,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: (590,46) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> (592,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::SumOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::SumOperation<Real> &)
  -> INLINE: (712,25) SAMRAI::hier::Box::shift(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,22) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,30) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,44) SAMRAI::hier::Box::upper(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1250,52) SAMRAI::hier::Index::operator+(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(197,11) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (714,20) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> (722,10) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::SumOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::SumOperation<Real> &)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(761,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(706,18)
   remark #15523: loop was not vectorized: loop control variable b was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(763,38) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(706,18)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(769,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(706,18)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(150,32) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(576,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
<Peeled loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(576,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(576,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(576,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(576,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(576,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(708,7)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(713,25)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(713,25)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(715,20)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(703,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat9ArrayDataIdE3sumERKS2_RKNS_4hier3BoxERKNS5_9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:703

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   22[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm7]
        
    Routine temporaries
        Total         :     344
            Global    :     104
            Local     :     240
        Regenerable   :      58
        Spilled       :       8
        
    Routine stack
        Variables     :     466 bytes*
            Reads     :      30 [7.71e+00 ~ 5.4%]
            Writes    :      28 [1.57e+00 ~ 1.1%]
        Spills        :      24 bytes*
            Reads     :       6 [1.04e+00 ~ 0.7%]
            Writes    :       3 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::SumOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::SumOperation<Real> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::SumOperation<Real>>::doArrayDataOperationOnBox(SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &, unsigned int, unsigned int, unsigned int, const SAMRAI::pdat::SumOperation<Real> &)) [1224] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(59,1)
  -> INLINE: (64,35) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
  -> INLINE: (66,30) SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(210,19) std::vector<double, std::allocator<double>>::operator[](std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type)
  -> INLINE: (67,36) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
  -> INLINE: (70,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (71,33) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (77,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (78,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (79,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (80,26) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (84,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (85,34) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (97,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (99,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (99,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (100,31) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (100,44) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
  -> INLINE: (100,52) SAMRAI::hier::Index::operator-(SAMRAI::hier::Index *, const SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(319,11) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
      -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
  -> INLINE: (187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (187,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (199,15) SAMRAI::pdat::SumOperation<Real>::operator()(const SAMRAI::pdat::SumOperation<Real> *, Real &, const Real &) const
  -> INLINE: (208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (208,53) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(77,47)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(79,24)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(80,26)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(81,26)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(98,53)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(98,53)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(100,31)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(100,31)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,52)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,31)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(101,31)
<Remainder>
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(119,4)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between dst_b[nd] (188:10) and dst_b[m] (230:16)

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(187,52)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(196,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between vdst (40:4) and vdst (40:4)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between vdst (40:4) and vdst (40:4)
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(198,10)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,53)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(208,67) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 8  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(229,13)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(222,13)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(59,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat27ArrayDataOperationUtilitiesIdNS0_12SumOperationIdEEE25doArrayDataOperationOnBoxERNS0_9ArrayDataIdEERKS6_RKNS_4hier3BoxERKNSA_9IntVectorEjjjRKS3_] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:59

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     300
            Global    :      96
            Local     :     204
        Regenerable   :       8
        Spilled       :      20
        
    Routine stack
        Variables     :     120 bytes*
            Reads     :      50 [3.48e+02 ~ 8.7%]
            Writes    :      29 [2.98e+02 ~ 7.5%]
        Spills        :     112 bytes*
            Reads     :      20 [4.38e+01 ~ 1.1%]
            Writes    :      20 [2.80e+01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::unpackStreamAndSum(SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::unpackStreamAndSum(SAMRAI::pdat::CellData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxOverlap &)) [1225] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(580,1)
  -> INDIRECT- (VIRTUAL): (587,7)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.205850_V$12b4.0.1219->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(6(SI32)) * 8(I64))))
  -> INDIRECT- (VIRTUAL): (588,38)  EXPR_CONV.SI64.P64(*((SI64*) (t_overlap.205850_V$12b4.0.1219->__vptr_V$1285_2.71 + EXPR_CONV.SI32.I64(3(SI32)) * 8(I64))))
  -> INLINE: (589,62) SAMRAI::hier::BoxContainer::begin(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (590,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (590,17) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator!=(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *, const SAMRAI::hier::BoxContainer::BoxContainerConstIterator &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(272,40) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator!=(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *, const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::_Self &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(273,29) std::_List_const_iterator<SAMRAI::hier::Box>::operator!=(const std::_List_const_iterator<SAMRAI::hier::Box> *, const std::_List_const_iterator<SAMRAI::hier::Box>::_Self &) const
  -> INLINE: (590,30) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (590,30) SAMRAI::hier::BoxContainer::end(SAMRAI::hier::BoxContainer::const_iterator *, const SAMRAI::hier::BoxContainer *) const
  -> INLINE: (590,37) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator++(SAMRAI::hier::BoxContainer::BoxContainerConstIterator *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(203,13) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator++(std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(205,13) std::_List_const_iterator<SAMRAI::hier::Box>::operator++(std::_List_const_iterator<SAMRAI::hier::Box> *)
  -> INLINE: (591,33) SAMRAI::hier::BoxContainer::BoxContainerConstIterator::operator*(const SAMRAI::hier::BoxContainer::BoxContainerConstIterator *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,30) std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type>::operator*(const std::_Rb_tree_const_iterator<std::_Rb_tree<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_type, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type, std::_Identity<std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::value_type>, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::key_compare, std::set<SAMRAI::hier::Box *, SAMRAI::hier::Box::id_less, std::allocator<SAMRAI::hier::Box *>>::_Key_alloc_type>::value_type> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/BoxContainer.h:(160,44) std::_List_const_iterator<SAMRAI::hier::Box>::operator*(const std::_List_const_iterator<SAMRAI::hier::Box> *) const
  -> INLINE: (591,50) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (591,52) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
  -> INLINE: (592,22) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
      -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
  -> INLINE: (593,16) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (593,18) SAMRAI::pdat::ArrayData<Real>::unpackStreamAndSum(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(969,43) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(970,32) SAMRAI::tbox::MessageStream::getReadBuffer<Real>(SAMRAI::tbox::MessageStream *, size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(195,32) SAMRAI::tbox::MessageStream::getSizeof<double>(size_t)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/MessageStream.h:(198,61) SAMRAI::tbox::MessageStream::getCurrentSize(const SAMRAI::tbox::MessageStream *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(972,4) SAMRAI::pdat::ArrayData<Real>::unpackBufferAndSum(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)
      -> INLINE: (1341,4) SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::SumOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::SumOperation<Real> &)
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(272,41) SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1251,17) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(275,53) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(278,44) SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(220,19) std::vector<double, std::allocator<double>>::operator[](const std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(280,49) SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(283,43) SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(288,47) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(289,24) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(290,30) SAMRAI::hier::Box::numberCells(const SAMRAI::hier::Box *, SAMRAI::hier::Box::dir_t) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(623,11) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(626,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(294,40) SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(307,53) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
              -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
            -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
            -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,35) SAMRAI::hier::Box::offset(const SAMRAI::hier::Box *, const SAMRAI::hier::Index &) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,29) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(681,38) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,18) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,32) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,49) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(683,59) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,40) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(685,50) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(309,48) SAMRAI::hier::Box::lower(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(386,52) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(397,15) SAMRAI::pdat::SumOperation<Real>::operator()(const SAMRAI::pdat::SumOperation<Real> *, Real &, const Real &) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp:(406,34) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(593,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(593,22)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(288,47) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between intersect.intersect.intersect.intersect (604:41) and this->d_empty_flag (610:10)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
         remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
      remark #25439: unrolled with remainder by 8  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between myoffset (682:10) and myoffset (682:10)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(681,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
   <Remainder>
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(319,4) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between dat_b[nd] (387:10) and dat_b[m] (425:16)

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
         remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(386,52) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
      <Remainder>
      LOOP END

      LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(394,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between dst_ptr[dat_counter+i0] (40:4) and dst_ptr[dat_counter+i0] (40:4)

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[dat_counter+i0] (40:4) and dst_ptr[dat_counter+i0] (40:4)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(396,10) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(406,34) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
            remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(412,16) ]
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 8  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
            remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(424,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
         <Remainder>
         LOOP END

         LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(419,13) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
         <Remainder>
            remark #25436: completely unrolled by 7  
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END

   LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(594,18)
   <Remainder>
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(580,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE18unpackStreamAndSumERNS_4tbox13MessageStreamERKNS_4hier10BoxOverlapE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:580

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     472
            Global    :      99
            Local     :     373
        Regenerable   :      25
        Spilled       :      22
        
    Routine stack
        Variables     :     176 bytes*
            Reads     :     122 [7.69e+02 ~ 8.0%]
            Writes    :      24 [4.76e+02 ~ 5.0%]
        Spills        :     128 bytes*
            Reads     :      29 [1.72e+02 ~ 1.8%]
            Writes    :      28 [6.80e+01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::getFromRestart(SAMRAI::pdat::CellData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::getFromRestart(SAMRAI::pdat::CellData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)) [1226] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(717,1)
  -> DELETED: (723,8) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (723,8) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (723,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (723,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (723,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (723,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U14a_V$12bf.0.1220->__vptr_V$6ee + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (723,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (725,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (725,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (725,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (725,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (725,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (725,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (725,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (725,7) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (725,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (725,7) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (725,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (725,7) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (725,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (725,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (729,4) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (729,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (729,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (729,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (729,37) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (729,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U14b_V$12c0.0.1220->__vptr_V$6ee + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
  -> INLINE: (729,37) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (731,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (731,12) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (731,12) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (731,12) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (731,12) SAMRAI::pdat::ArrayData<Real>::getFromRestart(SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1200,8) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1200,8) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1200,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1200,37) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1200,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U17d_V$13c8.0.1259.47048->__vptr_V$6ee + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1200,37) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1200,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1202,7) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1206,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1206,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1206,24) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1206,37) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1206,37)  EXPR_CONV.SI64.P64(*((SI64*) (__$U17e_V$13c9.0.1259.47048->__vptr_V$6ee + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1206,37) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1206,37) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1207,4) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1207,4) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1207,25) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1207,38) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1207,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U17f_V$13ca.0.1259.47048->__vptr_V$6ee + EXPR_CONV.SI32.I64(65(SI32)) * 8(I64))))
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1207,38) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1207,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,10) SAMRAI::hier::Box::operator=(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1172,14) SAMRAI::hier::Box::Box_from_DatabaseBox(SAMRAI::hier::Box *, const SAMRAI::tbox::DatabaseBox &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,10) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,10) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,22) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,39) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U181_V$13d0.0.1259.47048->__vptr_V$6ee + EXPR_CONV.SI32.I64(25(SI32)) * 8(I64))))
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,39) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1208,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1215,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1215,16) SAMRAI::tbox::Database::getVector(SAMRAI::tbox::Database *, const std::string &, std::vector<double, std::allocator<double>> &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,13) std::vector<double, std::allocator<double>>::~vector(std::vector<double, std::allocator<double>> *)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,13) std::vector<double, std::allocator<double>>::operator=(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>> &&)
         {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
      -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1471,31)  EXPR_CONV.SI64.P64(*((SI64*) (this_22990_V$1170.0.1130.47067->__vptr_V$6ee + EXPR_CONV.SI32.I64(51(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1215,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1215,16) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1215,26) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1215,26) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1215,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (731,37) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> (731,51) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (731,51) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (731,51) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (731,51)  EXPR_CONV.SI64.P64(*((SI64*) (__$U14d_V$12c2.0.1220->__vptr_V$6ee + EXPR_CONV.SI32.I64(11(SI32)) * 8(I64))))
  -> INLINE: (731,51) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(717,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdE14getFromRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:717

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     937
            Global    :     237
            Local     :     700
        Regenerable   :     350
        Spilled       :       8
        
    Routine stack
        Variables     :     961 bytes*
            Reads     :      78 [3.56e+01 ~ 8.7%]
            Writes    :     126 [5.22e+01 ~ 12.8%]
        Spills        :      16 bytes*
            Reads     :       2 [1.33e-01 ~ 0.0%]
            Writes    :       2 [1.33e-01 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, const std::vector<double, std::allocator<double>>::allocator_type &)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(257,20):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIdSaIdEEC1ERKS0_] /usr/include/c++/4.8.5/bits/stl_vector.h:257

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rsi rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       0
            Local     :      10
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::putToRestart(const SAMRAI::pdat::CellData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::putToRestart(const SAMRAI::pdat::CellData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [1229] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(747,1)
  -> INLINE: (752,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (752,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (752,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (752,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (752,52) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (752,52) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (752,52)  EXPR_CONV.SI64.P64(*((SI64*) (__$U153_V$12d5.0.1221->__vptr_V$6ee + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> INLINE: (754,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (754,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (754,27) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (754,27) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (754,38) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (754,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INDIRECT- (VIRTUAL): (754,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U154_V$12d6.0.1221->__vptr_V$6ee + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
  -> INLINE: (756,10) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *) const
  -> DELETED: (756,12) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (756,12) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (756,12) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (756,12) SAMRAI::pdat::ArrayData<Real>::putToRestart(const SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53)  EXPR_CONV.SI64.P64(*((SI64*) (__$U187_V$13e3.0.1260.38249->__vptr_V$6ee + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1234,53) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38)  EXPR_CONV.SI64.P64(*((SI64*) (__$U189_V$13e5.0.1260.38249->__vptr_V$6ee + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1236,38) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,27) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39)  EXPR_CONV.SI64.P64(*((SI64*) (__$U18a_V$13e6.0.1260.38249->__vptr_V$6ee + EXPR_CONV.SI32.I64(62(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1237,39) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) SAMRAI::hier::Box::operator void(SAMRAI::tbox::DatabaseBox *, const SAMRAI::hier::Box *) const
    -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40)  EXPR_CONV.SI64.P64(*((SI64*) (__$U18c_V$13e8.0.1260.38249->__vptr_V$6ee + EXPR_CONV.SI32.I64(22(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1238,40) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,14) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) SAMRAI::tbox::Database::putVector(SAMRAI::tbox::Database *, const std::string &, const std::vector<double, std::allocator<double>> &)
      -> INDIRECT- (VIRTUAL): /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Database.h:(1487,28)  EXPR_CONV.SI64.P64(*((SI64*) (this_22992_V$1174.0.1131.38268->__vptr_V$6ee + EXPR_CONV.SI32.I64(47(SI32)) * 8(I64))))
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,16) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::allocator(std::allocator<char> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::allocator<char>::~allocator(std::allocator<char> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(1243,26) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (756,35) std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<SAMRAI::tbox::Database, __gnu_cxx::_S_atomic> *) const
  -> (756,49) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (756,49) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (756,49) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INDIRECT- (VIRTUAL): (756,49)  EXPR_CONV.SI64.P64(*((SI64*) (__$U156_V$12d8.0.1221->__vptr_V$6ee + EXPR_CONV.SI32.I64(10(SI32)) * 8(I64))))
  -> INLINE: (756,49) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(747,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat8CellDataIdE12putToRestartERKSt10shared_ptrINS_4tbox8DatabaseEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:747

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :     357
            Global    :      96
            Local     :     261
        Regenerable   :     123
        Spilled       :       3
        
    Routine stack
        Variables     :      90 bytes*
            Reads     :      25 [1.40e+01 ~ 8.3%]
            Writes    :      19 [2.00e+00 ~ 1.2%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::copyWithRotation(SAMRAI::pdat::CellData<Real> *, const SAMRAI::pdat::CellData<Real> &, const SAMRAI::pdat::CellOverlap &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellData<Real>::copyWithRotation(SAMRAI::pdat::CellData<Real> *, const SAMRAI::pdat::CellData<Real> &, const SAMRAI::pdat::CellOverlap &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(316,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<int>::getPointer(SAMRAI::pdat::ArrayData<int> *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(207,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellDataFactory<Real>::CellDataFactory(SAMRAI::pdat::CellDataFactory<Real> *, int, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellDataFactory<Real>::CellDataFactory(SAMRAI::pdat::CellDataFactory<Real> *, int, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(47,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellDataFactory<Real>::CellDataFactory(SAMRAI::pdat::CellDataFactory<Real> *, int, const SAMRAI::hier::IntVector &, SAMRAI::tbox::ResourceAllocator)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CellDataFactory<Real>::CellDataFactory(SAMRAI::pdat::CellDataFactory<Real> *, int, const SAMRAI::hier::IntVector &, SAMRAI::tbox::ResourceAllocator)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(61,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellDataFactory<Real>::~CellDataFactory(SAMRAI::pdat::CellDataFactory<Real> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellDataFactory<Real>::~CellDataFactory(SAMRAI::pdat::CellDataFactory<Real> *)) [1234] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(68,1)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(68,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat15CellDataFactoryIdED1Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp:68

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      18
            Global    :       6
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellDataFactory<Real>::~CellDataFactory(SAMRAI::pdat::CellDataFactory<Real> *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellDataFactory<Real>::~CellDataFactory(SAMRAI::pdat::CellDataFactory<Real> *const)) [1235] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(67,24)
  -> INLINE: (67,24) SAMRAI::pdat::CellDataFactory<Real>::~CellDataFactory(SAMRAI::pdat::CellDataFactory<Real> *)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(67,24):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat15CellDataFactoryIdED0Ev] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp:67

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rdi r15]
        
    Routine temporaries
        Total         :      19
            Global    :       7
            Local     :      12
        Regenerable   :       1
        Spilled       :       1
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellDataFactory<Real>::cloneFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, SAMRAI::pdat::CellDataFactory<Real> *, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellDataFactory<Real>::cloneFactory(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, SAMRAI::pdat::CellDataFactory<Real> *, const SAMRAI::hier::IntVector &)) [1236] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(83,1)
  -> INLINE: (87,7) std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (88,10) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, void>(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (88,10) std::make_shared<SAMRAI::pdat::CellDataFactory<Real>, int &, const SAMRAI::hier::IntVector &, SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *, int &, const SAMRAI::hier::IntVector &, SAMRAI::tbox::ResourceAllocator &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &>(std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellDataFactory<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &>::type, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &>::type &&, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &>::type, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &>::type &&, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const SAMRAI::hier::IntVector &, SAMRAI::tbox::ResourceAllocator &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &&, int &, const SAMRAI::hier::IntVector &, SAMRAI::tbox::ResourceAllocator &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> *, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::construct<SAMRAI::pdat::CellDataFactory<Real>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, SAMRAI::pdat::CellDataFactory<Real> *, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellDataFactory<Real>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, SAMRAI::pdat::CellDataFactory<Real> *, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, SAMRAI::tbox::ResourceAllocator &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>::construct<SAMRAI::pdat::CellDataFactory<Real>, int &, const SAMRAI::hier::IntVector &, SAMRAI::tbox::ResourceAllocator &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> *, SAMRAI::pdat::CellDataFactory<Real> *, int &, const SAMRAI::hier::IntVector &, SAMRAI::tbox::ResourceAllocator &)
                            -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellDataFactory<Real>::CellDataFactory(SAMRAI::pdat::CellDataFactory<Real> *, int, const SAMRAI::hier::IntVector &, SAMRAI::tbox::ResourceAllocator)
  -> INLINE: (90,7) std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (91,10) std::shared_ptr<SAMRAI::hier::PatchDataFactory>::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, void>(std::shared_ptr<SAMRAI::hier::PatchDataFactory> *, std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (91,10) std::make_shared<SAMRAI::pdat::CellDataFactory<Real>, int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *, int &, const SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellDataFactory<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &>::type, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &>::type &&, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &>::type, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &>::type &&, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &&, int &, const SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellDataFactory<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> *, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::construct<SAMRAI::pdat::CellDataFactory<Real>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, SAMRAI::pdat::CellDataFactory<Real> *, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellDataFactory<Real>, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> &, SAMRAI::pdat::CellDataFactory<Real> *, int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type>::construct<SAMRAI::pdat::CellDataFactory<Real>, int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellDataFactory<Real>>::type>::type> *, SAMRAI::pdat::CellDataFactory<Real> *, int &, const SAMRAI::hier::IntVector &)
                            -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellDataFactory<Real>::CellDataFactory(SAMRAI::pdat::CellDataFactory<Real> *, int, const SAMRAI::hier::IntVector &)


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(83,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat15CellDataFactoryIdE12cloneFactoryERKNS_4hier9IntVectorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp:83

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rsi rdi r12-r15]
        
    Routine temporaries
        Total         :     120
            Global    :      33
            Local     :      87
        Regenerable   :      16
        Spilled       :       5
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       6 [0.00e+00 ~ 0.0%]
            Writes    :       8 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellDataFactory<Real>::allocate(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::pdat::CellDataFactory<Real> *, const SAMRAI::hier::Patch &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellDataFactory<Real>::allocate(std::shared_ptr<SAMRAI::hier::PatchData> *, const SAMRAI::pdat::CellDataFactory<Real> *, const SAMRAI::hier::Patch &) const) [1243] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(107,1)
  -> INLINE: (111,7) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,14) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr<SAMRAI::pdat::CellData<Real>, void>(std::shared_ptr<SAMRAI::hier::PatchData> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (111,14) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, const SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, const SAMRAI::tbox::ResourceAllocator &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, const SAMRAI::tbox::ResourceAllocator &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, const SAMRAI::tbox::ResourceAllocator &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &, const SAMRAI::tbox::ResourceAllocator &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, const SAMRAI::tbox::ResourceAllocator &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &, const SAMRAI::tbox::ResourceAllocator &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::tbox::ResourceAllocator)
  -> INLINE: (112,22) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const
  -> INLINE: (117,7) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (117,14) std::shared_ptr<SAMRAI::hier::PatchData>::shared_ptr<SAMRAI::pdat::CellData<Real>, void>(std::shared_ptr<SAMRAI::hier::PatchData> *, std::shared_ptr<SAMRAI::pdat::CellData<Real>> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (117,14) std::make_shared<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr.h:(613,14) std::allocate_shared<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
      -> INLINE: (598,9) std::shared_ptr<SAMRAI::pdat::CellData<Real>>::shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::shared_ptr<SAMRAI::pdat::CellData<Real>> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
        -> INLINE: (316,34) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *const, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
          -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(954,2) std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::__shared_ptr<SAMRAI::pdat::CellData<Real>, __gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
            -> INLINE: (957,5) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::__shared_count<__gnu_cxx::_S_atomic> *, std::_Sp_make_shared_tag, SAMRAI::pdat::CellData<Real> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
              -> INLINE: (502,8) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)->std::enable_if<true, void>::type
                -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>>::_S_construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::rebind_alloc<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> &, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::remove_reference<const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &>::type &&, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
                  -> INLINE: (254,8) __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>>::construct<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>> *, std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, const std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &&, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                    -> INLINE: /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic>::_Sp_counted_ptr_inplace<const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::_Sp_counted_ptr_inplace<SAMRAI::pdat::CellData<Real>, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>, __gnu_cxx::_S_atomic> *, std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
                      -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(399,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)->std::enable_if<true, void>::type
                        -> INLINE: /usr/include/c++/4.8.5/bits/alloc_traits.h:(393,4) std::allocator_traits<std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>>::_S_construct<SAMRAI::pdat::CellData<Real>, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &>(std::allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> &, SAMRAI::pdat::CellData<Real> *, const std::list<SAMRAI::hier::Box, std::allocator<SAMRAI::hier::Box>>::value_type &, const int &, const std::vector<SAMRAI::hier::IntVector, std::allocator<SAMRAI::hier::IntVector>>::value_type &)
                          -> INLINE: (254,8) __gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type>::construct<SAMRAI::pdat::CellData<Real>, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &>(__gnu_cxx::new_allocator<std::remove_const<std::remove_volatile<SAMRAI::pdat::CellData<Real>>::type>::type> *, SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, const int &, const SAMRAI::hier::IntVector &)
                            -> /usr/include/c++/4.8.5/ext/new_allocator.h:(120,27) SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
  -> INLINE: (118,20) SAMRAI::hier::Patch::getBox(const SAMRAI::hier::Patch *) const


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/ext/new_allocator.h(120,27):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(107,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat15CellDataFactoryIdE8allocateERKNS_4hier5PatchE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp:107

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rsi rdi r8 r13-r15]
        
    Routine temporaries
        Total         :     130
            Global    :      31
            Local     :      99
        Regenerable   :      16
        Spilled       :       4
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       6 [0.00e+00 ~ 0.0%]
            Writes    :       8 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::tbox::ResourceAllocator)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellData<Real>::CellData(SAMRAI::pdat::CellData<Real> *, const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &, SAMRAI::tbox::ResourceAllocator)) [1245] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(98,1)
  -> (91,17) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
  -> INLINE: (91,17) std::shared_ptr<SAMRAI::pdat::ArrayData<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::ArrayData<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (103,11) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (103,11) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (103,11) std::shared_ptr<SAMRAI::tbox::Timer>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (103,11) std::shared_ptr<SAMRAI::tbox::Timer>::operator=(std::shared_ptr<SAMRAI::tbox::Timer> *, std::shared_ptr<SAMRAI::tbox::Timer> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (104,16) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (104,16) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (104,16) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (106,11) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::reset<SAMRAI::pdat::ArrayData<Real>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
    -> INLINE: /usr/include/c++/4.8.5/bits/shared_ptr_base.h:(890,17) std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic>::__shared_ptr<SAMRAI::pdat::ArrayData<Real>>(std::__shared_ptr<SAMRAI::pdat::ArrayData<Real>, __gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
      -> INLINE: (739,36) std::__shared_count<__gnu_cxx::_S_atomic>::__shared_count<SAMRAI::pdat::ArrayData<Real> *>(std::__shared_count<__gnu_cxx::_S_atomic> *, SAMRAI::pdat::ArrayData<Real> *)
        -> (456,8) SAMRAI::pdat::ArrayData<Real>::~ArrayData(SAMRAI::pdat::ArrayData<Real> *)
  -> INLINE: (106,37) SAMRAI::hier::PatchData::getGhostBox(const SAMRAI::hier::PatchData *) const
  -> INLINE: (106,59) SAMRAI::pdat::ArrayData<Real>::ArrayData(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Box &, unsigned int, SAMRAI::tbox::ResourceAllocator)
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(122,18) std::allocator<double>::~allocator(std::allocator<double> *)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(127,17) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
        -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::allocator<double>::allocator(std::allocator<double> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::vector<double, std::allocator<double>>::vector(std::vector<double, std::allocator<double>> *, std::vector<double, std::allocator<double>>::size_type, const std::vector<double, std::allocator<double>>::allocator_type &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> DELETED: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(133,22) std::allocator<double>::~allocator(std::allocator<double> *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(107,59)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(107,59)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(107,59)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(107,59)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_algobase.h(749,7) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(107,59)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(789,7):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/stl_algobase.h(749,7):remark #34026: call to memset implemented as a call to optimized library version
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp(98,1):remark #34051: REGISTER ALLOCATION : [_ZN6SAMRAI4pdat8CellDataIdEC1ERKNS_4hier3BoxEiRKNS3_9IntVectorENS_4tbox17ResourceAllocatorE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:98

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     188
            Global    :      52
            Local     :     136
        Regenerable   :      35
        Spilled       :       6
        
    Routine stack
        Variables     :      51 bytes*
            Reads     :       9 [5.67e+00 ~ 2.5%]
            Writes    :      13 [6.00e+00 ~ 2.7%]
        Spills        :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [1.00e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellDataFactory<Real>::getBoxGeometry(std::shared_ptr<SAMRAI::hier::BoxGeometry> *, const SAMRAI::pdat::CellDataFactory<Real> *, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellDataFactory<Real>::getBoxGeometry(std::shared_ptr<SAMRAI::hier::BoxGeometry> *, const SAMRAI::pdat::CellDataFactory<Real> *, const SAMRAI::hier::Box &) const) [1250] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(136,1)
  -> INLINE: (139,4) std::shared_ptr<SAMRAI::pdat::CellGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (139,11) std::shared_ptr<SAMRAI::hier::BoxGeometry>::shared_ptr<SAMRAI::pdat::CellGeometry, void>(std::shared_ptr<SAMRAI::hier::BoxGeometry> *, std::shared_ptr<SAMRAI::pdat::CellGeometry> &&)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (139,11) std::make_shared<SAMRAI::pdat::CellGeometry, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &>(std::shared_ptr<SAMRAI::pdat::CellGeometry> *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(798,2):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(136,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat15CellDataFactoryIdE14getBoxGeometryERKNS_4hier3BoxE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp:136

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rbx rbp rsi rdi r14-r15]
        
    Routine temporaries
        Total         :      67
            Global    :      20
            Local     :      47
        Regenerable   :       8
        Spilled       :       4
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       3 [0.00e+00 ~ 0.0%]
            Writes    :       4 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellDataFactory<Real>::getSizeOfMemory(const SAMRAI::pdat::CellDataFactory<Real> *, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellDataFactory<Real>::getSizeOfMemory(const SAMRAI::pdat::CellDataFactory<Real> *, const SAMRAI::hier::Box &) const) [1255] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(161,1)
  -> INLINE: (167,7) SAMRAI::pdat::CellData<Real>::getSizeOfData(const SAMRAI::hier::Box &, int, const SAMRAI::hier::IntVector &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(59,32) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1232,11) SAMRAI::hier::Box::grow(SAMRAI::hier::Box *, const SAMRAI::hier::IntVector &)
        -> INLINE: (903,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: (904,21) SAMRAI::hier::IntVector::getNumBlocks(const SAMRAI::hier::IntVector *) const
        -> INLINE: (905,45) SAMRAI::hier::BlockId::getBlockValue(const SAMRAI::hier::BlockId *) const
        -> INLINE: (906,42) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (906,42) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: (906,51) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (906,51) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (907,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
        -> INLINE: (907,33) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,31) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (908,20) SAMRAI::hier::Index::operator()(SAMRAI::hier::Index *, unsigned int)
        -> INLINE: (908,33) SAMRAI::hier::IntVector::operator()(const SAMRAI::hier::IntVector *, SAMRAI::hier::BlockId::block_t, unsigned int) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(343,31) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (911,18) SAMRAI::hier::Index::operator-=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(300,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(301,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
        -> INLINE: (912,18) SAMRAI::hier::Index::operator+=(SAMRAI::hier::Index *, const SAMRAI::hier::IntVector &)
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(178,42) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h:(179,27) SAMRAI::hier::IntVector::operator[](const SAMRAI::hier::IntVector *, unsigned int) const
            -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(272,22) std::vector<int, std::allocator<int>>::operator[](const std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(60,11) SAMRAI::pdat::ArrayData<Real>::getSizeOfData(const SAMRAI::hier::Box &, unsigned int)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp:(77,44) SAMRAI::hier::Box::size(const SAMRAI::hier::Box *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(654,12) SAMRAI::hier::Box::empty(const SAMRAI::hier::Box *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
            -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (604,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
          -> INLINE: (605,21) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
          -> INLINE: (605,31) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,44) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(655,54) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,32) SAMRAI::hier::Box::getDim(const SAMRAI::hier::Box *) const
          -> INLINE: (1299,19) SAMRAI::hier::Index::getDim(const SAMRAI::hier::Index *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(656,41) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,48) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const
        -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(657,58) SAMRAI::hier::Index::operator()(const SAMRAI::hier::Index *, unsigned int) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(168,7)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(906,51) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(168,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(300,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(168,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Index.h(178,42) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(168,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(168,7)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(604,55) ]
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(168,7)
   remark #15315: loop was not vectorized: estimated number of iterations (3) is insufficient for vectorization
   remark #25439: unrolled with remainder by 8  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(656,41) inlined into /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(168,7)
<Remainder>
   remark #25436: completely unrolled by 7  
LOOP END

    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(161,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat15CellDataFactoryIdE15getSizeOfMemoryERKNS_4hier3BoxE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp:161

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     284
            Global    :      46
            Local     :     238
        Regenerable   :       6
        Spilled       :       6
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :      82 [1.35e+01 ~ 13.7%]
            Writes    :      38 [1.54e+00 ~ 1.6%]
        Spills        :      16 bytes*
            Reads     :       2 [3.96e-01 ~ 0.4%]
            Writes    :       2 [1.37e-03 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellDataFactory<Real>::fineBoundaryRepresentsVariable(const SAMRAI::pdat::CellDataFactory<Real> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellDataFactory<Real>::fineBoundaryRepresentsVariable(const SAMRAI::pdat::CellDataFactory<Real> *) const) [1256] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(213,1)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(213,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat15CellDataFactoryIdE30fineBoundaryRepresentsVariableEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp:213

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellDataFactory<Real>::dataLivesOnPatchBorder(const SAMRAI::pdat::CellDataFactory<Real> *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellDataFactory<Real>::dataLivesOnPatchBorder(const SAMRAI::pdat::CellDataFactory<Real> *) const) [1257] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(229,1)


    Report from: Code generation optimizations [cg]

/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(229,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat15CellDataFactoryIdE22dataLivesOnPatchBorderEv] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp:229

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::CellDataFactory<Real>::validCopyTo(const SAMRAI::pdat::CellDataFactory<Real> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SAMRAI::pdat::CellDataFactory<Real>::validCopyTo(const SAMRAI::pdat::CellDataFactory<Real> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &) const) [1258] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(184,1)
  -> INLINE: (193,7) std::dynamic_pointer_cast<SAMRAI::pdat::CellDataFactory<Real>, SAMRAI::hier::PatchDataFactory>(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *, const std::shared_ptr<SAMRAI::hier::PatchDataFactory> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (195,8) std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic>::operator bool(const std::__shared_ptr<SAMRAI::pdat::CellDataFactory<Real>, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (198,4) std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>>::~shared_ptr(std::shared_ptr<SAMRAI::pdat::CellDataFactory<Real>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp(184,1):remark #34051: REGISTER ALLOCATION : [_ZNK6SAMRAI4pdat15CellDataFactoryIdE11validCopyToERKSt10shared_ptrINS_4hier16PatchDataFactoryEE] /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellDataFactory.cpp:184

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r12-r14]
        
    Routine temporaries
        Total         :      41
            Global    :      19
            Local     :      22
        Regenerable   :      12
        Spilled       :       3
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       4 [9.81e-01 ~ 1.9%]
            Writes    :       4 [2.00e+00 ~ 3.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::canEstimateStreamSizeFromBox()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::canEstimateStreamSizeFromBox()) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(63,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getSizeOfData(const SAMRAI::hier::Box &, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getSizeOfData(const SAMRAI::hier::Box &, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(76,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::ArrayData(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Box &, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::ArrayData(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Box &, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(105,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::ArrayData(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Box &, unsigned int, SAMRAI::tbox::ResourceAllocator)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::ArrayData(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Box &, unsigned int, SAMRAI::tbox::ResourceAllocator)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(136,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getBox(const SAMRAI::pdat::ArrayData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(171,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getDepth(const SAMRAI::pdat::ArrayData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(178,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getOffset(const SAMRAI::pdat::ArrayData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(185,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getPointer(SAMRAI::pdat::ArrayData<Real> *, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(207,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getPointer(const SAMRAI::pdat::ArrayData<Real> *, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(217,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::operator()(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(247,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(284,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::copy(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::Transformation &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(450,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::copyDepth(SAMRAI::pdat::ArrayData<Real> *, unsigned int, const SAMRAI::pdat::ArrayData<Real> &, unsigned int, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::copyDepth(SAMRAI::pdat::ArrayData<Real> *, unsigned int, const SAMRAI::pdat::ArrayData<Real> &, unsigned int, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(475,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(549,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::sum(SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::pdat::ArrayData<Real> &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(749,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getDataStreamSize(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getDataStreamSize(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(761,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::unpackStream(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::unpackStream(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::BoxContainer &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(929,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::unpackStreamAndSum(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::unpackStreamAndSum(SAMRAI::pdat::ArrayData<Real> *, SAMRAI::tbox::MessageStream &, const SAMRAI::hier::Box &, const SAMRAI::hier::IntVector &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(966,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getFromRestart(SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getFromRestart(SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1197,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::putToRestart(const SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::putToRestart(const SAMRAI::pdat::ArrayData<Real> *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1231,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getDim(const SAMRAI::pdat::ArrayData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1250,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::packBuffer(const SAMRAI::pdat::ArrayData<Real> *, Real *, const SAMRAI::hier::Box &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::packBuffer(const SAMRAI::pdat::ArrayData<Real> *, Real *, const SAMRAI::hier::Box &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1287,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::unpackBuffer(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::unpackBuffer(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1306,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::unpackBufferAndSum(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::unpackBufferAndSum(SAMRAI::pdat::ArrayData<Real> *, const Real *, const SAMRAI::hier::Box &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(1334,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::getIndex(const SAMRAI::pdat::ArrayData<Real> *, const SAMRAI::hier::Index &, unsigned int) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(194,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::CopyOperation<Real>::operator()(const SAMRAI::pdat::CopyOperation<Real> *, Real &, const Real &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CopyOperation.cpp(30,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<Real> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::CopyOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::CopyOperation<Real> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(267,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::SumOperation<Real>::operator()(const SAMRAI::pdat::SumOperation<Real> *, Real &, const Real &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::SumOperation<Real>::operator()(const SAMRAI::pdat::SumOperation<Real> *, Real &, const Real &) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/SumOperation.cpp(35,1)

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::SumOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::SumOperation<Real> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayDataOperationUtilities<Real, SAMRAI::pdat::SumOperation<Real>>::doArrayDataBufferOperationOnBox(const SAMRAI::pdat::ArrayData<Real> &, const Real *, const SAMRAI::hier::Box &, bool, const SAMRAI::pdat::SumOperation<Real> &)) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayDataOperationUtilities.cpp(267,1)

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [1520] <compiler generated>
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN6SAMRAI4pdat8CellDataIdE6t_copyE()
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/CellData.cpp:(38,46) std::shared_ptr<SAMRAI::tbox::Timer>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Timer> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN22FlowModelSingleSpecies23s_variable_total_energyE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:(14,70) std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN22FlowModelSingleSpecies19s_variable_momentumE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:(13,70) std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: /usr/include/c++/4.8.5/iostream:(74,25) __sti___ZN22FlowModelSingleSpecies18s_variable_densityE()
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:(12,70) std::shared_ptr<SAMRAI::pdat::CellVariable<Real>>::shared_ptr(std::shared_ptr<SAMRAI::pdat::CellVariable<Real>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 8)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (8, 0)
<compiler generated>:remark #34051: REGISTER ALLOCATION : [__sti__$E] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rax rdx rsi rdi r12]
        
    Routine temporaries
        Total         :      37
            Global    :      13
            Local     :      24
        Regenerable   :      29
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __sti___ZN22FlowModelSingleSpecies18s_variable_densityE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN22FlowModelSingleSpecies18s_variable_densityE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN22FlowModelSingleSpecies19s_variable_momentumE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN22FlowModelSingleSpecies19s_variable_momentumE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN22FlowModelSingleSpecies23s_variable_total_energyE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN22FlowModelSingleSpecies23s_variable_total_energyE()) <compiler generated>

===========================================================================

Begin optimization report for: __sti___ZN6SAMRAI4pdat8CellDataIdE6t_copyE()

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__sti___ZN6SAMRAI4pdat8CellDataIdE6t_copyE()) <compiler generated>

===========================================================================

Begin optimization report for: SAMRAI::pdat::ArrayData<Real>::isInitialized(const SAMRAI::pdat::ArrayData<Real> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::pdat::ArrayData<Real>::isInitialized(const SAMRAI::pdat::ArrayData<Real> *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/pdat/ArrayData.cpp(164,1)

===========================================================================

Begin optimization report for: std::_Hashtable<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>>::_M_find_before_node(const std::_Hashtable<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>> *, std::_Hashtable<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>>::size_type, const std::_Hashtable<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>>::key_type &, std::_Hashtable<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>>::__hash_code) const

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/hashtable.h(1163,15)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(255,16):remark #34026: call to memcmp implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/hashtable.h(1158,5):remark #34051: REGISTER ALLOCATION : [_ZNKSt10_HashtableISsSt4pairIKSsN6SAMRAI4hier9IntVectorEESaIS5_ENSt8__detail10_Select1stESt8equal_toISsESt4hashISsENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRKSsm] /usr/include/c++/4.8.5/bits/hashtable.h:1158

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      37
            Global    :      20
            Local     :      17
        Regenerable   :       4
        Spilled       :       6
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      48 bytes*
            Reads     :      18 [5.70e+00 ~ 7.7%]
            Writes    :       6 [5.70e+00 ~ 7.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Hashtable<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>>::find(const std::_Hashtable<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>> *, const std::_Hashtable<std::string, std::pair<const std::string, SAMRAI::hier::IntVector>, std::allocator<std::pair<const std::string, SAMRAI::hier::IntVector>>, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__umap_traits<true>>::key_type &) const

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/hashtable.h(1163,15) inlined into /usr/include/c++/4.8.5/bits/hashtable.h(1043,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(255,16):remark #34026: call to memcmp implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/hashtable.h(1039,5):remark #34051: REGISTER ALLOCATION : [_ZNKSt10_HashtableISsSt4pairIKSsN6SAMRAI4hier9IntVectorEESaIS5_ENSt8__detail10_Select1stESt8equal_toISsESt4hashISsENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERKSs] /usr/include/c++/4.8.5/bits/hashtable.h:1039

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :      55
            Global    :      23
            Local     :      32
        Regenerable   :       6
        Spilled       :       6
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       3 [1.00e+00 ~ 1.2%]
            Writes    :       3 [1.00e+00 ~ 1.2%]
        Spills        :      32 bytes*
            Reads     :      12 [3.80e+00 ~ 4.7%]
            Writes    :       4 [3.80e+00 ~ 4.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModelSingleSpecies::initializeImmersedBoundaryMethod(FlowModelSingleSpecies *, const std::shared_ptr<ImmersedBoundaries> &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModelSingleSpecies::initializeImmersedBoundaryMethod(FlowModelSingleSpecies *, const std::shared_ptr<ImmersedBoundaries> &, const std::shared_ptr<SAMRAI::tbox::Database> &)) [1598] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(468,1)
  -> DELETED: (472,43) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (472,43) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (472,43) std::__shared_ptr<FlowModelImmersedBoundaryMethod, __gnu_cxx::_S_atomic>::reset<FlowModelImmersedBoundaryMethodSingleSpecies>(std::__shared_ptr<FlowModelImmersedBoundaryMethod, __gnu_cxx::_S_atomic> *, FlowModelImmersedBoundaryMethodSingleSpecies *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (474,13) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (474,13) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (474,13) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp(468,1):remark #34051: REGISTER ALLOCATION : [_ZN22FlowModelSingleSpecies32initializeImmersedBoundaryMethodERKSt10shared_ptrI18ImmersedBoundariesERKS0_IN6SAMRAI4tbox8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/single-species/FlowModelSingleSpecies.cpp:468

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8-r9 r13-r15]
        
    Routine temporaries
        Total         :      96
            Global    :      29
            Local     :      67
        Regenerable   :      22
        Spilled       :       5
        
    Routine stack
        Variables     :      19 bytes*
            Reads     :       4 [1.00e+00 ~ 1.3%]
            Writes    :       4 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
