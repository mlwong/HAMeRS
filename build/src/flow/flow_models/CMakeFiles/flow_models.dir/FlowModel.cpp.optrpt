Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: FlowModelBasicUtilities::setFlowModel(FlowModelBasicUtilities *, const std::weak_ptr<FlowModel> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelBasicUtilities::setFlowModel(FlowModelBasicUtilities *, const std::weak_ptr<FlowModel> &)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp(48,9)

===========================================================================

Begin optimization report for: FlowModelDiffusiveFluxUtilities::setFlowModel(FlowModelDiffusiveFluxUtilities *, const std::weak_ptr<FlowModel> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelDiffusiveFluxUtilities::setFlowModel(FlowModelDiffusiveFluxUtilities *, const std::weak_ptr<FlowModel> &)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelDiffusiveFluxUtilities.hpp(39,9)

===========================================================================

Begin optimization report for: FlowModelImmersedBoundaryMethod::setFlowModel(FlowModelImmersedBoundaryMethod *, const std::weak_ptr<FlowModel> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelImmersedBoundaryMethod::setFlowModel(FlowModelImmersedBoundaryMethod *, const std::weak_ptr<FlowModel> &)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelImmersedBoundaryMethod.hpp(51,9)

===========================================================================

Begin optimization report for: FlowModelMonitoringStatisticsUtilities::setFlowModel(FlowModelMonitoringStatisticsUtilities *, const std::weak_ptr<FlowModel> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelMonitoringStatisticsUtilities::setFlowModel(FlowModelMonitoringStatisticsUtilities *, const std::weak_ptr<FlowModel> &)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp(32,9)

===========================================================================

Begin optimization report for: FlowModelRiemannSolver::setFlowModel(FlowModelRiemannSolver *, const std::weak_ptr<FlowModel> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelRiemannSolver::setFlowModel(FlowModelRiemannSolver *, const std::weak_ptr<FlowModel> &)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelRiemannSolver.hpp(44,9)

===========================================================================

Begin optimization report for: FlowModelSourceUtilities::setFlowModel(FlowModelSourceUtilities *, const std::weak_ptr<FlowModel> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelSourceUtilities::setFlowModel(FlowModelSourceUtilities *, const std::weak_ptr<FlowModel> &)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelSourceUtilities.hpp(41,9)

===========================================================================

Begin optimization report for: FlowModelStatisticsUtilities::setFlowModel(FlowModelStatisticsUtilities *, const std::weak_ptr<FlowModel> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (FlowModelStatisticsUtilities::setFlowModel(FlowModelStatisticsUtilities *, const std::weak_ptr<FlowModel> &)) /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp(52,9)

===========================================================================

Begin optimization report for: FlowModel::FlowModel(FlowModel *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::FlowModel(FlowModel *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)) [9] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(26,1)
  -> INLINE: (3,12) std::shared_ptr<EquationOfStateMixingRules>::shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3,12) std::shared_ptr<EquationOfStateMixingRulesManager>::shared_ptr(std::shared_ptr<EquationOfStateMixingRulesManager> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3,12) std::shared_ptr<SAMRAI::hier::VariableContext>::shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3,12) std::shared_ptr<FlowModelStatisticsUtilities>::shared_ptr(std::shared_ptr<FlowModelStatisticsUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3,12) std::shared_ptr<FlowModelMonitoringStatisticsUtilities>::shared_ptr(std::shared_ptr<FlowModelMonitoringStatisticsUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3,12) std::shared_ptr<FlowModelImmersedBoundaryMethod>::shared_ptr(std::shared_ptr<FlowModelImmersedBoundaryMethod> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3,12) std::shared_ptr<FlowModelBoundaryUtilities>::shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3,12) std::shared_ptr<FlowModelSourceUtilities>::shared_ptr(std::shared_ptr<FlowModelSourceUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3,12) std::shared_ptr<FlowModelDiffusiveFluxUtilities>::shared_ptr(std::shared_ptr<FlowModelDiffusiveFluxUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3,12) std::shared_ptr<FlowModelBasicUtilities>::shared_ptr(std::shared_ptr<FlowModelBasicUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3,12) std::shared_ptr<FlowModelRiemannSolver>::shared_ptr(std::shared_ptr<FlowModelRiemannSolver> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3,12) std::shared_ptr<SAMRAI::hier::VariableContext>::shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (3,12) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
  -> (3,12) std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::~vector(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)
  -> (3,12) std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::vector(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)
  -> (3,12) std::shared_ptr<EquationOfStateMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRulesManager> *)
  -> (3,12) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
  -> INLINE: (3,12) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3,12) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3,12) std::enable_shared_from_this<FlowModel>::~enable_shared_from_this(std::enable_shared_from_this<FlowModel> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (3,12) std::enable_shared_from_this<FlowModel>::enable_shared_from_this(std::enable_shared_from_this<FlowModel> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (11,23) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (12,24) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (14,25) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (14,25) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
  -> INLINE: (17,25) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *, const std::shared_ptr<SAMRAI::tbox::Database> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (17,25) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
  -> INLINE: (18,22) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
      -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
      -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
  -> INLINE: (18,23) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (20,24) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (21,21) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (22,25) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (23,26) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
  -> INLINE: (24,25) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
    -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(18,22)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between this (558:18) and *(this+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(18,22)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(1191,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(26,1):remark #34051: REGISTER ALLOCATION : [_ZN9FlowModelC1ERKSsS1_RKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKiSE_RKS7_INS3_8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:26

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :     178
            Global    :      45
            Local     :     133
        Regenerable   :      15
        Spilled       :      15
        
    Routine stack
        Variables     :      11 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       9 [0.00e+00 ~ 0.0%]
        Spills        :      72 bytes*
            Reads     :       9 [1.00e+00 ~ 0.5%]
            Writes    :       9 [9.00e+00 ~ 4.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::enable_shared_from_this<FlowModel>::~enable_shared_from_this(std::enable_shared_from_this<FlowModel> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(552,34):remark #34051: REGISTER ALLOCATION : [_ZNSt23enable_shared_from_thisI9FlowModelED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:552

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rcx rdi]
        
    Routine temporaries
        Total         :      18
            Global    :       9
            Local     :       9
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4geom21CartesianGridGeometryEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4tbox8DatabaseEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI26EquationOfStateMixingRulesED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<EquationOfStateMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRulesManager> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrI33EquationOfStateMixingRulesManagerED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::vector(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(249,17):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIN8EQN_FORM4TYPEESaIS1_EEC1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:249

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::~vector(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(415,7):remark #34051: REGISTER ALLOCATION : [_ZNSt6vectorIN8EQN_FORM4TYPEESaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:415

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::~_Vector_base(std::_Vector_base<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/stl_vector.h(160,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIN8EQN_FORM4TYPEESaIS1_EED1Ev] /usr/include/c++/4.8.5/bits/stl_vector.h:160

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :      10
            Global    :       7
            Local     :       3
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr.h(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt10shared_ptrIN6SAMRAI4hier15VariableContextEED1Ev] /usr/include/c++/4.8.5/bits/shared_ptr.h:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rdi r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      12
            Local     :      12
        Regenerable   :       3
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::FlowModel(FlowModel *const, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::FlowModel(FlowModel *const, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)) [21] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(3,12)
  -> INLINE: (3,12) FlowModel::FlowModel(FlowModel *, const std::string &, const std::string &, const SAMRAI::tbox::Dimension &, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &, const int &, const int &, const std::shared_ptr<SAMRAI::tbox::Database> &)
    -> INLINE: (3,12) std::enable_shared_from_this<FlowModel>::enable_shared_from_this(std::enable_shared_from_this<FlowModel> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (3,12) std::enable_shared_from_this<FlowModel>::~enable_shared_from_this(std::enable_shared_from_this<FlowModel> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (3,12) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (3,12) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> (3,12) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
    -> (3,12) std::shared_ptr<EquationOfStateMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRulesManager> *)
    -> (3,12) std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::vector(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)
    -> (3,12) std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::~vector(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)
    -> (3,12) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
    -> INLINE: (3,12) std::shared_ptr<SAMRAI::hier::VariableContext>::shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (3,12) std::shared_ptr<FlowModelRiemannSolver>::shared_ptr(std::shared_ptr<FlowModelRiemannSolver> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (3,12) std::shared_ptr<FlowModelBasicUtilities>::shared_ptr(std::shared_ptr<FlowModelBasicUtilities> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (3,12) std::shared_ptr<FlowModelDiffusiveFluxUtilities>::shared_ptr(std::shared_ptr<FlowModelDiffusiveFluxUtilities> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (3,12) std::shared_ptr<FlowModelSourceUtilities>::shared_ptr(std::shared_ptr<FlowModelSourceUtilities> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (3,12) std::shared_ptr<FlowModelBoundaryUtilities>::shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (3,12) std::shared_ptr<FlowModelImmersedBoundaryMethod>::shared_ptr(std::shared_ptr<FlowModelImmersedBoundaryMethod> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (3,12) std::shared_ptr<FlowModelMonitoringStatisticsUtilities>::shared_ptr(std::shared_ptr<FlowModelMonitoringStatisticsUtilities> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (3,12) std::shared_ptr<FlowModelStatisticsUtilities>::shared_ptr(std::shared_ptr<FlowModelStatisticsUtilities> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (3,12) std::shared_ptr<SAMRAI::hier::VariableContext>::shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (3,12) std::shared_ptr<EquationOfStateMixingRulesManager>::shared_ptr(std::shared_ptr<EquationOfStateMixingRulesManager> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (3,12) std::shared_ptr<EquationOfStateMixingRules>::shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (11,23) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (12,24) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> (14,25) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
    -> INLINE: (14,25) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *, const std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> (17,25) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
    -> INLINE: (17,25) std::shared_ptr<SAMRAI::tbox::Database>::shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *, const std::shared_ptr<SAMRAI::tbox::Database> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (18,22) SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(717,11) SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)
        -> INLINE: (556,44) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
        -> INLINE: (558,18) std::vector<int, std::allocator<int>>::operator[](std::vector<int, std::allocator<int>> *, std::vector<int, std::allocator<int>>::size_type)
    -> INLINE: (18,23) SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1146,27) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (20,24) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (21,21) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (22,25) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (23,26) SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h:(1133,28) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const
    -> INLINE: (24,25) SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)
      -> INLINE: /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h:(1348,29) SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(3,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between this (558:18) and *(this+i*4) (558:18)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(557,7) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(3,12)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(1191,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/usr/include/c++/4.8.5/bits/shared_ptr_base.h(733,17):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (1, 0)
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(3,12):remark #34051: REGISTER ALLOCATION : [_ZN9FlowModelC2ERKSsS1_RKN6SAMRAI4tbox9DimensionERKSt10shared_ptrINS2_4geom21CartesianGridGeometryEERKiSE_RKS7_INS3_8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:3

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :     178
            Global    :      45
            Local     :     133
        Regenerable   :      15
        Spilled       :      15
        
    Routine stack
        Variables     :      11 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       9 [0.00e+00 ~ 0.0%]
        Spills        :      72 bytes*
            Reads     :       9 [1.00e+00 ~ 0.5%]
            Writes    :       9 [9.00e+00 ~ 4.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::~FlowModel(FlowModel *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::~FlowModel(FlowModel *)) [22] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(76,30)
  -> INLINE: (76,31) std::enable_shared_from_this<FlowModel>::~enable_shared_from_this(std::enable_shared_from_this<FlowModel> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<EquationOfStateMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRulesManager> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::~vector(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelRiemannSolver>::~shared_ptr(std::shared_ptr<FlowModelRiemannSolver> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelBasicUtilities>::~shared_ptr(std::shared_ptr<FlowModelBasicUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelDiffusiveFluxUtilities>::~shared_ptr(std::shared_ptr<FlowModelDiffusiveFluxUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelSourceUtilities>::~shared_ptr(std::shared_ptr<FlowModelSourceUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelImmersedBoundaryMethod>::~shared_ptr(std::shared_ptr<FlowModelImmersedBoundaryMethod> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelMonitoringStatisticsUtilities>::~shared_ptr(std::shared_ptr<FlowModelMonitoringStatisticsUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (76,31) std::shared_ptr<FlowModelStatisticsUtilities>::~shared_ptr(std::shared_ptr<FlowModelStatisticsUtilities> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(76,30):remark #34051: REGISTER ALLOCATION : [_ZN9FlowModelD1Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp:76

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :     267
            Global    :     108
            Local     :     159
        Regenerable   :      58
        Spilled       :       3
        
    Routine stack
        Variables     :      11 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::~FlowModel(FlowModel *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::~FlowModel(FlowModel *const)) [23] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(76,17)
  -> INLINE: (76,17) FlowModel::~FlowModel(FlowModel *)
    -> INLINE: (76,31) std::shared_ptr<FlowModelStatisticsUtilities>::~shared_ptr(std::shared_ptr<FlowModelStatisticsUtilities> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::shared_ptr<FlowModelMonitoringStatisticsUtilities>::~shared_ptr(std::shared_ptr<FlowModelMonitoringStatisticsUtilities> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::shared_ptr<FlowModelImmersedBoundaryMethod>::~shared_ptr(std::shared_ptr<FlowModelImmersedBoundaryMethod> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::shared_ptr<FlowModelBoundaryUtilities>::~shared_ptr(std::shared_ptr<FlowModelBoundaryUtilities> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::shared_ptr<FlowModelSourceUtilities>::~shared_ptr(std::shared_ptr<FlowModelSourceUtilities> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::shared_ptr<FlowModelDiffusiveFluxUtilities>::~shared_ptr(std::shared_ptr<FlowModelDiffusiveFluxUtilities> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::shared_ptr<FlowModelBasicUtilities>::~shared_ptr(std::shared_ptr<FlowModelBasicUtilities> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::shared_ptr<FlowModelRiemannSolver>::~shared_ptr(std::shared_ptr<FlowModelRiemannSolver> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::shared_ptr<SAMRAI::hier::VariableContext>::~shared_ptr(std::shared_ptr<SAMRAI::hier::VariableContext> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>>::~vector(std::vector<EQN_FORM::TYPE, std::allocator<EQN_FORM::TYPE>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::shared_ptr<EquationOfStateMixingRulesManager>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRulesManager> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::shared_ptr<EquationOfStateMixingRules>::~shared_ptr(std::shared_ptr<EquationOfStateMixingRules> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::shared_ptr<SAMRAI::tbox::Database>::~shared_ptr(std::shared_ptr<SAMRAI::tbox::Database> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::shared_ptr<SAMRAI::geom::CartesianGridGeometry>::~shared_ptr(std::shared_ptr<SAMRAI::geom::CartesianGridGeometry> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
    -> INLINE: (76,31) std::enable_shared_from_this<FlowModel>::~enable_shared_from_this(std::enable_shared_from_this<FlowModel> *const)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp(76,17):remark #34051: REGISTER ALLOCATION : [_ZN9FlowModelD0Ev] /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModel.hpp:76

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rbx rbp rsi rdi r15]
        
    Routine temporaries
        Total         :     268
            Global    :     108
            Local     :     160
        Regenerable   :      58
        Spilled       :       3
        
    Routine stack
        Variables     :      11 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::putToRestart(const FlowModel *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::putToRestart(const FlowModel *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [24] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(36,1)
  -> DELETED: (37,5) FlowModel::putToRestartBase(const FlowModel *, const std::shared_ptr<SAMRAI::tbox::Database> &) const


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(36,1):remark #34051: REGISTER ALLOCATION : [_ZNK9FlowModel12putToRestartERKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:36

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::putToRestartBase(const FlowModel *, const std::shared_ptr<SAMRAI::tbox::Database> &) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::putToRestartBase(const FlowModel *, const std::shared_ptr<SAMRAI::tbox::Database> &) const) [25] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(206,1)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(206,1):remark #34051: REGISTER ALLOCATION : [_ZNK9FlowModel16putToRestartBaseERKSt10shared_ptrIN6SAMRAI4tbox8DatabaseEE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:206

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rsi rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::hasRegisteredPatch(const FlowModel *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::hasRegisteredPatch(const FlowModel *) const) [26] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(46,1)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(46,1):remark #34051: REGISTER ALLOCATION : [_ZNK9FlowModel18hasRegisteredPatchEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:46

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       0
            Local     :      11
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::getRegisteredPatch(const FlowModel *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::getRegisteredPatch(const FlowModel *) const) [27] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(61,1)
  -> INLINE: (64,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (64,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (64,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (64,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (64,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (64,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (64,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (64,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (64,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (64,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (64,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (64,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (64,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (64,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (64,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(61,1):remark #34051: REGISTER ALLOCATION : [_ZNK9FlowModel18getRegisteredPatchEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:61

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rbp rsi rdi r8 r12-r15]
        
    Routine temporaries
        Total         :     301
            Global    :      76
            Local     :     225
        Regenerable   :     119
        Spilled       :       6
        
    Routine stack
        Variables     :     421 bytes*
            Reads     :      24 [5.19e+00 ~ 4.9%]
            Writes    :      51 [1.77e+01 ~ 16.7%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf(std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>> *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/iosfwd(93,11):remark #34051: REGISTER ALLOCATION : [_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEED1Ev] /usr/include/c++/4.8.5/iosfwd:93

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbp rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      11
            Local     :      10
        Regenerable   :       5
        Spilled       :       1
        
    Routine stack
        Variables     :       1 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::char_traits<char>::length(const std::char_traits<char>::char_type *)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(259,7):remark #34051: REGISTER ALLOCATION : [_ZNSt11char_traitsIcE6lengthEPKc] /usr/include/c++/4.8.5/bits/char_traits.h:259

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      12
            Global    :       7
            Local     :       5
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word *, int)

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/ext/atomicity.h(79,3):remark #34051: REGISTER ALLOCATION : [_ZN17_INTERNALe21b628e9__gnu_cxx27__exchange_and_add_dispatchEPii] /usr/include/c++/4.8.5/ext/atomicity.h:79

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      16
            Global    :       8
            Local     :       8
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::getDataContext(const FlowModel *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::getDataContext(const FlowModel *) const) [41] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(79,1)
  -> INLINE: (82,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (82,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (82,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (82,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (82,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (82,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (82,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (82,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (82,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (82,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (82,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (82,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (82,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (82,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (82,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(79,1):remark #34051: REGISTER ALLOCATION : [_ZNK9FlowModel14getDataContextEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:79

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     301
            Global    :      75
            Local     :     226
        Regenerable   :     119
        Spilled       :       6
        
    Routine stack
        Variables     :     421 bytes*
            Reads     :      24 [5.19e+00 ~ 4.9%]
            Writes    :      51 [1.77e+01 ~ 16.5%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::getSubdomainBox(const FlowModel *) const

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::getSubdomainBox(const FlowModel *) const) [42] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(97,1)
  -> INLINE: (100,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (100,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (100,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (100,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (100,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (100,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (100,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (100,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (100,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (100,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (100,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (100,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (100,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (100,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (100,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(97,1):remark #34051: REGISTER ALLOCATION : [_ZNK9FlowModel15getSubdomainBoxEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:97

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     301
            Global    :      75
            Local     :     226
        Regenerable   :     119
        Spilled       :       6
        
    Routine stack
        Variables     :     421 bytes*
            Reads     :      24 [5.19e+00 ~ 4.9%]
            Writes    :      51 [1.77e+01 ~ 16.5%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::setSubdomainBox(FlowModel *, const SAMRAI::hier::Box &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::setSubdomainBox(FlowModel *, const SAMRAI::hier::Box &)) [43] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(115,1)
  -> INLINE: (118,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (118,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (118,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (118,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (118,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const, std::ios_base::openmode)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> (118,9) std::operator<<<char, std::char_traits<char>, std::allocator<char>>(std::basic_ostream<char, std::char_traits<char>> &, const std::basic_string<char, std::char_traits<char>, std::allocator<char>> &)
  -> (118,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (118,9) std::operator<<<std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>> &, const char *)
  -> (118,9) std::basic_ostream<char, std::char_traits<char>>::operator<<(std::basic_ostream<char, std::char_traits<char>> *, std::basic_ostream<char, std::char_traits<char>>::__ostream_type &(*)(std::basic_ostream<char, std::char_traits<char>>::__ostream_type &))
  -> INLINE: (118,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::str(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::__string_type *, const std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *) const
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (118,9) std::allocator<char>::allocator(std::allocator<char> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (118,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> DELETED: (118,9) std::allocator<char>::~allocator(std::allocator<char> *)
  -> INLINE: (118,9) std::basic_string<char, std::char_traits<char>, std::allocator<char>>::~basic_string(std::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (118,9) std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream(std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>> *const)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/usr/include/c++/4.8.5/bits/char_traits.h(271,40):remark #34026: call to memcpy implemented as a call to optimized library version
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(115,1):remark #34051: REGISTER ALLOCATION : [_ZN9FlowModel15setSubdomainBoxERKN6SAMRAI4hier3BoxE] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:115

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :     304
            Global    :      76
            Local     :     228
        Regenerable   :     119
        Spilled       :       8
        
    Routine stack
        Variables     :     421 bytes*
            Reads     :      24 [6.27e+00 ~ 4.9%]
            Writes    :      51 [2.14e+01 ~ 16.8%]
        Spills        :      16 bytes*
            Reads     :       2 [1.23e-01 ~ 0.1%]
            Writes    :       2 [1.23e-01 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::setupRiemannSolver(FlowModel *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::setupRiemannSolver(FlowModel *)) [44] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(135,1)
  -> INLINE: (136,32) std::__shared_ptr<FlowModelRiemannSolver, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelRiemannSolver, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (136,34) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (136,34) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (136,34) FlowModelRiemannSolver::setFlowModel(FlowModelRiemannSolver *, const std::weak_ptr<FlowModel> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelRiemannSolver.hpp:(45,26) std::weak_ptr<FlowModel>::operator=(std::weak_ptr<FlowModel> *, const std::weak_ptr<FlowModel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (136,47) std::weak_ptr<FlowModel>::weak_ptr<FlowModel, void>(std::weak_ptr<FlowModel> *, const std::shared_ptr<FlowModel> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (136,47) std::enable_shared_from_this<FlowModel>::shared_from_this(std::shared_ptr<FlowModel> *, std::enable_shared_from_this<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/shared_ptr_base.h(236,30) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(136,47)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(246,8):remark #34028: __atomic_compare_exchange_4: non constant memory order specified. Defaulting to "success" memory order.
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(135,1):remark #34051: REGISTER ALLOCATION : [_ZN9FlowModel18setupRiemannSolverEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:135

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      27
            Local     :      39
        Regenerable   :      19
        Spilled       :       5
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       1 [4.89e+00 ~ 4.3%]
            Writes    :       1 [8.80e-01 ~ 0.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::setupBasicUtilities(FlowModel *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::setupBasicUtilities(FlowModel *)) [45] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(145,1)
  -> INLINE: (146,33) std::__shared_ptr<FlowModelBasicUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelBasicUtilities, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (146,35) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (146,35) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (146,35) FlowModelBasicUtilities::setFlowModel(FlowModelBasicUtilities *, const std::weak_ptr<FlowModel> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelBasicUtilities.hpp:(49,26) std::weak_ptr<FlowModel>::operator=(std::weak_ptr<FlowModel> *, const std::weak_ptr<FlowModel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (146,48) std::weak_ptr<FlowModel>::weak_ptr<FlowModel, void>(std::weak_ptr<FlowModel> *, const std::shared_ptr<FlowModel> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (146,48) std::enable_shared_from_this<FlowModel>::shared_from_this(std::shared_ptr<FlowModel> *, std::enable_shared_from_this<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/shared_ptr_base.h(236,30) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(146,48)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(246,8):remark #34028: __atomic_compare_exchange_4: non constant memory order specified. Defaulting to "success" memory order.
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(145,1):remark #34051: REGISTER ALLOCATION : [_ZN9FlowModel19setupBasicUtilitiesEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:145

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      27
            Local     :      39
        Regenerable   :      19
        Spilled       :       5
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       1 [4.89e+00 ~ 4.3%]
            Writes    :       1 [8.80e-01 ~ 0.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::setupDiffusiveFluxUtilities(FlowModel *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::setupDiffusiveFluxUtilities(FlowModel *)) [46] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(155,1)
  -> INLINE: (156,42) std::__shared_ptr<FlowModelDiffusiveFluxUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelDiffusiveFluxUtilities, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (156,44) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (156,44) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (156,44) FlowModelDiffusiveFluxUtilities::setFlowModel(FlowModelDiffusiveFluxUtilities *, const std::weak_ptr<FlowModel> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelDiffusiveFluxUtilities.hpp:(40,26) std::weak_ptr<FlowModel>::operator=(std::weak_ptr<FlowModel> *, const std::weak_ptr<FlowModel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (156,57) std::weak_ptr<FlowModel>::weak_ptr<FlowModel, void>(std::weak_ptr<FlowModel> *, const std::shared_ptr<FlowModel> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (156,57) std::enable_shared_from_this<FlowModel>::shared_from_this(std::shared_ptr<FlowModel> *, std::enable_shared_from_this<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/shared_ptr_base.h(236,30) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(156,57)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(246,8):remark #34028: __atomic_compare_exchange_4: non constant memory order specified. Defaulting to "success" memory order.
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(155,1):remark #34051: REGISTER ALLOCATION : [_ZN9FlowModel27setupDiffusiveFluxUtilitiesEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:155

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      27
            Local     :      39
        Regenerable   :      19
        Spilled       :       5
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       1 [4.89e+00 ~ 4.3%]
            Writes    :       1 [8.80e-01 ~ 0.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::setupSourceUtilities(FlowModel *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::setupSourceUtilities(FlowModel *)) [47] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(165,1)
  -> INLINE: (166,34) std::__shared_ptr<FlowModelSourceUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelSourceUtilities, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (166,36) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (166,36) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (166,36) FlowModelSourceUtilities::setFlowModel(FlowModelSourceUtilities *, const std::weak_ptr<FlowModel> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelSourceUtilities.hpp:(42,26) std::weak_ptr<FlowModel>::operator=(std::weak_ptr<FlowModel> *, const std::weak_ptr<FlowModel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (166,49) std::weak_ptr<FlowModel>::weak_ptr<FlowModel, void>(std::weak_ptr<FlowModel> *, const std::shared_ptr<FlowModel> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (166,49) std::enable_shared_from_this<FlowModel>::shared_from_this(std::shared_ptr<FlowModel> *, std::enable_shared_from_this<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/shared_ptr_base.h(236,30) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(166,49)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(246,8):remark #34028: __atomic_compare_exchange_4: non constant memory order specified. Defaulting to "success" memory order.
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(165,1):remark #34051: REGISTER ALLOCATION : [_ZN9FlowModel20setupSourceUtilitiesEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:165

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      27
            Local     :      39
        Regenerable   :      19
        Spilled       :       5
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       1 [4.89e+00 ~ 4.3%]
            Writes    :       1 [8.80e-01 ~ 0.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::setupImmersedBoundaryMethod(FlowModel *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::setupImmersedBoundaryMethod(FlowModel *)) [48] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(175,1)
  -> INLINE: (176,42) std::__shared_ptr<FlowModelImmersedBoundaryMethod, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelImmersedBoundaryMethod, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (176,44) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (176,44) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (176,44) FlowModelImmersedBoundaryMethod::setFlowModel(FlowModelImmersedBoundaryMethod *, const std::weak_ptr<FlowModel> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelImmersedBoundaryMethod.hpp:(52,26) std::weak_ptr<FlowModel>::operator=(std::weak_ptr<FlowModel> *, const std::weak_ptr<FlowModel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (176,57) std::weak_ptr<FlowModel>::weak_ptr<FlowModel, void>(std::weak_ptr<FlowModel> *, const std::shared_ptr<FlowModel> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (176,57) std::enable_shared_from_this<FlowModel>::shared_from_this(std::shared_ptr<FlowModel> *, std::enable_shared_from_this<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/shared_ptr_base.h(236,30) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(176,57)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(246,8):remark #34028: __atomic_compare_exchange_4: non constant memory order specified. Defaulting to "success" memory order.
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(175,1):remark #34051: REGISTER ALLOCATION : [_ZN9FlowModel27setupImmersedBoundaryMethodEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:175

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      27
            Local     :      39
        Regenerable   :      19
        Spilled       :       5
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       1 [4.89e+00 ~ 4.3%]
            Writes    :       1 [8.80e-01 ~ 0.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::setupMonitoringStatisticsUtilities(FlowModel *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::setupMonitoringStatisticsUtilities(FlowModel *)) [49] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(185,1)
  -> INLINE: (186,49) std::__shared_ptr<FlowModelMonitoringStatisticsUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelMonitoringStatisticsUtilities, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (186,51) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (186,51) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (186,51) FlowModelMonitoringStatisticsUtilities::setFlowModel(FlowModelMonitoringStatisticsUtilities *, const std::weak_ptr<FlowModel> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelMonitoringStatisticsUtilities.hpp:(33,26) std::weak_ptr<FlowModel>::operator=(std::weak_ptr<FlowModel> *, const std::weak_ptr<FlowModel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (186,64) std::weak_ptr<FlowModel>::weak_ptr<FlowModel, void>(std::weak_ptr<FlowModel> *, const std::shared_ptr<FlowModel> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (186,64) std::enable_shared_from_this<FlowModel>::shared_from_this(std::shared_ptr<FlowModel> *, std::enable_shared_from_this<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/shared_ptr_base.h(236,30) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(186,64)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(246,8):remark #34028: __atomic_compare_exchange_4: non constant memory order specified. Defaulting to "success" memory order.
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(185,1):remark #34051: REGISTER ALLOCATION : [_ZN9FlowModel34setupMonitoringStatisticsUtilitiesEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:185

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      27
            Local     :      39
        Regenerable   :      19
        Spilled       :       5
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       1 [4.89e+00 ~ 4.3%]
            Writes    :       1 [8.80e-01 ~ 0.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: FlowModel::setupStatisticsUtilities(FlowModel *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FlowModel::setupStatisticsUtilities(FlowModel *)) [50] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(195,1)
  -> INLINE: (196,38) std::__shared_ptr<FlowModelStatisticsUtilities, __gnu_cxx::_S_atomic>::operator->(const std::__shared_ptr<FlowModelStatisticsUtilities, __gnu_cxx::_S_atomic> *) const
  -> INLINE: (196,40) std::shared_ptr<FlowModel>::~shared_ptr(std::shared_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (196,40) std::weak_ptr<FlowModel>::~weak_ptr(std::weak_ptr<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (196,40) FlowModelStatisticsUtilities::setFlowModel(FlowModelStatisticsUtilities *, const std::weak_ptr<FlowModel> &)
    -> INLINE: /home/akula/HAMeRS_IB/HAMeRS/include/flow/flow_models/FlowModelStatisticsUtilities.hpp:(53,26) std::weak_ptr<FlowModel>::operator=(std::weak_ptr<FlowModel> *, const std::weak_ptr<FlowModel> &)
       {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (196,53) std::weak_ptr<FlowModel>::weak_ptr<FlowModel, void>(std::weak_ptr<FlowModel> *, const std::shared_ptr<FlowModel> &)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}
  -> INLINE: (196,53) std::enable_shared_from_this<FlowModel>::shared_from_this(std::shared_ptr<FlowModel> *, std::enable_shared_from_this<FlowModel> *)
     {{ Inlining of routines from system headers is omitted. Use -qopt-report=3 to view full report. }}


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/shared_ptr_base.h(236,30) inlined into /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(196,53)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

/usr/include/c++/4.8.5/bits/shared_ptr_base.h(246,8):remark #34028: __atomic_compare_exchange_4: non constant memory order specified. Defaulting to "success" memory order.
/home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp(195,1):remark #34051: REGISTER ALLOCATION : [_ZN9FlowModel24setupStatisticsUtilitiesEv] /home/akula/HAMeRS_IB/HAMeRS/src/flow/flow_models/FlowModel.cpp:195

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r12 r14-r15]
        
    Routine temporaries
        Total         :      66
            Global    :      27
            Local     :      39
        Regenerable   :      19
        Spilled       :       5
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       1 [4.89e+00 ~ 4.3%]
            Writes    :       1 [8.80e-01 ~ 0.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::tbox::Dimension::getValue(const SAMRAI::tbox::Dimension *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/tbox/Dimension.h(137,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator*=(SAMRAI::hier::IntVector *, int)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(555,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::operator-(SAMRAI::hier::IntVector *, const SAMRAI::hier::IntVector *) const) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(715,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::getZero(const SAMRAI::tbox::Dimension &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1132,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::IntVector::getOne(const SAMRAI::tbox::Dimension &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/IntVector.h(1145,4)

===========================================================================

Begin optimization report for: SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (SAMRAI::hier::Box::getEmptyBox(const SAMRAI::tbox::Dimension &)) /home/akula/libraries/SAMRAI/include/SAMRAI/hier/Box.h(1347,4)

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [251] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [__sti__$E] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       7
            Local     :       6
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
