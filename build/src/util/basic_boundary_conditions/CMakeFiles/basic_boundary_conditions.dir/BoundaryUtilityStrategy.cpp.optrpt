Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: BoundaryUtilityStrategy::BoundaryUtilityStrategy(BoundaryUtilityStrategy *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (BoundaryUtilityStrategy::BoundaryUtilityStrategy(BoundaryUtilityStrategy *)) [1] /home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp(15,1)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp(15,1):remark #34051: REGISTER ALLOCATION : [_ZN23BoundaryUtilityStrategyC1Ev] /home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp:15

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: BoundaryUtilityStrategy::BoundaryUtilityStrategy(BoundaryUtilityStrategy *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (BoundaryUtilityStrategy::BoundaryUtilityStrategy(BoundaryUtilityStrategy *const)) [2] /home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp(14,26)
  -> INLINE: (14,26) BoundaryUtilityStrategy::BoundaryUtilityStrategy(BoundaryUtilityStrategy *)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp(14,26):remark #34051: REGISTER ALLOCATION : [_ZN23BoundaryUtilityStrategyC2Ev] /home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp:14

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: BoundaryUtilityStrategy::~BoundaryUtilityStrategy(BoundaryUtilityStrategy *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (BoundaryUtilityStrategy::~BoundaryUtilityStrategy(BoundaryUtilityStrategy *)) [3] /home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp(19,1)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp(19,1):remark #34051: REGISTER ALLOCATION : [_ZN23BoundaryUtilityStrategyD1Ev] /home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp:19

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: BoundaryUtilityStrategy::~BoundaryUtilityStrategy(BoundaryUtilityStrategy *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (BoundaryUtilityStrategy::~BoundaryUtilityStrategy(BoundaryUtilityStrategy *const)) [4] /home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp(18,26)
  -> INLINE: (18,26) BoundaryUtilityStrategy::~BoundaryUtilityStrategy(BoundaryUtilityStrategy *)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp(18,26):remark #34051: REGISTER ALLOCATION : [_ZN23BoundaryUtilityStrategyD0Ev] /home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp:18

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: BoundaryUtilityStrategy::~BoundaryUtilityStrategy(BoundaryUtilityStrategy *const)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (BoundaryUtilityStrategy::~BoundaryUtilityStrategy(BoundaryUtilityStrategy *const)) [5] /home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp(18,26)
  -> INLINE: (18,26) BoundaryUtilityStrategy::~BoundaryUtilityStrategy(BoundaryUtilityStrategy *)


    Report from: Code generation optimizations [cg]

/home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp(18,26):remark #34051: REGISTER ALLOCATION : [_ZN23BoundaryUtilityStrategyD2Ev] /home/akula/HAMeRS_IB/HAMeRS/src/util/basic_boundary_conditions/BoundaryUtilityStrategy.cpp:18

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    1[ rdi]
        
    Routine temporaries
        Total         :       8
            Global    :       0
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [6] <compiler generated>


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [__sti__$E] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       7
            Local     :       6
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
